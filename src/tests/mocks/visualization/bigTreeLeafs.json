{
	"tool": "Khiops",
	"version": "10.1.0",
	"shortDescription": "",
	"modelingReport": {
		"reportType": "Modeling",
		"summary": {
			"dictionary": "Accidents",
			"database": "c:\\APPLIC~1\\src\\tmp\\pykhiops\\KhiopsClassifier_fit_xlddrq_l\\Accidents.txt",
			"samplePercentage": 100,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity"
		},
		"trainedPredictors": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"variables": 23
			}
		],
		"trainedPredictorsDetails": {
			"R1": {
				"selectedVariables": [
					{
						"preparedName": "PTree_9",
						"name": "Tree_9",
						"level": 0.0977899,
						"weight": 0.34317,
						"importance": 0.18319
					},
					{
						"preparedName": "PTree_1",
						"name": "Tree_1",
						"level": 0.097845,
						"weight": 0.317413,
						"importance": 0.176231
					},
					{
						"preparedName": "PDepartment",
						"name": "Department",
						"level": 0.0486468,
						"weight": 0.435089,
						"importance": 0.145484
					},
					{
						"preparedName": "PTree_8",
						"name": "Tree_8",
						"level": 0.0937387,
						"weight": 0.124298,
						"importance": 0.107942
					},
					{
						"preparedName": "PTree_2",
						"name": "Tree_2",
						"level": 0.0482014,
						"weight": 0.14212,
						"importance": 0.0827672
					},
					{
						"preparedName": "PTree_10",
						"name": "Tree_10",
						"level": 0.0647891,
						"weight": 0.0630188,
						"importance": 0.0638978
					},
					{
						"preparedName": "PCommune",
						"name": "Commune",
						"level": 0.0141719,
						"weight": 0.172394,
						"importance": 0.0494282
					},
					{
						"preparedName": "PMode(Vehicles.Maneuver)",
						"name": "Mode(Vehicles.Maneuver)",
						"level": 0.0163995,
						"weight": 0.146027,
						"importance": 0.0489363
					},
					{
						"preparedName": "PLight",
						"name": "Light",
						"level": 0.0253166,
						"weight": 0.089386,
						"importance": 0.0475705
					},
					{
						"preparedName": "PPostalAddress",
						"name": "PostalAddress",
						"level": 0.00324784,
						"weight": 0.602081,
						"importance": 0.0442206
					},
					{
						"preparedName": "PMode(Vehicles.Category)",
						"name": "Mode(Vehicles.Category)",
						"level": 0.00414105,
						"weight": 0.410675,
						"importance": 0.0412387
					},
					{
						"preparedName": "PCountDistinct(Vehicles.Direction)",
						"name": "CountDistinct(Vehicles.Direction)",
						"level": 0.00308714,
						"weight": 0.254425,
						"importance": 0.0280258
					},
					{
						"preparedName": "PCount(Vehicles) where Category = Car<=3.5T",
						"name": "Count(Vehicles) where Category = Car<=3.5T",
						"level": 0.000828739,
						"weight": 0.9263,
						"importance": 0.0277067
					},
					{
						"preparedName": "PMean(Vehicles.PassengerNumber) where Direction = Decreasing",
						"name": "Mean(Vehicles.PassengerNumber) where Direction = Decreasing",
						"level": 0.00362704,
						"weight": 0.141144,
						"importance": 0.022626
					},
					{
						"preparedName": "PWeather",
						"name": "Weather",
						"level": 0.00118246,
						"weight": 0.418488,
						"importance": 0.0222451
					},
					{
						"preparedName": "PIntersectionType",
						"name": "IntersectionType",
						"level": 0.0107421,
						"weight": 0.0317688,
						"importance": 0.0184733
					},
					{
						"preparedName": "PCount(Vehicles) where ImpactPoint = Front",
						"name": "Count(Vehicles) where ImpactPoint = Front",
						"level": 0.00122198,
						"weight": 0.219269,
						"importance": 0.0163689
					},
					{
						"preparedName": "PStdDev(Vehicles.PassengerNumber) where Direction = Decreasing",
						"name": "StdDev(Vehicles.PassengerNumber) where Direction = Decreasing",
						"level": 0.00362704,
						"weight": 0.0571594,
						"importance": 0.0143986
					},
					{
						"preparedName": "PCount(Vehicles) where Direction not in {Increasing, Decreasing}",
						"name": "Count(Vehicles) where Direction not in {Increasing, Decreasing}",
						"level": 0.00300952,
						"weight": 0.0630188,
						"importance": 0.0137716
					},
					{
						"preparedName": "PSum(Vehicles.PassengerNumber) where Direction not in {Increasing, Decreasing}",
						"name": "Sum(Vehicles.PassengerNumber) where Direction not in {Increasing, Decreasing}",
						"level": 0.000458976,
						"weight": 0.305206,
						"importance": 0.0118356
					},
					{
						"preparedName": "PInAgglomeration",
						"name": "InAgglomeration",
						"level": 0.0617601,
						"weight": 0.000518799,
						"importance": 0.00566048
					},
					{
						"preparedName": "PCollisionType",
						"name": "CollisionType",
						"level": 0.0366921,
						"weight": 0.000518799,
						"importance": 0.00436301
					},
					{
						"preparedName": "PMin(Vehicles.PassengerNumber) where Direction = Decreasing",
						"name": "Min(Vehicles.PassengerNumber) where Direction = Decreasing",
						"level": 0.00362704,
						"weight": 0.000518799,
						"importance": 0.00137175
					}
				]
			}
		}
	},
	"trainEvaluationReport": {
		"reportType": "Evaluation",
		"evaluationType": "Train",
		"summary": {
			"dictionary": "Accidents",
			"database": "c:\\APPLIC~1\\src\\tmp\\pykhiops\\KhiopsClassifier_fit_xlddrq_l\\Accidents.txt",
			"samplePercentage": 100,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 40448,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity"
		},
		"predictorsPerformance": [
			{
				"rank": "R1",
				"type": "Classifier",
				"family": "Selective Naive Bayes",
				"name": "Selective Naive Bayes",
				"accuracy": 0.945041,
				"compression": 0.174172,
				"auc": 0.818371
			}
		],
		"predictorsDetailedPerformance": {
			"R1": {
				"confusionMatrix": {
					"values": ["Lethal","NonLethal"],
					"matrix": [
						[0,0],
						[2223,38225]
					]
				}
			}
		},
		"liftCurves": [
			{
				"targetValue": "Lethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,1.81952,3.63905,5.45857,7.27809,9.09762,10.9171,12.7367,14.5562,16.3757,18.1952,20.0148,21.8343,23.6538,25.4733,27.2928,29.1124,30.9319,32.7514,34.5709,36.3905,38.21,40.0295,41.849,43.6686,45.4881,47.3076,49.1271,50.9466,52.7662,54.5857,56.4052,58.2247,60.0443,61.8638,63.6833,65.5028,67.3224,69.1419,70.9614,72.7809,74.6004,76.42,78.2395,80.059,81.8785,83.6981,85.5176,87.3371,89.1566,90.9762,92.7957,94.6152,96.4347,98.2543,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.809717,1.48448,2.39964,3.24762,3.91363,4.52937,5.08322,5.66802,6.20927,6.88259,7.41035,7.87224,8.32209,8.77601,9.1318,9.44669,9.9865,10.3928,10.7512,11.2892,11.7409,12.1586,12.7305,13.2704,13.5403,13.7652,14.4399,14.7548,15.1034,15.6095,15.9644,16.2994,16.7244,17.3189,18.0387,18.4435,19.1442,19.6142,20.1529,20.5578,21.0445,21.5842,21.9523,22.3122,22.8556,23.2569,23.8879,24.2242,24.6492,25.0742,25.3261,25.8659,26.1808,26.4058,26.8106,27.2155,27.5095,27.8895,28.1152,28.4714,28.7449,29.2398,29.6896,30.0045,30.3644,30.8553,31.2643,31.6898,31.9388,32.2699,32.5236,32.8573,33.1984,33.4233,33.6032,33.9181,34.1355,34.5019,34.8941,35.2575,35.594,36.0205,36.144,36.4372,36.7521,36.9321,37.157,37.4719,37.7868,37.9217,38.2366,38.6415,38.7482,38.9114,39.1363,39.4062,39.6512,39.9888,40.3509,40.5593,40.8007,41.0049,41.2056,41.4305,41.8354,42.0153,42.2402,42.6451,42.825,43.2299,43.4098,43.5897,43.7697,43.9496,44.1745,44.3545,44.6244,44.7143,45.1192,45.2991,45.4477,45.749,45.794,46.3338,46.5587,46.8736,47.0985,47.3389,47.5933,47.9082,48.3131,48.493,48.538,48.8529,49.0328,49.3027,49.5726,49.8875,50.0225,50.3248,50.6523,51.0121,51.2371,51.3501,51.552,51.9302,52.2685,52.4966,52.7665,52.8565,53.0364,53.3063,53.7112,53.8911,54.206,54.386,54.716,55.141,55.3756,55.5106,55.7805,56.0054,56.2303,56.4552,56.6067,56.8601,57.2117,57.3099,57.5798,57.857,58.1646,58.4345,58.6595,58.9744,59.1993,59.3792,59.5287,59.8291,60.009,60.0238,60.1889,60.2789,60.4588,60.7287,60.9087,61.2686,61.4035,61.6284,61.7486,62.0333,62.1233,62.3482,62.3932,62.4831,62.5731,62.7081,62.843,62.888,63.2479,63.4728,63.7427,64.0126,64.1026,64.3901,64.5074,64.7773,64.8673,65.0472,65.1206,65.3483,65.4521,65.587,65.677,65.9019,66.1718,66.4313,66.5816,66.7117,66.8916,67.1165,67.1615,67.2964,67.4517,67.5664,67.7913,68.0612,68.1511,68.1511,68.2411,68.3311,68.4211,68.556,68.601,68.7359,68.7935,69.0058,69.0958,69.1858,69.2308,69.3921,69.6356,69.7256,69.9055,69.9505,70.0405,70.1305,70.3104,70.4453,70.5353,70.7602,71.0751,71.345,71.345,71.48,71.6599,71.7949,71.8848,71.9298,72.0648,72.1547,72.2897,72.4247,72.5146,72.6618,72.7395,72.8745,73.0094,73.1444,73.2794,73.5043,73.6842,73.8127,73.9091,74.179,74.278,74.4489,74.5839,74.5839,74.7188,74.8988,75.1237,75.1237,75.1687,75.3936,75.3936,75.5286,75.6185,75.7535,75.8435,76.0234,76.0234,76.1134,76.2933,76.2933,76.3383,76.4732,76.6532,76.7431,76.8781,76.9681,76.9681,77.013,77.058,77.148,77.193,77.3279,77.3729,77.3729,77.4629,77.5529,77.6878,77.8127,77.8733,77.9577,78.0305,78.1826,78.4076,78.4525,78.4975,78.6325,78.6775,78.7674,78.9474,78.9474,78.9474,79.2244,79.3072,79.3814,79.4422,79.4872,79.5322,79.6671,79.7121,79.7121,79.8021,79.8471,79.892,80.072,80.1619,80.3041,80.3419,80.4318,80.5668,80.6118,80.7719,80.9267,80.9267,80.9267,80.9717,81.0616,81.0616,81.1516,81.3156,81.4665,81.4665,81.7364,81.8264,82.0063,82.0513,82.0605,82.2312,82.2312,82.2762,82.5011,82.6361,82.6361,82.726,82.861,82.951,82.996,83.0409,83.1759,83.2209,83.3558,83.4008,83.4908,83.6257,83.6707,83.7157,83.8057,83.8956,83.8956,84.0306,84.1206,84.1206,84.1655,84.2555,84.3005,84.3335,84.4354,84.4804,84.4804,84.5704,84.7054,84.9753,84.9753,85.0652,85.1552,85.2002,85.2901,85.4251,85.4701,85.5151,85.605,85.65,85.65,85.785,85.785,85.785,85.83,85.83,85.8749,85.8749,85.9199,85.9649,85.9649,86.0099,86.0549,86.0999,86.2798,86.3698,86.3698,86.4597,86.5497,86.5947,86.5947,86.6847,86.7746,86.8646,86.8646,86.8646,86.9546,86.9996,87.0445,87.0895,87.1345,87.1345,87.1345,87.1795,87.3594,87.3594,87.3594,87.4494,87.4944,87.5394,87.5843,87.6743,87.6743,87.7193,87.8363,87.8543,87.8543,87.9031,87.9892,88.0342,88.1242,88.1242,88.2591,88.2591,88.3041,88.3941,88.439,88.529,88.574,88.6152,88.619,88.664,88.664,88.7539,88.7989,88.8439,88.8439,88.8439,88.8439,88.9339,88.9339,89.0066,89.0238,89.0688,89.1138,89.2038,89.2459,89.2937,89.3387,89.3387,89.3387,89.4287,89.4737,89.5187,89.6086,89.6986,89.7436,89.7886,89.8454,89.9685,90.0585,90.2384,90.3284,90.3734,90.3734,90.3734,90.3734,90.4184,90.4184,90.4184,90.4633,90.5533,90.5533,90.5983,90.6433,90.7782,90.8682,90.9132,90.9132,90.9132,90.9132,90.9132,91.0481,91.0931,91.0931,91.1381,91.1831,91.318,91.408,91.408,91.408,91.453,91.498,91.6779,91.6779,91.6779,91.6779,91.7855,91.8129,91.8578,91.9028,91.9028,91.9478,91.9928,92.0378,92.1278,92.1727,92.1727,92.2177,92.2627,92.2627,92.2627,92.3527,92.4426,92.4876,92.4876,92.4876,92.5326,92.5776,92.6226,92.6676,92.6676,92.7126,92.7126,92.7126,92.7575,92.8025,92.9825,92.9825,93.1174,93.1174,93.1174,93.1624,93.2074,93.2524,93.4323,93.4323,93.4773,93.4773,93.6572,93.7022,93.7472,93.7472,93.7472,93.7922,93.7922,93.8372,93.8372,93.8821,93.9289,93.9721,94.0171,94.0171,94.0621,94.1071,94.1071,94.152,94.152,94.197,94.242,94.287,94.377,94.377,94.377,94.377,94.377,94.377,94.377,94.377,94.3875,94.422,94.5119,94.5569,94.5569,94.6019,94.6019,94.6019,94.6019,94.6469,94.6469,94.6469,94.6919,94.6919,94.6919,94.7368,94.7368,94.8268,94.8718,94.8718,94.9168,94.9168,94.929,94.9618,94.9618,94.9618,94.9618,95.0067,95.0067,95.0967,95.0967,95.0967,95.1867,95.1867,95.1867,95.2317,95.2317,95.2767,95.2767,95.2767,95.3666,95.3666,95.4951,95.5466,95.6815,95.6815,95.8165,95.8165,95.8165,95.8614,95.8614,95.9164,95.9514,95.9964,96.0414,96.0864,96.1314,96.1314,96.1314,96.1314,96.1314,96.1314,96.1314,96.1314,96.1763,96.1763,96.2663,96.2663,96.3113,96.3113,96.3563,96.4013,96.4912,96.4912,96.5362,96.5362,96.5812,96.5812,96.5812,96.6262,96.6262,96.6712,96.6712,96.7161,96.8061,96.8511,96.8767,96.8961,96.8961,96.8961,96.8961,96.9861,97.031,97.076,97.166,97.166,97.2036,97.256,97.256,97.256,97.256,97.256,97.256,97.256,97.3009,97.3152,97.3459,97.4809,97.4809,97.5259,97.5709,97.5709,97.5709,97.5709,97.5709,97.5709,97.5709,97.5709,97.6158,97.6158,97.6158,97.6158,97.6158,97.6158,97.6158,97.6608,97.6608,97.7058,97.7058,97.7058,97.7058,97.7508,97.7508,97.8408,97.8857,97.8857,97.9307,97.9307,97.9757,97.9757,98.0207,98.0207,98.0207,98.0657,98.1107,98.1107,98.1107,98.1107,98.1107,98.1107,98.1107,98.1556,98.2006,98.2006,98.2006,98.2456,98.2456,98.2456,98.2456,98.2456,98.2456,98.2456,98.2456,98.2906,98.2959,98.3356,98.3806,98.4256,98.4256,98.4256,98.4256,98.4256,98.4256,98.4705,98.4705,98.4948,98.5155,98.5155,98.5155,98.5155,98.5155,98.5605,98.5605,98.5605,98.6055,98.6055,98.6055,98.6055,98.6505,98.6505,98.6505,98.6505,98.6505,98.6505,98.6505,98.6505,98.6505,98.6505,98.7404,98.7404,98.7854,98.7854,98.7854,98.7854,98.7854,98.7854,98.8304,98.8304,98.8304,98.8304,98.8304,98.8304,98.8304,98.8304,98.8304,98.9204,98.9204,98.9654,99.0103,99.0103,99.0103,99.0103,99.0553,99.0553,99.0553,99.0553,99.0553,99.0553,99.0553,99.0553,99.1003,99.1003,99.1003,99.1003,99.1003,99.1453,99.1453,99.1453,99.1903,99.1903,99.1903,99.1903,99.1903,99.2353,99.2353,99.2353,99.2353,99.2353,99.2803,99.2803,99.2803,99.3252,99.3252,99.3252,99.3252,99.3252,99.3252,99.3332,99.3702,99.3702,99.3702,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4152,99.4602,99.4602,99.4602,99.4602,99.4602,99.4602,99.4602,99.5052,99.5052,99.5052,99.5052,99.5052,99.5052,99.5052,99.5502,99.5502,99.5502,99.5502,99.5502,99.5502,99.5502,99.5502,99.5502,99.5951,99.5951,99.5951,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6401,99.6404,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.6851,99.7301,99.7301,99.7301,99.7301,99.7301,99.7301,99.7301,99.7751,99.7751,99.7751,99.7751,99.7751,99.7751,99.7751,99.7751,99.7751,99.7751,99.8201,99.8201,99.8201,99.865,99.865,99.865,99.865,99.865,99.865,99.865,99.865,99.865,99.865,99.91,99.91,99.91,99.91,99.91,99.91,99.91,99.955,99.955,99.955,99.955,99.9883,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					}
				]
			},
			{
				"targetValue": "NonLethal",
				"curves": [
					{
						"classifier": "Optimal",
						"values": [0,0.105816,0.211631,0.317447,0.423262,0.529078,0.634893,0.740709,0.846525,0.95234,1.05816,1.16397,1.26979,1.3756,1.48142,1.58723,1.69305,1.79886,1.90468,2.0105,2.11631,2.22213,2.32794,2.43376,2.53957,2.64539,2.7512,2.85702,2.96284,3.06865,3.17447,3.28028,3.3861,3.49191,3.59773,3.70354,3.80936,3.91518,4.02099,4.12681,4.23262,4.33844,4.44425,4.55007,4.65588,4.7617,4.86752,4.97333,5.07915,5.18496,5.29078,5.39659,5.50241,5.60822,5.71404,5.81986,5.92567,6.03149,6.1373,6.24312,6.34893,6.45475,6.56057,6.66638,6.7722,6.87801,6.98383,7.08964,7.19546,7.30127,7.40709,7.51291,7.61872,7.72454,7.83035,7.93617,8.04198,8.1478,8.25361,8.35943,8.46525,8.57106,8.67688,8.78269,8.88851,8.99432,9.10014,9.20595,9.31177,9.41759,9.5234,9.62922,9.73503,9.84085,9.94666,10.0525,10.1583,10.2641,10.3699,10.4757,10.5816,10.6874,10.7932,10.899,11.0048,11.1106,11.2164,11.3223,11.4281,11.5339,11.6397,11.7455,11.8513,11.9572,12.063,12.1688,12.2746,12.3804,12.4862,12.5921,12.6979,12.8037,12.9095,13.0153,13.1211,13.2269,13.3328,13.4386,13.5444,13.6502,13.756,13.8618,13.9677,14.0735,14.1793,14.2851,14.3909,14.4967,14.6025,14.7084,14.8142,14.92,15.0258,15.1316,15.2374,15.3433,15.4491,15.5549,15.6607,15.7665,15.8723,15.9782,16.084,16.1898,16.2956,16.4014,16.5072,16.613,16.7189,16.8247,16.9305,17.0363,17.1421,17.2479,17.3538,17.4596,17.5654,17.6712,17.777,17.8828,17.9886,18.0945,18.2003,18.3061,18.4119,18.5177,18.6235,18.7294,18.8352,18.941,19.0468,19.1526,19.2584,19.3642,19.4701,19.5759,19.6817,19.7875,19.8933,19.9991,20.105,20.2108,20.3166,20.4224,20.5282,20.634,20.7399,20.8457,20.9515,21.0573,21.1631,21.2689,21.3747,21.4806,21.5864,21.6922,21.798,21.9038,22.0096,22.1155,22.2213,22.3271,22.4329,22.5387,22.6445,22.7503,22.8562,22.962,23.0678,23.1736,23.2794,23.3852,23.4911,23.5969,23.7027,23.8085,23.9143,24.0201,24.1259,24.2318,24.3376,24.4434,24.5492,24.655,24.7608,24.8667,24.9725,25.0783,25.1841,25.2899,25.3957,25.5016,25.6074,25.7132,25.819,25.9248,26.0306,26.1364,26.2423,26.3481,26.4539,26.5597,26.6655,26.7713,26.8772,26.983,27.0888,27.1946,27.3004,27.4062,27.512,27.6179,27.7237,27.8295,27.9353,28.0411,28.1469,28.2528,28.3586,28.4644,28.5702,28.676,28.7818,28.8876,28.9935,29.0993,29.2051,29.3109,29.4167,29.5225,29.6284,29.7342,29.84,29.9458,30.0516,30.1574,30.2633,30.3691,30.4749,30.5807,30.6865,30.7923,30.8981,31.004,31.1098,31.2156,31.3214,31.4272,31.533,31.6389,31.7447,31.8505,31.9563,32.0621,32.1679,32.2737,32.3796,32.4854,32.5912,32.697,32.8028,32.9086,33.0145,33.1203,33.2261,33.3319,33.4377,33.5435,33.6493,33.7552,33.861,33.9668,34.0726,34.1784,34.2842,34.3901,34.4959,34.6017,34.7075,34.8133,34.9191,35.025,35.1308,35.2366,35.3424,35.4482,35.554,35.6598,35.7657,35.8715,35.9773,36.0831,36.1889,36.2947,36.4006,36.5064,36.6122,36.718,36.8238,36.9296,37.0354,37.1413,37.2471,37.3529,37.4587,37.5645,37.6703,37.7762,37.882,37.9878,38.0936,38.1994,38.3052,38.4111,38.5169,38.6227,38.7285,38.8343,38.9401,39.0459,39.1518,39.2576,39.3634,39.4692,39.575,39.6808,39.7867,39.8925,39.9983,40.1041,40.2099,40.3157,40.4215,40.5274,40.6332,40.739,40.8448,40.9506,41.0564,41.1623,41.2681,41.3739,41.4797,41.5855,41.6913,41.7971,41.903,42.0088,42.1146,42.2204,42.3262,42.432,42.5379,42.6437,42.7495,42.8553,42.9611,43.0669,43.1728,43.2786,43.3844,43.4902,43.596,43.7018,43.8076,43.9135,44.0193,44.1251,44.2309,44.3367,44.4425,44.5484,44.6542,44.76,44.8658,44.9716,45.0774,45.1832,45.2891,45.3949,45.5007,45.6065,45.7123,45.8181,45.924,46.0298,46.1356,46.2414,46.3472,46.453,46.5588,46.6647,46.7705,46.8763,46.9821,47.0879,47.1937,47.2996,47.4054,47.5112,47.617,47.7228,47.8286,47.9345,48.0403,48.1461,48.2519,48.3577,48.4635,48.5693,48.6752,48.781,48.8868,48.9926,49.0984,49.2042,49.3101,49.4159,49.5217,49.6275,49.7333,49.8391,49.9449,50.0508,50.1566,50.2624,50.3682,50.474,50.5798,50.6857,50.7915,50.8973,51.0031,51.1089,51.2147,51.3205,51.4264,51.5322,51.638,51.7438,51.8496,51.9554,52.0613,52.1671,52.2729,52.3787,52.4845,52.5903,52.6962,52.802,52.9078,53.0136,53.1194,53.2252,53.331,53.4369,53.5427,53.6485,53.7543,53.8601,53.9659,54.0718,54.1776,54.2834,54.3892,54.495,54.6008,54.7066,54.8125,54.9183,55.0241,55.1299,55.2357,55.3415,55.4474,55.5532,55.659,55.7648,55.8706,55.9764,56.0822,56.1881,56.2939,56.3997,56.5055,56.6113,56.7171,56.823,56.9288,57.0346,57.1404,57.2462,57.352,57.4579,57.5637,57.6695,57.7753,57.8811,57.9869,58.0927,58.1986,58.3044,58.4102,58.516,58.6218,58.7276,58.8335,58.9393,59.0451,59.1509,59.2567,59.3625,59.4683,59.5742,59.68,59.7858,59.8916,59.9974,60.1032,60.2091,60.3149,60.4207,60.5265,60.6323,60.7381,60.844,60.9498,61.0556,61.1614,61.2672,61.373,61.4788,61.5847,61.6905,61.7963,61.9021,62.0079,62.1137,62.2196,62.3254,62.4312,62.537,62.6428,62.7486,62.8544,62.9603,63.0661,63.1719,63.2777,63.3835,63.4893,63.5952,63.701,63.8068,63.9126,64.0184,64.1242,64.23,64.3359,64.4417,64.5475,64.6533,64.7591,64.8649,64.9708,65.0766,65.1824,65.2882,65.394,65.4998,65.6057,65.7115,65.8173,65.9231,66.0289,66.1347,66.2405,66.3464,66.4522,66.558,66.6638,66.7696,66.8754,66.9813,67.0871,67.1929,67.2987,67.4045,67.5103,67.6161,67.722,67.8278,67.9336,68.0394,68.1452,68.251,68.3569,68.4627,68.5685,68.6743,68.7801,68.8859,68.9917,69.0976,69.2034,69.3092,69.415,69.5208,69.6266,69.7325,69.8383,69.9441,70.0499,70.1557,70.2615,70.3674,70.4732,70.579,70.6848,70.7906,70.8964,71.0022,71.1081,71.2139,71.3197,71.4255,71.5313,71.6371,71.743,71.8488,71.9546,72.0604,72.1662,72.272,72.3778,72.4837,72.5895,72.6953,72.8011,72.9069,73.0127,73.1186,73.2244,73.3302,73.436,73.5418,73.6476,73.7534,73.8593,73.9651,74.0709,74.1767,74.2825,74.3883,74.4942,74.6,74.7058,74.8116,74.9174,75.0232,75.1291,75.2349,75.3407,75.4465,75.5523,75.6581,75.7639,75.8698,75.9756,76.0814,76.1872,76.293,76.3988,76.5047,76.6105,76.7163,76.8221,76.9279,77.0337,77.1395,77.2454,77.3512,77.457,77.5628,77.6686,77.7744,77.8803,77.9861,78.0919,78.1977,78.3035,78.4093,78.5151,78.621,78.7268,78.8326,78.9384,79.0442,79.15,79.2559,79.3617,79.4675,79.5733,79.6791,79.7849,79.8908,79.9966,80.1024,80.2082,80.314,80.4198,80.5256,80.6315,80.7373,80.8431,80.9489,81.0547,81.1605,81.2664,81.3722,81.478,81.5838,81.6896,81.7954,81.9012,82.0071,82.1129,82.2187,82.3245,82.4303,82.5361,82.642,82.7478,82.8536,82.9594,83.0652,83.171,83.2769,83.3827,83.4885,83.5943,83.7001,83.8059,83.9117,84.0176,84.1234,84.2292,84.335,84.4408,84.5466,84.6525,84.7583,84.8641,84.9699,85.0757,85.1815,85.2873,85.3932,85.499,85.6048,85.7106,85.8164,85.9222,86.0281,86.1339,86.2397,86.3455,86.4513,86.5571,86.6629,86.7688,86.8746,86.9804,87.0862,87.192,87.2978,87.4037,87.5095,87.6153,87.7211,87.8269,87.9327,88.0386,88.1444,88.2502,88.356,88.4618,88.5676,88.6734,88.7793,88.8851,88.9909,89.0967,89.2025,89.3083,89.4142,89.52,89.6258,89.7316,89.8374,89.9432,90.049,90.1549,90.2607,90.3665,90.4723,90.5781,90.6839,90.7898,90.8956,91.0014,91.1072,91.213,91.3188,91.4246,91.5305,91.6363,91.7421,91.8479,91.9537,92.0595,92.1654,92.2712,92.377,92.4828,92.5886,92.6944,92.8003,92.9061,93.0119,93.1177,93.2235,93.3293,93.4351,93.541,93.6468,93.7526,93.8584,93.9642,94.07,94.1759,94.2817,94.3875,94.4933,94.5991,94.7049,94.8107,94.9166,95.0224,95.1282,95.234,95.3398,95.4456,95.5515,95.6573,95.7631,95.8689,95.9747,96.0805,96.1863,96.2922,96.398,96.5038,96.6096,96.7154,96.8212,96.9271,97.0329,97.1387,97.2445,97.3503,97.4561,97.562,97.6678,97.7736,97.8794,97.9852,98.091,98.1968,98.3027,98.4085,98.5143,98.6201,98.7259,98.8317,98.9376,99.0434,99.1492,99.255,99.3608,99.4666,99.5724,99.6783,99.7841,99.8899,99.9957,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100]
					},
					{
						"classifier": "Selective Naive Bayes",
						"values": [0,0.105816,0.211631,0.317447,0.423262,0.529078,0.634893,0.740709,0.846525,0.95234,1.05816,1.16397,1.26979,1.3756,1.48142,1.58723,1.69305,1.79886,1.90468,2.0105,2.11631,2.22213,2.32794,2.43308,2.53696,2.64277,2.74859,2.8544,2.9576,3.06342,3.16923,3.27505,3.38087,3.48668,3.5925,3.6957,3.80151,3.90733,4.01314,4.11896,4.22477,4.33059,4.43641,4.54222,4.64804,4.75124,4.85705,4.96287,5.06607,5.17188,5.2777,5.38351,5.48933,5.59514,5.70096,5.80678,5.91259,6.01841,6.12161,6.22742,6.33324,6.43905,6.54487,6.65068,6.7565,6.8597,6.96551,7.07133,7.17715,7.28296,7.38878,7.49459,7.60041,7.70622,7.81204,7.91785,8.02367,8.12949,8.2327,8.3385,8.44432,8.55013,8.65595,8.76176,8.86758,8.97339,9.07921,9.18503,9.29084,9.39666,9.50247,9.60829,9.7141,9.8173,9.92312,10.0289,10.1321,10.2379,10.3438,10.4496,10.5554,10.6612,10.767,10.8728,10.9787,11.0819,11.1877,11.2935,11.3993,11.5051,11.6109,11.7168,11.82,11.9258,12.0316,12.1374,12.2432,12.349,12.4548,12.558,12.6639,12.7697,12.8755,12.9813,13.0871,13.1929,13.2988,13.4046,13.5104,13.6162,13.722,13.8278,13.9336,14.0395,14.1453,14.2485,14.3543,14.4601,14.5638,14.6691,14.7749,14.8808,14.9866,15.0924,15.1982,15.3014,15.4072,15.513,15.6162,15.722,15.8279,15.9337,16.0395,16.1427,16.2485,16.3543,16.4601,16.566,16.6692,16.775,16.8808,16.984,17.0898,17.1956,17.3014,17.4072,17.5104,17.6163,17.7221,17.8279,17.9337,18.0395,18.1453,18.2512,18.3544,18.4602,18.566,18.6718,18.775,18.8782,18.984,19.0846,19.1904,19.2962,19.402,19.5079,19.6137,19.7195,19.8253,19.9311,20.0343,20.1401,20.246,20.3518,20.4576,20.5634,20.6666,20.7724,20.873,20.9788,21.0846,21.1904,21.2963,21.4021,21.5079,21.6137,21.7195,21.8253,21.9285,22.0344,22.1402,22.246,22.3492,22.455,22.5608,22.664,22.7698,22.8756,22.9815,23.0873,23.1919,23.2963,23.4021,23.5053,23.6111,23.7169,23.8228,23.9286,24.0344,24.1376,24.2408,24.3443,24.4498,24.553,24.6588,24.7646,24.8704,24.9763,25.0821,25.1879,25.2937,25.3969,25.5027,25.6085,25.7117,25.8149,25.9208,26.0266,26.1324,26.2382,26.344,26.4498,26.553,26.6562,26.762,26.8679,26.9711,27.0769,27.1801,27.2859,27.3891,27.4949,27.5981,27.6987,27.8045,27.9077,28.0135,28.1193,28.2252,28.3284,28.4342,28.5374,28.6432,28.749,28.8548,28.9606,29.0664,29.1723,29.2755,29.3813,29.4871,29.5929,29.6987,29.8045,29.9104,30.0162,30.1194,30.2226,30.3284,30.4263,30.5304,30.6354,30.7386,30.8444,30.9502,31.056,31.1618,31.2676,31.3735,31.4762,31.5799,31.6857,31.7863,31.8895,31.9927,32.0932,32.1991,32.3049,32.4107,32.5154,32.6197,32.7229,32.8235,32.9267,33.0325,33.1357,33.2415,33.3447,33.4505,33.5563,33.6595,33.7654,33.8686,33.9744,34.075,34.1782,34.2814,34.3872,34.4904,34.5962,34.6968,34.8026,34.9058,35.0116,35.1174,35.2232,35.329,35.4349,35.5407,35.6465,35.7497,35.8529,35.9561,36.0593,36.1631,36.2657,36.3715,36.4747,36.5805,36.6863,36.7843,36.8901,36.9881,37.0909,37.1893,37.2951,37.3957,37.5015,37.6073,37.7105,37.8163,37.9195,38.0253,38.1311,38.2317,38.3375,38.4433,38.5439,38.6497,38.7529,38.8588,38.9646,39.0704,39.1743,39.2794,39.3852,39.4884,39.5942,39.6974,39.798,39.9038,40.007,40.1128,40.2187,40.3219,40.4277,40.5335,40.6367,40.7425,40.8483,40.9541,41.0573,41.1632,41.2664,41.3669,41.4708,41.576,41.6818,41.7876,41.8934,41.9992,42.105,42.2108,42.3167,42.4172,42.5204,42.6236,42.7268,42.8327,42.9359,43.0417,43.1449,43.2481,43.3539,43.4571,43.5604,43.6635,43.7667,43.8725,43.9757,44.0815,44.1847,44.2905,44.3963,44.4995,44.6027,44.6981,44.8039,44.9071,45.0129,45.1083,45.2115,45.3147,45.4179,45.5237,45.6295,45.7275,45.8333,45.9286,46.0318,46.135,46.2409,46.3467,46.4499,46.5557,46.6589,46.7621,46.8653,46.9685,47.0743,47.1801,47.2833,47.3839,47.4845,47.5903,47.6961,47.7993,47.9025,48.0083,48.1115,48.2121,48.3153,48.4185,48.5217,48.6275,48.7307,48.8339,48.9382,49.0377,49.1435,49.2493,49.3552,49.4505,49.5537,49.6569,49.7627,49.8685,49.9691,50.0671,50.1703,50.2735,50.3793,50.4825,50.5805,50.6863,50.7921,50.8979,51.0037,51.1069,51.2075,51.3055,51.4087,51.5119,51.6177,51.7183,51.8215,51.9273,52.0331,52.1363,52.2421,52.3479,52.4538,52.557,52.6575,52.7529,52.8535,52.9521,53.0546,53.1578,53.261,53.3616,53.4622,53.5654,53.6686,53.7692,53.875,53.9808,54.084,54.1871,54.2904,54.391,54.4942,54.5974,54.7022,54.8038,54.9096,55.0102,55.116,55.2218,55.3276,55.4308,55.534,55.6346,55.7404,55.8436,55.9492,56.0527,56.1559,56.2564,56.3596,56.4602,56.5634,56.6692,56.7672,56.873,56.9736,57.0768,57.1776,57.2806,57.3864,57.4912,57.5902,57.6934,57.7992,57.8998,58.003,58.1062,58.2094,58.31,58.4158,58.5216,58.6169,58.7201,58.826,58.9318,59.035,59.1382,59.2414,59.3446,59.4452,59.551,59.6568,59.7574,59.858,59.9585,60.0644,60.1676,60.2681,60.3687,60.4745,60.5751,60.6705,60.7737,60.8769,60.9801,61.0859,61.1891,61.2923,61.3981,61.5013,61.6071,61.7103,61.8161,61.9219,62.0199,62.1257,62.2289,62.3295,62.4327,62.5359,62.6339,62.7345,62.8377,62.9382,63.0388,63.1446,63.2348,63.3327,63.4333,63.5391,63.6423,63.7422,63.8461,63.9493,64.0499,64.1531,64.2589,64.3595,64.4575,64.5633,64.6639,64.7644,64.8676,64.9708,65.0688,65.1694,65.2726,65.3706,65.4738,65.5717,65.6749,65.7781,65.8787,65.9767,66.0773,66.1831,66.281,66.3738,66.477,66.5828,66.6787,66.784,66.8872,66.9825,67.0831,67.1732,67.279,67.3761,67.4723,67.5729,67.6787,67.7793,67.8825,67.9883,68.0942,68.191,68.2875,68.3907,68.4886,68.5892,68.6928,68.7904,68.891,68.9863,69.0895,69.1927,69.2933,69.3991,69.5023,69.6003,69.7035,69.8067,69.909,70.0105,70.1115,70.2012,70.307,70.4128,70.5082,70.6087,70.7119,70.8099,70.9131,71.0163,71.109,71.206,71.3076,71.4085,71.5108,71.6093,71.7073,71.8079,71.9085,72.0143,72.1175,72.2155,72.3187,72.4192,72.5224,72.6256,72.7315,72.832,72.93,73.0306,73.1259,73.2239,73.3271,73.4329,73.5283,73.6289,73.7347,73.83,73.9306,74.0286,74.1292,74.2271,74.3329,74.4257,74.5289,74.6347,74.7274,74.8228,74.9207,75.0266,75.1245,75.2204,75.3205,75.4106,75.5108,75.6091,75.7045,75.7972,75.8952,75.9932,76.0911,76.1891,76.2904,76.3876,76.4882,76.5862,76.6842,76.7847,76.8827,76.9859,77.0865,77.1845,77.2798,77.3778,77.4836,77.5737,77.6612,77.754,77.8545,77.9525,78.0479,78.1484,78.249,78.3522,78.4476,78.5482,78.6398,78.7362,78.8394,78.94,79.0406,79.1341,79.2365,79.3345,79.4377,79.5357,79.6363,79.7368,79.8374,79.9432,80.0438,80.1339,80.2267,80.3258,80.4226,80.5206,80.6238,80.7165,80.8119,80.9101,81.0072,81.0979,81.188,81.2808,81.3814,81.4793,81.5791,81.6717,81.7732,81.8686,81.9692,82.0593,82.1583,82.2474,82.348,82.4381,82.5282,82.6209,82.7058,82.809,82.907,83.0049,83.1055,83.2061,83.3093,83.402,83.5026,83.5919,83.6907,83.7835,83.8814,83.9663,84.0617,84.1518,84.2471,84.3477,84.4439,84.5489,84.6442,84.7326,84.8297,84.925,85.0178,85.1053,85.198,85.2881,85.3761,85.4658,85.5559,85.656,85.7414,85.8324,85.9294,86.0222,86.1149,86.2076,86.2978,86.3957,86.4879,86.569,86.6556,86.751,86.8385,86.9338,87.0161,87.1062,87.2016,87.3022,87.3923,87.4848,87.571,87.6548,87.7489,87.8481,87.9408,88.0257,88.1125,88.2007,88.2987,88.3862,88.4763,88.5664,88.6618,88.7493,88.8525,88.9478,89.0301,89.1176,89.2086,89.3005,89.3932,89.4807,89.5734,89.6479,89.7511,89.8394,89.9365,90.0319,90.1142,90.2147,90.3049,90.4002,90.4929,90.5883,90.6836,90.779,90.8743,90.9566,91.052,91.1342,91.227,91.3223,91.4046,91.4973,91.5915,91.6854,91.7772,91.8709,91.9557,92.0418,92.1334,92.2235,92.3163,92.4126,92.5122,92.5945,92.682,92.7799,92.8674,92.9549,93.0477,93.143,93.2305,93.3193,93.4179,93.4989,93.5852,93.6699,93.7529,93.8374,93.9305,94.0181,94.1134,94.2061,94.2921,94.3785,94.4696,94.5561,94.6475,94.7286,94.8106,94.8878,94.9727,95.0602,95.1399,95.2169,95.3068,95.3919,95.4846,95.5683,95.6571,95.7393,95.8216,95.9143,96.0018,96.0763,96.1674,96.2485,96.3296,96.4159,96.485,96.5675,96.6417,96.7266,96.811,96.8854,96.9629,97.0452,97.1197,97.1982,97.2632,97.3455,97.4095,97.4807,97.5618,97.6481,97.7333,97.8097,97.8952,97.9827,98.0493,98.1421,98.2322,98.3066,98.3791,98.4607,98.5402,98.6147,98.6997,98.7819,98.8563,98.9438,99.029,99.1084,99.188,99.267,99.3421,99.4088,99.4831,99.5549,99.6285,99.6985,99.7656,99.8221,99.8747,99.9413,100]
					}
				]
			}
		]
	},
	"preparationReport": {
		"reportType": "Preparation",
		"summary": {
			"dictionary": "Accidents",
			"variables": {
				"types": [
					"Categorical",
					"Numerical",
					"Table"
				],
				"numbers": [
					16,
					96,
					1
				]
			},
			"database": "c:\\APPLIC~1\\src\\tmp\\pykhiops\\KhiopsClassifier_fit_xlddrq_l\\Accidents.txt",
			"samplePercentage": 100,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 40448,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity",
			"targetDescriptiveStats": {
				"values": 2,
				"mode": "NonLethal",
				"modeFrequency": 38225
			},
			"targetValues": {
				"values": ["Lethal","NonLethal"],
				"frequencies": [2223,38225]
			},
			"evaluatedVariables": 111,
			"nativeVariables": 11,
			"constructedVariables": 100,
			"informativeVariables": 69,
			"featureEngineering": {
				"maxNumberOfConstructedVariables": 100,
				"maxNumberOfTrees": 10,
				"maxNumberOfVariablePairs": 0
			},
			"discretization": "MODL",
			"valueGrouping": "MODL",
			"nullModel": {
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3
			}
		},
		"variablesStatistics": [
			{
				"rank": "R001",
				"name": "InAgglomeration",
				"type": "Categorical",
				"level": 0.0617601,
				"parts": 2,
				"values": 2,
				"mode": "Yes",
				"modeFrequency": 25976,
				"constructionCost": 3.2581,
				"preparationCost": 21.188,
				"dataCost": 8059.99
			},
			{
				"rank": "R002",
				"name": "Department",
				"type": "Numerical",
				"level": 0.0486468,
				"parts": 13,
				"values": 101,
				"min": 10,
				"max": 976,
				"mean": 583.3122528,
				"stdDev": 292.6306374,
				"missingNumber": 0,
				"constructionCost": 3.2581,
				"preparationCost": 141.494,
				"dataCost": 8052.67
			},
			{
				"rank": "R003",
				"name": "CollisionType",
				"type": "Categorical",
				"level": 0.0366921,
				"parts": 3,
				"values": 8,
				"mode": "Other",
				"modeFrequency": 13639,
				"constructionCost": 3.2581,
				"preparationCost": 40.3155,
				"dataCost": 8256.86
			},
			{
				"rank": "R004",
				"name": "Mode(Vehicles.FixedObstacle)",
				"type": "Categorical",
				"level": 0.0339426,
				"parts": 3,
				"values": 18,
				"mode": "None",
				"modeFrequency": 32686,
				"constructionCost": 7.94023,
				"preparationCost": 50.4378,
				"dataCost": 8265.75,
				"derivationRule": "TableMode(Vehicles, FixedObstacle)"
			},
			{
				"rank": "R005",
				"name": "Light",
				"type": "Categorical",
				"level": 0.0253166,
				"parts": 3,
				"values": 5,
				"mode": "Daylight",
				"modeFrequency": 27143,
				"constructionCost": 3.2581,
				"preparationCost": 35.1831,
				"dataCost": 8360.01
			},
			{
				"rank": "R006",
				"name": "Count(Vehicles) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 7,
				"min": 0,
				"max": 6,
				"mean": 0.2466871044,
				"stdDev": 0.4710926711,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableCount(`Vehicles where FixedObstacle <> None`)"
			},
			{
				"rank": "R007",
				"name": "Max(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 28,
				"min": 0,
				"max": 900,
				"mean": 0.1677343583,
				"stdDev": 9.419775391,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableMax(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R008",
				"name": "Mean(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 30,
				"min": 0,
				"max": 900,
				"mean": 0.1640775144,
				"stdDev": 9.414639014,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableMean(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R009",
				"name": "Median(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 29,
				"min": 0,
				"max": 900,
				"mean": 0.1633568225,
				"stdDev": 9.414393186,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableMedian(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R010",
				"name": "Min(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 26,
				"min": 0,
				"max": 900,
				"mean": 0.1618620542,
				"stdDev": 9.413976694,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableMin(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R011",
				"name": "StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 7,
				"min": 0,
				"max": 11.69134295,
				"mean": 0.002743043236,
				"stdDev": 0.151375298,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableStdDev(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R012",
				"name": "Sum(Vehicles.PassengerNumber) where FixedObstacle <> None",
				"type": "Numerical",
				"level": 0.0230171,
				"parts": 2,
				"values": 28,
				"min": 0,
				"max": 900,
				"mean": 0.1677343583,
				"stdDev": 9.419775391,
				"missingNumber": 31082,
				"constructionCost": 10.8927,
				"preparationCost": 20.2392,
				"dataCost": 8387.14,
				"derivationRule": "TableSum(`Vehicles where FixedObstacle <> None`, PassengerNumber)"
			},
			{
				"rank": "R013",
				"name": "Max(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 63,
				"min": 0,
				"max": 200,
				"mean": 0.2497754357,
				"stdDev": 3.752191101,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableMax(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R014",
				"name": "Mean(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 82,
				"min": 0,
				"max": 200,
				"mean": 0.1700254364,
				"stdDev": 2.860919075,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableMean(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R015",
				"name": "Median(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 66,
				"min": 0,
				"max": 200,
				"mean": 0.1640517396,
				"stdDev": 2.847957994,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableMedian(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R016",
				"name": "Min(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 37,
				"min": 0,
				"max": 200,
				"mean": 0.09677226181,
				"stdDev": 2.522900871,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableMin(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R017",
				"name": "StdDev(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 69,
				"min": 0,
				"max": 76.5,
				"mean": 0.0757966925,
				"stdDev": 1.382802637,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableStdDev(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R018",
				"name": "Sum(Vehicles.PassengerNumber) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229956,
				"parts": 2,
				"values": 65,
				"min": 0,
				"max": 200,
				"mean": 0.2526798012,
				"stdDev": 3.801502768,
				"missingNumber": 7050,
				"constructionCost": 10.8927,
				"preparationCost": 20.027,
				"dataCost": 8387.53,
				"derivationRule": "TableSum(`Vehicles where FixedObstacle = None`, PassengerNumber)"
			},
			{
				"rank": "R019",
				"name": "Count(Vehicles) where FixedObstacle = None",
				"type": "Numerical",
				"level": 0.0229016,
				"parts": 3,
				"values": 10,
				"min": 0,
				"max": 12,
				"mean": 1.466895767,
				"stdDev": 0.9059249394,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 32.3559,
				"dataCost": 8376.01,
				"derivationRule": "TableCount(`Vehicles where FixedObstacle = None`)"
			},
			{
				"rank": "R020",
				"name": "Mode(Vehicles.MobileObstacle)",
				"type": "Categorical",
				"level": 0.0184866,
				"parts": 3,
				"values": 8,
				"mode": "Vehicle",
				"modeFrequency": 21732,
				"constructionCost": 7.94023,
				"preparationCost": 32.3997,
				"dataCost": 8416.97,
				"derivationRule": "TableMode(Vehicles, MobileObstacle)"
			},
			{
				"rank": "R021",
				"name": "Mode(Vehicles.Maneuver)",
				"type": "Categorical",
				"level": 0.0163995,
				"parts": 3,
				"values": 26,
				"mode": "NoDirectionChange",
				"modeFrequency": 20027,
				"constructionCost": 7.94023,
				"preparationCost": 45.5408,
				"dataCost": 8421.81,
				"derivationRule": "TableMode(Vehicles, Maneuver)"
			},
			{
				"rank": "R022",
				"name": "CountDistinct(Vehicles.ImpactPoint)",
				"type": "Numerical",
				"level": 0.0158576,
				"parts": 2,
				"values": 7,
				"min": 1,
				"max": 7,
				"mean": 1.554019976,
				"stdDev": 0.5682713409,
				"missingNumber": 0,
				"constructionCost": 7.94023,
				"preparationCost": 20.5775,
				"dataCost": 8451.44,
				"derivationRule": "TableCountDistinct(Vehicles, ImpactPoint)"
			},
			{
				"rank": "R023",
				"name": "Commune",
				"type": "Numerical",
				"level": 0.0141719,
				"parts": 11,
				"values": 792,
				"min": 1,
				"max": 907,
				"mean": 192.5739962,
				"stdDev": 170.1731017,
				"missingNumber": 0,
				"constructionCost": 3.2581,
				"preparationCost": 127.278,
				"dataCost": 8363.95
			},
			{
				"rank": "R024",
				"name": "Count(Vehicles) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 8,
				"min": 0,
				"max": 7,
				"mean": 0.506601068,
				"stdDev": 0.5579598222,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableCount(`Vehicles where MobileObstacle <> Vehicle`)"
			},
			{
				"rank": "R025",
				"name": "Max(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 44,
				"min": 0,
				"max": 900,
				"mean": 0.228983269,
				"stdDev": 7.177425939,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableMax(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R026",
				"name": "Mean(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 48,
				"min": 0,
				"max": 900,
				"mean": 0.2223251823,
				"stdDev": 7.153796037,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableMean(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R027",
				"name": "Median(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 47,
				"min": 0,
				"max": 900,
				"mean": 0.2218790219,
				"stdDev": 7.153520437,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableMedian(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R028",
				"name": "Min(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 43,
				"min": 0,
				"max": 900,
				"mean": 0.2161132561,
				"stdDev": 7.146507842,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableMin(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R029",
				"name": "StdDev(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 11,
				"min": 0,
				"max": 30,
				"mean": 0.006393787726,
				"stdDev": 0.3332634252,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableStdDev(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R030",
				"name": "Sum(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
				"type": "Numerical",
				"level": 0.0123015,
				"parts": 2,
				"values": 44,
				"min": 0,
				"max": 900,
				"mean": 0.229034749,
				"stdDev": 7.177435055,
				"missingNumber": 21023,
				"constructionCost": 10.8927,
				"preparationCost": 20.5776,
				"dataCost": 8479.13,
				"derivationRule": "TableSum(`Vehicles where MobileObstacle <> Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R031",
				"name": "IntersectionType",
				"type": "Categorical",
				"level": 0.0107421,
				"parts": 2,
				"values": 9,
				"mode": "NoIntersection",
				"modeFrequency": 26844,
				"constructionCost": 3.2581,
				"preparationCost": 21.159,
				"dataCost": 8499.62
			},
			{
				"rank": "R032",
				"name": "Count(Vehicles) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.0104734,
				"parts": 2,
				"values": 11,
				"min": 0,
				"max": 12,
				"mean": 1.206981804,
				"stdDev": 1.082681887,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 20.5765,
				"dataCost": 8494.88,
				"derivationRule": "TableCount(`Vehicles where MobileObstacle = Vehicle`)"
			},
			{
				"rank": "R033",
				"name": "Max(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 53,
				"min": 0,
				"max": 200,
				"mean": 0.2247912124,
				"stdDev": 3.51714875,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableMax(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R034",
				"name": "Mean(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 70,
				"min": 0,
				"max": 200,
				"mean": 0.1540653584,
				"stdDev": 2.944580051,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableMean(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R035",
				"name": "Median(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 58,
				"min": 0,
				"max": 200,
				"mean": 0.1471181141,
				"stdDev": 2.930219323,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableMedian(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R036",
				"name": "Min(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 28,
				"min": 0,
				"max": 200,
				"mean": 0.09046776649,
				"stdDev": 2.754412501,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableMin(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R037",
				"name": "StdDev(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 60,
				"min": 0,
				"max": 50,
				"mean": 0.0665111827,
				"stdDev": 1.084715144,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableStdDev(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R038",
				"name": "Sum(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
				"type": "Numerical",
				"level": 0.010221,
				"parts": 2,
				"values": 55,
				"min": 0,
				"max": 200,
				"mean": 0.2287818324,
				"stdDev": 3.589218921,
				"missingNumber": 16141,
				"constructionCost": 10.8927,
				"preparationCost": 20.5376,
				"dataCost": 8497.1,
				"derivationRule": "TableSum(`Vehicles where MobileObstacle = Vehicle`, PassengerNumber)"
			},
			{
				"rank": "R039",
				"name": "Count(Vehicles) where Maneuver <> NoDirectionChange",
				"type": "Numerical",
				"level": 0.00997098,
				"parts": 3,
				"values": 11,
				"min": 0,
				"max": 12,
				"mean": 1.028555182,
				"stdDev": 0.8208856876,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 32.5646,
				"dataCost": 8485.84,
				"derivationRule": "TableCount(`Vehicles where Maneuver <> NoDirectionChange`)"
			},
			{
				"rank": "R040",
				"name": "Count(Vehicles)",
				"type": "Numerical",
				"level": 0.00992473,
				"parts": 2,
				"values": 10,
				"min": 1,
				"max": 12,
				"mean": 1.713582872,
				"stdDev": 0.6822450485,
				"missingNumber": 0,
				"constructionCost": 6.14847,
				"preparationCost": 20.5249,
				"dataCost": 8504.41,
				"derivationRule": "TableCount(Vehicles)"
			},
			{
				"rank": "R041",
				"name": "Count(Vehicles) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0.00934148,
				"parts": 2,
				"values": 11,
				"min": 0,
				"max": 12,
				"mean": 1.698674842,
				"stdDev": 0.6908264063,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 20.5332,
				"dataCost": 8504.68,
				"derivationRule": "TableCount(`Vehicles where PassengerNumber <= 0.5`)"
			},
			{
				"rank": "R042",
				"name": "Count(Vehicles) where Direction = Decreasing",
				"type": "Numerical",
				"level": 0.00918044,
				"parts": 3,
				"values": 10,
				"min": 0,
				"max": 12,
				"mean": 0.5698674842,
				"stdDev": 0.8096126046,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 32.1557,
				"dataCost": 8493.06,
				"derivationRule": "TableCount(`Vehicles where Direction = Decreasing`)"
			},
			{
				"rank": "R043",
				"name": "Mode(Vehicles.ImpactPoint)",
				"type": "Categorical",
				"level": 0.00844006,
				"parts": 4,
				"values": 11,
				"mode": "Front",
				"modeFrequency": 17650,
				"constructionCost": 7.94023,
				"preparationCost": 50.7591,
				"dataCost": 8485.17,
				"derivationRule": "TableMode(Vehicles, ImpactPoint)"
			},
			{
				"rank": "R044",
				"name": "Count(Vehicles) where ImpactPoint <> Front",
				"type": "Numerical",
				"level": 0.00618562,
				"parts": 3,
				"values": 11,
				"min": 0,
				"max": 11,
				"mean": 1.098323774,
				"stdDev": 0.7646571212,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 32.4575,
				"dataCost": 8518.56,
				"derivationRule": "TableCount(`Vehicles where ImpactPoint <> Front`)"
			},
			{
				"rank": "R045",
				"name": "Mode(Vehicles.Category)",
				"type": "Categorical",
				"level": 0.00414105,
				"parts": 4,
				"values": 24,
				"mode": "Car<=3.5T",
				"modeFrequency": 28803,
				"constructionCost": 7.94023,
				"preparationCost": 71.795,
				"dataCost": 8501.18,
				"derivationRule": "TableMode(Vehicles, Category)"
			},
			{
				"rank": "R046",
				"name": "Mean(Vehicles.PassengerNumber) where Direction = Decreasing",
				"type": "Numerical",
				"level": 0.00362704,
				"parts": 2,
				"values": 48,
				"min": 0,
				"max": 71,
				"mean": 0.1240716285,
				"stdDev": 2.142617968,
				"missingNumber": 23897,
				"constructionCost": 12.279,
				"preparationCost": 20.5457,
				"dataCost": 8552.52,
				"derivationRule": "TableMean(`Vehicles where Direction = Decreasing`, PassengerNumber)"
			},
			{
				"rank": "R047",
				"name": "Median(Vehicles.PassengerNumber) where Direction = Decreasing",
				"type": "Numerical",
				"level": 0.00362704,
				"parts": 2,
				"values": 42,
				"min": 0,
				"max": 71,
				"mean": 0.1212615552,
				"stdDev": 2.13422086,
				"missingNumber": 23897,
				"constructionCost": 12.279,
				"preparationCost": 20.5457,
				"dataCost": 8552.52,
				"derivationRule": "TableMedian(`Vehicles where Direction = Decreasing`, PassengerNumber)"
			},
			{
				"rank": "R048",
				"name": "Min(Vehicles.PassengerNumber) where Direction = Decreasing",
				"type": "Numerical",
				"level": 0.00362704,
				"parts": 2,
				"values": 32,
				"min": 0,
				"max": 71,
				"mean": 0.1033774394,
				"stdDev": 2.06565724,
				"missingNumber": 23897,
				"constructionCost": 12.279,
				"preparationCost": 20.5457,
				"dataCost": 8552.52,
				"derivationRule": "TableMin(`Vehicles where Direction = Decreasing`, PassengerNumber)"
			},
			{
				"rank": "R049",
				"name": "StdDev(Vehicles.PassengerNumber) where Direction = Decreasing",
				"type": "Numerical",
				"level": 0.00362704,
				"parts": 2,
				"values": 28,
				"min": 0,
				"max": 32,
				"mean": 0.02209613259,
				"stdDev": 0.6077421787,
				"missingNumber": 23897,
				"constructionCost": 12.279,
				"preparationCost": 20.5457,
				"dataCost": 8552.52,
				"derivationRule": "TableStdDev(`Vehicles where Direction = Decreasing`, PassengerNumber)"
			},
			{
				"rank": "R050",
				"name": "PostalAddress",
				"type": "Categorical",
				"level": 0.00324784,
				"parts": 2,
				"values": 27378,
				"mode": "",
				"modeFrequency": 389,
				"constructionCost": 3.2581,
				"preparationCost": 72.565,
				"dataCost": 8512.79
			},
			{
				"rank": "R051",
				"name": "CountDistinct(Vehicles.Maneuver)",
				"type": "Numerical",
				"level": 0.00314121,
				"parts": 2,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.480666535,
				"stdDev": 0.5325370957,
				"missingNumber": 0,
				"constructionCost": 7.94023,
				"preparationCost": 20.574,
				"dataCost": 8561.02,
				"derivationRule": "TableCountDistinct(Vehicles, Maneuver)"
			},
			{
				"rank": "R052",
				"name": "CountDistinct(Vehicles.Direction)",
				"type": "Numerical",
				"level": 0.00308714,
				"parts": 2,
				"values": 3,
				"min": 1,
				"max": 3,
				"mean": 1.19674644,
				"stdDev": 0.4002042791,
				"missingNumber": 0,
				"constructionCost": 7.94023,
				"preparationCost": 20.1165,
				"dataCost": 8561.94,
				"derivationRule": "TableCountDistinct(Vehicles, Direction)"
			},
			{
				"rank": "R053",
				"name": "Count(Vehicles) where Direction not in {Increasing, Decreasing}",
				"type": "Numerical",
				"level": 0.00300952,
				"parts": 2,
				"values": 7,
				"min": 0,
				"max": 6,
				"mean": 0.3195955301,
				"stdDev": 0.6708201829,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 23.7335,
				"dataCost": 8554.65,
				"derivationRule": "TableCount(`Vehicles where Direction not in {Increasing, Decreasing}`)"
			},
			{
				"rank": "R054",
				"name": "Mean(Vehicles.PassengerNumber) where ImpactPoint <> Front",
				"type": "Numerical",
				"level": 0.00291855,
				"parts": 2,
				"values": 80,
				"min": 0,
				"max": 450,
				"mean": 0.1603695418,
				"stdDev": 3.434003441,
				"missingNumber": 8264,
				"constructionCost": 12.279,
				"preparationCost": 20.1489,
				"dataCost": 8559.02,
				"derivationRule": "TableMean(`Vehicles where ImpactPoint <> Front`, PassengerNumber)"
			},
			{
				"rank": "R055",
				"name": "Min(Vehicles.PassengerNumber) where ImpactPoint <> Front",
				"type": "Numerical",
				"level": 0.00291855,
				"parts": 2,
				"values": 44,
				"min": 0,
				"max": 120,
				"mean": 0.09585508327,
				"stdDev": 2.037564264,
				"missingNumber": 8264,
				"constructionCost": 12.279,
				"preparationCost": 20.1489,
				"dataCost": 8559.02,
				"derivationRule": "TableMin(`Vehicles where ImpactPoint <> Front`, PassengerNumber)"
			},
			{
				"rank": "R056",
				"name": "StdDev(Vehicles.PassengerNumber) where ImpactPoint <> Front",
				"type": "Numerical",
				"level": 0.00291855,
				"parts": 2,
				"values": 57,
				"min": 0,
				"max": 450,
				"mean": 0.06587121869,
				"stdDev": 2.773211308,
				"missingNumber": 8264,
				"constructionCost": 12.279,
				"preparationCost": 20.1489,
				"dataCost": 8559.02,
				"derivationRule": "TableStdDev(`Vehicles where ImpactPoint <> Front`, PassengerNumber)"
			},
			{
				"rank": "R057",
				"name": "Sum(Vehicles.PassengerNumber) where ImpactPoint <> Front",
				"type": "Numerical",
				"level": 0.00291855,
				"parts": 2,
				"values": 61,
				"min": 0,
				"max": 900,
				"mean": 0.2284364902,
				"stdDev": 5.910285378,
				"missingNumber": 8264,
				"constructionCost": 12.279,
				"preparationCost": 20.1489,
				"dataCost": 8559.02,
				"derivationRule": "TableSum(`Vehicles where ImpactPoint <> Front`, PassengerNumber)"
			},
			{
				"rank": "R058",
				"name": "Mode(Vehicles.Direction)",
				"type": "Categorical",
				"level": 0.00272067,
				"parts": 2,
				"values": 4,
				"mode": "Increasing",
				"modeFrequency": 17010,
				"constructionCost": 7.94023,
				"preparationCost": 23.8478,
				"dataCost": 8561.37,
				"derivationRule": "TableMode(Vehicles, Direction)"
			},
			{
				"rank": "R059",
				"name": "Max(Vehicles.PassengerNumber) where Maneuver <> NoDirectionChange",
				"type": "Numerical",
				"level": 0.00227331,
				"parts": 2,
				"values": 47,
				"min": 0,
				"max": 900,
				"mean": 0.1518454965,
				"stdDev": 5.663083361,
				"missingNumber": 10727,
				"constructionCost": 12.279,
				"preparationCost": 20.3301,
				"dataCost": 8564.4,
				"derivationRule": "TableMax(`Vehicles where Maneuver <> NoDirectionChange`, PassengerNumber)"
			},
			{
				"rank": "R060",
				"name": "StdDev(Vehicles.PassengerNumber) where Maneuver <> NoDirectionChange",
				"type": "Numerical",
				"level": 0.00227331,
				"parts": 2,
				"values": 49,
				"min": 0,
				"max": 450,
				"mean": 0.04631661191,
				"stdDev": 2.723312826,
				"missingNumber": 10727,
				"constructionCost": 12.279,
				"preparationCost": 20.3301,
				"dataCost": 8564.4,
				"derivationRule": "TableStdDev(`Vehicles where Maneuver <> NoDirectionChange`, PassengerNumber)"
			},
			{
				"rank": "R061",
				"name": "CountDistinct(Vehicles.Category)",
				"type": "Numerical",
				"level": 0.0015415,
				"parts": 2,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.416707872,
				"stdDev": 0.5108927411,
				"missingNumber": 0,
				"constructionCost": 7.94023,
				"preparationCost": 20.5448,
				"dataCost": 8574.83,
				"derivationRule": "TableCountDistinct(Vehicles, Category)"
			},
			{
				"rank": "R062",
				"name": "Count(Vehicles) where ImpactPoint = Front",
				"type": "Numerical",
				"level": 0.00122198,
				"parts": 2,
				"values": 7,
				"min": 0,
				"max": 6,
				"mean": 0.6152590981,
				"stdDev": 0.6187716178,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 21.4772,
				"dataCost": 8572.31,
				"derivationRule": "TableCount(`Vehicles where ImpactPoint = Front`)"
			},
			{
				"rank": "R063",
				"name": "Weather",
				"type": "Categorical",
				"level": 0.00118246,
				"parts": 3,
				"values": 10,
				"mode": "Normal",
				"modeFrequency": 32153,
				"constructionCost": 3.2581,
				"preparationCost": 36.1497,
				"dataCost": 8567
			},
			{
				"rank": "R064",
				"name": "Count(Vehicles) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0.000828739,
				"parts": 2,
				"values": 11,
				"min": 0,
				"max": 10,
				"mean": 1.044279074,
				"stdDev": 0.7962980534,
				"missingNumber": 0,
				"constructionCost": 10.8927,
				"preparationCost": 22.5297,
				"dataCost": 8576.03,
				"derivationRule": "TableCount(`Vehicles where Category = Car<=3.5T`)"
			},
			{
				"rank": "R065",
				"name": "Count(Vehicles) where Maneuver = NoDirectionChange",
				"type": "Numerical",
				"level": 0.000462644,
				"parts": 2,
				"values": 8,
				"min": 0,
				"max": 7,
				"mean": 0.6850276899,
				"stdDev": 0.6856140121,
				"missingNumber": 0,
				"constructionCost": 12.279,
				"preparationCost": 20.5555,
				"dataCost": 8579.78,
				"derivationRule": "TableCount(`Vehicles where Maneuver = NoDirectionChange`)"
			},
			{
				"rank": "R066",
				"name": "Mean(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
				"type": "Numerical",
				"level": 0.000462644,
				"parts": 2,
				"values": 64,
				"min": 0,
				"max": 180,
				"mean": 0.1951022013,
				"stdDev": 3.291603334,
				"missingNumber": 17128,
				"constructionCost": 12.279,
				"preparationCost": 20.5555,
				"dataCost": 8579.78,
				"derivationRule": "TableMean(`Vehicles where Maneuver = NoDirectionChange`, PassengerNumber)"
			},
			{
				"rank": "R067",
				"name": "Min(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
				"type": "Numerical",
				"level": 0.000462644,
				"parts": 2,
				"values": 44,
				"min": 0,
				"max": 180,
				"mean": 0.1593053173,
				"stdDev": 3.080141539,
				"missingNumber": 17128,
				"constructionCost": 12.279,
				"preparationCost": 20.5555,
				"dataCost": 8579.78,
				"derivationRule": "TableMin(`Vehicles where Maneuver = NoDirectionChange`, PassengerNumber)"
			},
			{
				"rank": "R068",
				"name": "StdDev(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
				"type": "Numerical",
				"level": 0.000462644,
				"parts": 2,
				"values": 36,
				"min": 0,
				"max": 100,
				"mean": 0.03600785036,
				"stdDev": 1.169468995,
				"missingNumber": 17128,
				"constructionCost": 12.279,
				"preparationCost": 20.5555,
				"dataCost": 8579.78,
				"derivationRule": "TableStdDev(`Vehicles where Maneuver = NoDirectionChange`, PassengerNumber)"
			},
			{
				"rank": "R069",
				"name": "Sum(Vehicles.PassengerNumber) where Direction not in {Increasing, Decreasing}",
				"type": "Numerical",
				"level": 0.000458976,
				"parts": 2,
				"values": 30,
				"min": 0,
				"max": 180,
				"mean": 0.210416425,
				"stdDev": 3.683769104,
				"missingNumber": 31827,
				"constructionCost": 12.279,
				"preparationCost": 20.18,
				"dataCost": 8580.18,
				"derivationRule": "TableSum(`Vehicles where Direction not in {Increasing, Decreasing}`, PassengerNumber)"
			},
			{
				"rank": "R070",
				"name": "AccidentId",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 40448,
				"mode": "201800000001",
				"modeFrequency": 1,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3
			},
			{
				"rank": "R071",
				"name": "Count(Vehicles) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 6,
				"min": 0,
				"max": 5,
				"mean": 0.6693037975,
				"stdDev": 0.6599149395,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableCount(`Vehicles where Category <> Car<=3.5T`)"
			},
			{
				"rank": "R072",
				"name": "Count(Vehicles) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 0,
				"max": 2,
				"mean": 0.01490803006,
				"stdDev": 0.1236087988,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableCount(`Vehicles where PassengerNumber > 0.5`)"
			},
			{
				"rank": "R073",
				"name": "CountDistinct(Vehicles.FixedObstacle)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 4,
				"min": 1,
				"max": 4,
				"mean": 1.060942445,
				"stdDev": 0.2424072923,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableCountDistinct(Vehicles, FixedObstacle)"
			},
			{
				"rank": "R074",
				"name": "CountDistinct(Vehicles.MobileObstacle)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 3,
				"min": 1,
				"max": 3,
				"mean": 1.085269976,
				"stdDev": 0.2812237968,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableCountDistinct(Vehicles, MobileObstacle)"
			},
			{
				"rank": "R075",
				"name": "Date",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 365,
				"mode": "2018-06-22",
				"modeFrequency": 184,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3
			},
			{
				"rank": "R076",
				"name": "Hour",
				"type": "Categorical",
				"level": 0,
				"parts": 1,
				"values": 1316,
				"mode": "18:00:00",
				"modeFrequency": 521,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3
			},
			{
				"rank": "R077",
				"name": "Max(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 68,
				"min": 0,
				"max": 900,
				"mean": 0.2450059335,
				"stdDev": 5.671812049,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMax(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R078",
				"name": "Max(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 69,
				"min": 0,
				"max": 900,
				"mean": 0.4300282057,
				"stdDev": 7.508890862,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMax(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R079",
				"name": "Max(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMax(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R080",
				"name": "Max(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMax(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R081",
				"name": "Max(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 68,
				"min": 1,
				"max": 900,
				"mean": 16.76818951,
				"stdDev": 43.87039136,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMax(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R082",
				"name": "Mean(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 92,
				"min": 0,
				"max": 450,
				"mean": 0.1573677196,
				"stdDev": 3.337995383,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMean(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R083",
				"name": "Mean(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 88,
				"min": 0,
				"max": 450,
				"mean": 0.3472098069,
				"stdDev": 5.04584347,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMean(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R084",
				"name": "Mean(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMean(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R085",
				"name": "Mean(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMean(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R086",
				"name": "Mean(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 70,
				"min": 1,
				"max": 900,
				"mean": 16.75465313,
				"stdDev": 43.8713109,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMean(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R087",
				"name": "Median(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 74,
				"min": 0,
				"max": 450,
				"mean": 0.1518740111,
				"stdDev": 3.327993746,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R088",
				"name": "Median(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 81,
				"min": 0,
				"max": 450,
				"mean": 0.3436103276,
				"stdDev": 5.0410137,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R089",
				"name": "Median(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R090",
				"name": "Median(Vehicles.PassengerNumber) where Direction = Increasing",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 57,
				"min": 0,
				"max": 450,
				"mean": 0.1820588995,
				"stdDev": 4.155368721,
				"missingNumber": 17222,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(`Vehicles where Direction = Increasing`, PassengerNumber)"
			},
			{
				"rank": "R091",
				"name": "Median(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R092",
				"name": "Median(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 70,
				"min": 1,
				"max": 900,
				"mean": 16.75465313,
				"stdDev": 43.8713109,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMedian(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R093",
				"name": "Min(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 41,
				"min": 0,
				"max": 180,
				"mean": 0.07582575158,
				"stdDev": 2.065197953,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R094",
				"name": "Min(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 58,
				"min": 0,
				"max": 200,
				"mean": 0.2683445433,
				"stdDev": 3.907314976,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R095",
				"name": "Min(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R096",
				"name": "Min(Vehicles.PassengerNumber) where ImpactPoint = Front",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 32,
				"min": 0,
				"max": 180,
				"mean": 0.1008809578,
				"stdDev": 2.72667,
				"missingNumber": 18313,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(`Vehicles where ImpactPoint = Front`, PassengerNumber)"
			},
			{
				"rank": "R097",
				"name": "Min(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R098",
				"name": "Min(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 68,
				"min": 1,
				"max": 900,
				"mean": 16.74111675,
				"stdDev": 43.87313257,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableMin(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R099",
				"name": "StdDev(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 76,
				"min": 0,
				"max": 450,
				"mean": 0.08392859185,
				"stdDev": 2.638304404,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R100",
				"name": "StdDev(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 50,
				"min": 0,
				"max": 450,
				"mean": 0.08046570709,
				"stdDev": 3.206683047,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R101",
				"name": "StdDev(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R102",
				"name": "StdDev(Vehicles.PassengerNumber) where Direction = Increasing",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 40,
				"min": 0,
				"max": 450,
				"mean": 0.05983773659,
				"stdDev": 3.162255995,
				"missingNumber": 17222,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(`Vehicles where Direction = Increasing`, PassengerNumber)"
			},
			{
				"rank": "R103",
				"name": "StdDev(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R104",
				"name": "StdDev(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 5,
				"min": 0,
				"max": 4.5,
				"mean": 0.01353637902,
				"stdDev": 0.1989469271,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableStdDev(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			},
			{
				"rank": "R105",
				"name": "Sum(Vehicles.PassengerNumber)",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 69,
				"min": 0,
				"max": 900,
				"mean": 0.2474782437,
				"stdDev": 5.698892173,
				"missingNumber": 0,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(Vehicles, PassengerNumber)"
			},
			{
				"rank": "R106",
				"name": "Sum(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 70,
				"min": 0,
				"max": 900,
				"mean": 0.4343675418,
				"stdDev": 7.544685657,
				"missingNumber": 17403,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where Category <> Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R107",
				"name": "Sum(Vehicles.PassengerNumber) where Category = Car<=3.5T",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 9203,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where Category = Car<=3.5T`, PassengerNumber)"
			},
			{
				"rank": "R108",
				"name": "Sum(Vehicles.PassengerNumber) where Direction = Increasing",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 53,
				"min": 0,
				"max": 900,
				"mean": 0.2471368294,
				"stdDev": 6.883149131,
				"missingNumber": 17222,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where Direction = Increasing`, PassengerNumber)"
			},
			{
				"rank": "R109",
				"name": "Sum(Vehicles.PassengerNumber) where ImpactPoint = Front",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 39,
				"min": 0,
				"max": 180,
				"mean": 0.1200813192,
				"stdDev": 2.86909507,
				"missingNumber": 18313,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where ImpactPoint = Front`, PassengerNumber)"
			},
			{
				"rank": "R110",
				"name": "Sum(Vehicles.PassengerNumber) where PassengerNumber <= 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 2,
				"min": 0,
				"max": 0,
				"mean": 0,
				"stdDev": 0,
				"missingNumber": 188,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where PassengerNumber <= 0.5`, PassengerNumber)"
			},
			{
				"rank": "R111",
				"name": "Sum(Vehicles.PassengerNumber) where PassengerNumber > 0.5",
				"type": "Numerical",
				"level": 0,
				"parts": 1,
				"values": 69,
				"min": 1,
				"max": 900,
				"mean": 16.93739425,
				"stdDev": 44.04617412,
				"missingNumber": 39857,
				"constructionCost": 0.693147,
				"preparationCost": 10.6078,
				"dataCost": 8605.3,
				"derivationRule": "TableSum(`Vehicles where PassengerNumber > 0.5`, PassengerNumber)"
			}
		],
		"variablesDetailedStatistics": {
			"R001": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "InAgglomeration",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Yes"],
								["No"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[686,25290],
						[1537,12935]
					],
					"partInterests": [0.461726,0.538274]
				},
				"inputValues": {
					"values": ["Yes","No"],
					"frequencies": [25976,14472]
				}
			},
			"R002": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Department",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[10,125],
								[125,135],
								[135,285],
								[285,515],
								[515,635],
								[635,685],
								[685,695],
								[695,745],
								[745,755],
								[755,805],
								[805,905],
								[905,945],
								[945,976]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[206,2525],
						[60,2283],
						[282,2787],
						[533,7141],
						[318,2737],
						[91,1696],
						[39,1682],
						[121,1194],
						[30,3875],
						[154,2100],
						[203,1817],
						[77,6501],
						[109,1887]
					],
					"partInterests": [0.0192978,0.0466699,0.0658089,0.0279661,0.110757,0.000557857,0.0427171,0.02838,0.252984,0.00701965,0.0637344,0.334102,4.59141e-06]
				}
			},
			"R003": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CollisionType",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Other","NoCollision","3+Vehicles-Multiple"],
								["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain"],
								["2Vehicles-BehindVehicles-Frontal",""]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1344,17273],
						[456,17701],
						[423,3251]
					],
					"partInterests": [0.142817,0.566962,0.290221]
				},
				"inputValues": {
					"values": ["Other","2Vehicles-Side","2Vehicles-Behind","2Vehicles-BehindVehicles-Frontal","NoCollision","3+Vehicles-Chain","3+Vehicles-Multiple",""],
					"frequencies": [13639,11373,5177,3672,3622,1607,1356,2]
				}
			},
			"R004": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.FixedObstacle)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["None","ConcreteBarrier","StationaryVehicle","SideWalkEdge","OtherInLane","StreetFurniture","TrafficIslandRefugeOrMilestone","","Parapet"],
								["DitchTalusOrRockyWall","BuildingWallOrPier","MetallicBarrier","Post","ExitLaneWithoutObstacle","OtherInSidewalkOrShoulder","TrafficSignOrEmergencyBox","OtherBarrier"],
								["Tree"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1503,33742],
						[511,3715],
						[209,768]
					],
					"partInterests": [0.16717,0.40372,0.429111]
				},
				"inputValues": {
					"values": ["None","DitchTalusOrRockyWall","Tree","ConcreteBarrier","BuildingWallOrPier","MetallicBarrier","StationaryVehicle","Post","SideWalkEdge","ExitLaneWithoutObstacle","OtherInLane","OtherInSidewalkOrShoulder","StreetFurniture","TrafficSignOrEmergencyBox","TrafficIslandRefugeOrMilestone","","OtherBarrier","Parapet"],
					"frequencies": [32686,1256,977,800,795,774,692,545,326,316,302,295,182,154,109,97,91,51]
				}
			},
			"R005": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Light",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Daylight","TwilightOrDawn","NightStreelightsOff"],
								["NightStreelightsOn"],
								["NightNoStreetLight"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1466,28714],
						[215,6185],
						[542,3326]
					],
					"partInterests": [0.0517031,0.136353,0.811943]
				},
				"inputValues": {
					"values": ["Daylight","NightStreelightsOn","NightNoStreetLight","TwilightOrDawn","NightStreelightsOff"],
					"frequencies": [27143,6400,3868,2645,392]
				}
			},
			"R006": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,6]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R007": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R008": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R009": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R010": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R011": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,11.69134295]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R012": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1281,29801],
						[942,8424]
					],
					"partInterests": [0.287823,0.712177]
				}
			},
			"R013": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R014": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R015": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R016": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R017": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,76.5]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R018": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[1442,31956]
					],
					"partInterests": [0.775395,0.224605]
				}
			},
			"R019": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where FixedObstacle = None",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[781,6269],
						[540,10365],
						[902,21591]
					],
					"partInterests": [0.748397,0.0144898,0.237113]
				}
			},
			"R020": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.MobileObstacle)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Vehicle"],
								["None"],
								["Pedestrian"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[844,20888],
						[994,9868],
						[385,7469]
					],
					"partInterests": [0.333804,0.650896,0.0152998]
				},
				"inputValues": {
					"values": ["Vehicle","None","Pedestrian","Other","WildAnimal","","RailedVehicle","DomesticAnimal"],
					"frequencies": [21732,10862,7002,530,137,70,63,52]
				}
			},
			"R021": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Maneuver)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["NoDirectionChange","None","CrossLane","Avoidance"],
								["SameDirectionOrLane","Insertion","PassLeft","TurnToLeft","TurnToRight","BetweenLanes","ChangeToLeftLane"],
								["SwerveToRight","SwerveToLeft"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1676,24632],
						[335,11937],
						[212,1656]
					],
					"partInterests": [0.104837,0.623736,0.271427]
				},
				"inputValues": {
					"values": ["NoDirectionChange","SameDirectionOrLane","None","CrossLane","Insertion","PassLeft","Avoidance","TurnToLeft","SwerveToRight","SwerveToLeft","TurnToRight","BetweenLanes","ChangeToLeftLane","ChangeToRightLane","Stopped","Reverse","BusLaneSameDirection","Park","PassRight","Parked","WrongWay","CrossStrip","","OpenDoor","BusLaneWrongDirection","UTurnInLane"],
					"frequencies": [20027,3780,3470,1697,1645,1504,1114,1005,936,932,703,649,557,476,399,322,263,227,227,102,94,86,75,62,59,37]
				}
			},
			"R022": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.ImpactPoint)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,7]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1460,17932],
						[763,20293]
					],
					"partInterests": [0.464165,0.535835]
				}
			},
			"R023": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Commune",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,54.5],
								[54.5,55.5],
								[55.5,85.5],
								[85.5,107.5],
								[107.5,121.5],
								[121.5,237.5],
								[237.5,238.5],
								[238.5,382.5],
								[382.5,388.5],
								[388.5,689.5],
								[689.5,907]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[340,7770],
						[18,1549],
						[181,4025],
						[157,2005],
						[107,4307],
						[563,6481],
						[2,305],
						[418,5551],
						[13,695],
						[385,5282],
						[39,255]
					],
					"partInterests": [0.0679612,0.195902,0.0292763,0.0279729,0.236977,0.176251,0.0518577,0.0569369,0.0573917,0.0405038,0.0589692]
				}
			},
			"R024": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,7]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R025": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R026": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R027": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R028": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R029": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,30]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R030": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[799,20224],
						[1424,18001]
					],
					"partInterests": [0.531101,0.468899]
				}
			},
			"R031": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "IntersectionType",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["NoIntersection"],
								["X-type"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1772,25072],
						[451,13153]
					],
					"partInterests": [0.292128,0.707872]
				},
				"inputValues": {
					"values": ["NoIntersection","X-type","T-type","Other","Roundabout","Y-type","Square","MoreThan4Branches","LevelCrossing"],
					"frequencies": [26844,4882,4086,1573,1484,848,489,193,49]
				}
			},
			"R032": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1387,17789],
						[836,20436]
					],
					"partInterests": [0.478527,0.521473]
				}
			},
			"R033": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R034": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R035": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R036": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R037": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,50]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R038": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,200]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1215,14926],
						[1008,23299]
					],
					"partInterests": [0.555103,0.444897]
				}
			},
			"R039": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where Maneuver <> NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[768,9959],
						[1165,18407],
						[290,9859]
					],
					"partInterests": [0.234372,0.0342184,0.73141]
				}
			},
			"R040": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1171,14405],
						[1052,23820]
					],
					"partInterests": [0.571024,0.428976]
				}
			},
			"R041": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where PassengerNumber <= 0.5",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1191,14743],
						[1032,23482]
					],
					"partInterests": [0.56204,0.43796]
				}
			},
			"R042": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where Direction = Decreasing",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,12]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1089,22808],
						[928,10389],
						[206,5028]
					],
					"partInterests": [0.205003,0.665663,0.129335]
				}
			},
			"R043": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.ImpactPoint)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Front"],
								["Back"],
								["LeftSide","LeftBack"],
								["Multiple"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1869,28631],
						[129,5288],
						[142,3705],
						[83,601]
					],
					"partInterests": [0.102546,0.575733,0.122817,0.198903]
				},
				"inputValues": {
					"values": ["Front","LeftFront","Back","RightFront","LeftSide","None","LeftBack","RightSide","Multiple","RightBack",""],
					"frequencies": [17650,6064,5417,3061,2506,2253,1341,1040,684,359,73]
				}
			},
			"R044": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where ImpactPoint <> Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,1.5],
								[1.5,11]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[631,7633],
						[1208,20111],
						[384,10481]
					],
					"partInterests": [0.413295,0.00746181,0.579243]
				}
			},
			"R045": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Category)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Car<=3.5T","Utility","Quadricycle","QuadBike>50cm3","Coach"],
								["Bicycle","Moped","Scooter<50cm3","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Bus","Scooter>125cm3","Other","LargeCar_3.5T-7.5T","QuadBike<=50cm3","Truck"],
								["Motorbike>125cm3","Tramway"],
								["LargeCar>7.5T","LargeCar+Trailer>3.5T","Truck+SemiTrailer","SpecialEngine","Tractor","Train"]
							],
							"defaultGroupIndex": 3
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1663,28638],
						[265,6983],
						[184,2047],
						[111,557]
					],
					"partInterests": [1.83192e-05,0.283526,0.151228,0.565228]
				},
				"inputValues": {
					"values": ["Car<=3.5T","Bicycle","Motorbike>125cm3","Utility","Moped","Scooter<50cm3","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Bus","Scooter>125cm3","LargeCar>7.5T","LargeCar+Trailer>3.5T","Other","Truck+SemiTrailer","Quadricycle","LargeCar_3.5T-7.5T","QuadBike>50cm3","Coach","SpecialEngine","Tramway","Tractor","QuadBike<=50cm3","Truck","Train"],
					"frequencies": [28803,3342,2190,1240,984,736,565,462,404,402,219,216,212,142,126,117,75,57,51,41,34,16,8,6]
				}
			},
			"R046": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where Direction = Decreasing",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,71]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1089,22808],
						[1134,15417]
					],
					"partInterests": [0.440623,0.559377]
				}
			},
			"R047": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Median(Vehicles.PassengerNumber) where Direction = Decreasing",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,71]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1089,22808],
						[1134,15417]
					],
					"partInterests": [0.440623,0.559377]
				}
			},
			"R048": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where Direction = Decreasing",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,71]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1089,22808],
						[1134,15417]
					],
					"partInterests": [0.440623,0.559377]
				}
			},
			"R049": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where Direction = Decreasing",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,32]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1089,22808],
						[1134,15417]
					],
					"partInterests": [0.440623,0.559377]
				}
			},
			"R050": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "PostalAddress",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["","A4","A13","AUTOROUTE A1","A7-Sens Marseille vers L","RN 118","A104 - LA FRANCILIENNE","A55-Sens Marseille vers","AVENUE DES CHAMPS ELYSEE","BADUEL (ROUTE DE)","BOULEVARD PERIPHERIQUE E","A50","A104","A55-Sens Martigues vers","D3","PAUL VAILLANT COUTURIER","GENERAL DE GAULLE (AVENU","RN 184","EUROPE (AVENUE DE L')","RN 20","A 7","AVENUE DAUMESNIL","PRADO (AVENUE DU)","Autoroute A.35"],
								["AUTOROUTE A86","RN 104","AUTOROUTE A6","AUTOROUTE A15","AUTOROUTE A3","A86","A86 EXT","ROCADE A 630","A86 INT","AUTOROUTE A6B","A7-Sens Lyon vers Marsei","AUTOROUTE A104","AUTOROUTE A6A","AUTOROUTE A10","N118","RN12","AUTOROUTE A115","BOULEVARD PERIPHERIQUE I","A50-Sens Marseille vers","N104 - LA FRANCILIENNE","ROUTE NATIONALE 230","A57","AUTOROUTE A 10","A50-Sens Aubagne vers Ma","JEAN JAURES","VA007331 A620","A51-Sens Marseille vers","MADELEINE (ROUTE DE LA)","RN104","PARIS (RUE DE)","REPUBLIQUE (AVENUE DE LA","11 - RT","ECHANGEUR BERCY","PLACE DE LA CONCORDE","RD 170","RN20","CHAPIT RE ( RUE DU)","A12 W","AUTOROUTE A 63","AUTOROUTE A20","GRANDE RUE","LECLERC (AVENUE DU GENER","PORTE DE SAINT OUEN","PORTE MAILLOT","QUAI DE BERCY","RD 37"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2211,35974],
						[12,2251]
					],
					"partInterests": [0.0346602,0.96534]
				},
				"inputValues": {
					"values": ["","AUTOROUTE A86","RN 104","A4","A13","AUTOROUTE A6","AUTOROUTE A1","AUTOROUTE A15","AUTOROUTE A3","A86","A86 EXT","ROCADE A 630","A86 INT","AUTOROUTE A6B","A7-Sens Marseille vers L","A7-Sens Lyon vers Marsei","AUTOROUTE A104","AUTOROUTE A6A","AUTOROUTE A10","N118","RN12","AUTOROUTE A115","BOULEVARD PERIPHERIQUE I","A50-Sens Marseille vers","RN 118","N104 - LA FRANCILIENNE","ROUTE NATIONALE 230","A104 - LA FRANCILIENNE","A55-Sens Marseille vers","A57","AUTOROUTE A 10","AVENUE DES CHAMPS ELYSEE","BADUEL (ROUTE DE)","BOULEVARD PERIPHERIQUE E","A50-Sens Aubagne vers Ma","JEAN JAURES","VA007331 A620","A50","A51-Sens Marseille vers","MADELEINE (ROUTE DE LA)","RN104","A104","PARIS (RUE DE)","A55-Sens Martigues vers","D3","REPUBLIQUE (AVENUE DE LA","11 - RT","ECHANGEUR BERCY","PAUL VAILLANT COUTURIER","PLACE DE LA CONCORDE","RD 170","GENERAL DE GAULLE (AVENU","RN 184","RN20","CHAPIT RE ( RUE DU)","EUROPE (AVENUE DE L')","RN 20","A 7","A12 W","AUTOROUTE A 63","AUTOROUTE A20","AVENUE DAUMESNIL","GRANDE RUE","LECLERC (AVENUE DU GENER","PORTE DE SAINT OUEN","PORTE MAILLOT","PRADO (AVENUE DU)","QUAI DE BERCY","RD 37","Autoroute A.35","GENERAL DE GAULLE (AV DU","REPUBLIQUE (AV DE LA)","Route Nationale 1","A14","A51-Sens Aix en Provence","GENERAL LECLERC (AV DU)","JEAN JAURES (AVENUE)","PORTE DE VINCENNES","ROUTE NATIONALE 1","RUE DE RIVOLI","BD PERIPHERIQUE INTERIEU","CHARLES DE GAULLE","R D 900","RUE DE BELLEVILLE","A12 Y","AVENUE JEAN JAURES","BOULEVARD DE MAGENTA","D7","RN12 INT","VERDUN (RUE DE)","A50-Sens Toulon vers Aub","Autoroute 35","Autoroute A31","CHARLES DE GAULLE (AVENU","GARIBALDI","PORTE DE BAGNOLET","PORTE DE LA CHAPELLE","RN2","AVENUE DE CLICHY","BRIAND (AVENUE ARISTIDE)","LIBERATION (AVENUE DE LA","POMPIDOU (AVENUE GEORGES","PORTE DE CHATILLON","PORTE DE MONTREUIL","PORTE DES LILAS","RD19","RN136","VERDUN (AVENUE DE)","WILSON (AVENUE DU PRESID","AUTOROUTE A 62","AUTOROUTE A25","AVENUE DE FLANDRE","BOULEVARD PERIPHERIQUE","CANNES (ROUTE DE)  -RD 6","D2","D4","EMILE ZOLA","GAMBETTA","JEAN MERMOZ","MICHELET (BOULEVARD)","PORTE DOREE","RUE DE CRIMEE","RUE LA FAYETTE","RUE ORDENER","AUTOROUTE A103","AVENUE D ITALIE","AVENUE DE SAINT MAURICE","BOULEVARD NEY","BOULEVARD SAINT GERMAIN","BOULEVARD SERURIER","D8","DE LATTRE DE TASSIGNY (A","JEAN JAURES (BOULEVARD)","PORTE DE CLIGNANCOURT","PORTE DE LA VILLETTE","PORTE DE SAINT CLOUD","RD383   7.640 A 11.044","REPUBLIQUE (RUE DE LA)","ROCADE A 630.","Route Nationale 3","STALINGRAD (BD DE)","ALBERT THOMAS","ALLEE DE LONGCHAMP","AUTOROUTE A126","AVENUE DE LA REPUBLIQUE","AVENUE FOCH","AVENUE GAMBETTA","Autoroute A 31","BOULEVARD HAUSSMANN","BOULEVARD MALESHERBES","Corniche John Fitzg�rald","D1075","D13","GENERAL LECLERC (AVENUE","GENERAL LECLERC (RUE DU)","JAURES (AVENUE JEAN)","JAURES (RUE JEAN)","LYON (RUE DE)","MANDELA  (BOULEVARD)","PARIS (R DE)","PAUL BERT (RUE)","PLACE CHARLES DE GAULLE","PORTE D AUBERVILLIERS","QUAI D IVRY","RD 137","ROUTE DE SURESNES","RUE DES PYRENEES","A13W","A507 sens Aubagne- Marse","A507 sens Marseille - Au","A86.EXT","AMBROISE CROIZAT","AUTOROUTE A16","BAILLE (BOULEVARD)","BOULEVARD DIDEROT","BOULEVARD RASPAIL","BROSSOLETTE AVENUE PIERR","D1","D1006","D19","D26","D6","D75","D934","DN7","EUROPE (DE L')","GAMBETTA (BOULEVARD)","LIBERTE (AVENUE DE LA","MARECHAL DE LATTRE DE TA","MAZARGUES (AVENUE DE)","NICE AVENUE DE (RN7)","PAUL BERT","PORTE D ITALIE","PORTE DE CHAMPERRET","PORTE DE PANTIN","PRADO (AVENUE du)","QUAI ANDRE CITROEN","RABATAU (BOULEVARD)","RN 385 Ext�rieure","RN7","RN88","ROUTE DE LA PYRAMIDE","RUE DE VAUGIRARD","RUE DU FAUBOURG SAINT MA","Route Nationale 2","Tunnel Prado Car�nage","kaweni-Kaweni nord ( Z I","A29","A4 PARIS PROVINCE","A50-Sens Aubagne vers To","ARISTIDE BRIAND AVENUE","AUTOROUTE A23","AUTOROUTE A5A","AVENUE ANDRE ITHURRALDE","AVENUE DE LA GRANDE ARME","AVENUE PARMENTIER","BERTHELOT","BOULEVARD DE L'EUROPE","BOULEVARD PONIATOWSKI","CARNOT","CHARLES DE GAULLE (BD)","D20","DE LATTRE DE TASSIGNY (B","ESPAGNE (AVENUE D')","FELIX FAURE","FONTAINEBLEAU (AV DE)","GAMBETTA (AVENUE)","GEORGES CLEMENCEAU","HENRI BARBUSSE (AV)","PARIS (AVENUE DE)","PASTEUR (RUE)","PIERRE BROSSOLETTE (RUE)","PLACE AUGUSTE BARON","PLOMBIERES (BOULEVARD DE","PORTE D ASNIERES","PORTE D ORLEANS","RABAN (ROUTE DE)","RD 17","REPUBLIQUE (BOULEVARD DE","RN12 EXT","ROCADE OUEST (RD 610)","RUE BEAUBOURG","RUE BELGRAND","RUE DE LA CHAPELLE","RUE DE TOLBIAC","RUE SAINT MAUR","TOULOUSE (AVENUE DE","VIENNE (DE)","VOIE GEORGES POMPIDOU","A1","A47","A6","A7","A8","ANATOLE FRANCE (RUE)","ATLANTIQUE  AVENUE DE L'","AVENUE DE L'EUROPE","AVENUE DE LA PORTE DE MO","AVENUE DE NEW YORK","AVENUE DE NOGENT","AVENUE DU MAINE","AVENUE KLEBER","AVENUE VICTOR HUGO","BISCHWILLER (ROUTE DE)","BOULEVARD CIRCULAIRE","BOULEVARD DE COURCELLES","BOULEVARD DE LA VILLETTE","BOULEVARD DE SEBASTOPOL","BOULEVARD DU BAB","BOULEVARD LEFEBVRE","BOULEVARD VOLTAIRE","BRIAND (BOULEVARD ARISTI","CARNOT (BD)","CARNOT (BOULEVARD)","CLEMENCEAU (AVENUE GEORG","D1001","D116","D15","D30","D34","D5","D9","D929","D933","D981","GARE (PLACE DE LA)","GENERAL DE GAULLE","JEAN PAUL SARTRE (AVENUE","LACASSAGNE","MARECHAL JOFFRE (QUAI DU","PARADIS (RUE)","PARIS (AV DE)","PASTEUR (BOULEVARD)","PORTE DE SEVRES","RD 301","RD 41 (ROCADE)","RD 6113","REPUBLIQUE AVENUE DE LA","RN 568","RN 7","RN 85","RN1","RN346   29.300 A 34.350","RN406.Y","ROUTE DE LA CORNICHE","RUE DE PARIS","RUE DE ROME","SAINT PIERRE (RUE)","SAINTE MARGUERITE (BOULE","SAKAKINI (BOULEVARD)","SALENGRO (AVENUE ROGER)","SCHLOESING (BOULEVARD)","SELLIER (BOULEVARD HENRI","STRASBOURG (AVENUE DE)","STRASBOURG (BOULEVARD DE","TOUTES RUES","VOIE RAPIDE URBAINE","m'tsapere-Nationale 2 (r","passamanty-Vahib� ( rout","A13Y","A4 - PROVINCE PARIS","A570","A87N","ALEX. FLEMING (BOULEVARD","ALLENDE SALVADOR (RUE)","AUTOROUTE A2","AUTOROUTE A22","AVENUE DE PARIS","AVENUE DE SAINT OUEN","AVENUE DE WAGRAM","AVENUE DIVISION LECLERC","AVENUE DU GENERAL LECLER","AVENUE ROGER SECRETAIN","Autoroute A8","BALLANGER (BD ROBERT)","BDL","BENODET ROUTE DE","BOULEVARD BEAUMARCHAIS","BOULEVARD BERTHIER","BOULEVARD DE GRENELLE","BOULEVARD DE L HOPITAL","BOULEVARD JOURDAN","BOULEVARD MACDONALD","BOULEVARD ORNANO","BOULEVARD SAINT MICHEL","BOULEVARD VINCENT AURIOL","CABASSOU (ROUTE DE)","CARNOT (RUE)","CATAYEE (JUSTIN)","COL DE LA GINESTE D559","COLMAR (AVENUE DE)","COUR DE FRANCE (AVENUE D","COURS DE VINCENNES","D10","D1090","D111","D16","D23","D24","D31","D35","D36","D51","D81","D979","DN8","DOCTEUR DERVAUX  ( QUAI","ETATS UNIS (DES)","GENAS    (Route de)","GENERAL MOUTON DUVERNET","GRAMMONT (AVENUE DE)","ILES SANGUINAIRES ROUTE","JACQUES DUCLOS [CD44] (R","JAURES (BOULEVARD JEAN)","MARECHAL FOCH (RUE DU)","MAR�CHAL DE LATTRE (AVEN","MENDES FRANCE (AVENUE)","MERCANTOUR (BD)","MEZZAVIA ROUTE DE","MIDI (BOULEVARD DU)","MONTAIGNE AVENUE","MOULIN (RUE JEAN)","MULLER (AVENUE PAUL)","N25","PASTEUR","PERRACHE","PLACE DE LA REPUBLIQUE","PORTE ALMA","PORTE D IVRY","PORTE DE CHARENTON","PORTE DE CLICHY","PORTE DE PASSY","QUAI D ORSAY","QUAI DE LA RAPEE","RD 104","RD 118","RD 2007","RD 22","RD 906","RD 943","RD383   3.750 A 7.640","RN 2","RN13","RN406.W","ROCADE SUD RD 6161","ROUTE NATIONALE 2","ROUTE ROYALE","RUE DE COURCELLES","RUE DE LA CONVENTION","RUE DU FAUBOURG SAINT AN","RUE MARX DORMOY","RUE SAINT ANTOINE","STALINGRAD (AV DE)","TOULON (AVENUE DE)","rue de la gare","A10","A16","A26","A4 - PARIS PROVINCE","A43   0.550 A 3.353","A72","ALBERT-DHALENNE (RUE)","ALLEE DE LA REINE MARGUE","ANATOLE FRANCE (AV)","ANGLAIS (DU N� 114 AU N�","ARISTIDE BRIAND (AVENUE)","ARVE (QUAI D')","AUTOROUTE A 10.","AUTOROUTE A 3","AUTOROUTE A106","AUTOROUTE A21","AV DE LA LIBERATION","AVENUE DE CHAMPAGNE","AVENUE DE LA PORTE DE CH","AVENUE DE LA PORTE DE CL","AVENUE DE LA PORTE DE SA","AVENUE DE LA PORTE DE VI","AVENUE DE VILLIERS","AVENUE DU PRESIDENT WILS","AVENUE KELLERMANN","Autoroute A 33","Autoroute A.4","Autoroute A30","BD PERIPHERIQUE EXTERIEU","BELGIQUE (RUE  DE )","BONNEL (DE)","BOULEVARD ARAGO","BOULEVARD DE LA CHAPELLE","BOULEVARD DES BATIGNOLLE","BOULEVARD DU MONTPARNASS","BOULEVARD PASTEUR","BRIAND AVENUE ARISTIDE N","BRUMATH (ROUTE DE)","Bd Richard WAGNER","Boulevard Jean Jaur�s","CHARLES FLOQUET (AVENUE)","CLEMENCEAU GEORGES AVENU","CROIX ROUGE (AVENUE)","D11","D21","D25","D27","D41","D42","D606","D61","D71","D82","D928","D943","D944","D951","DAILLY","DE GAULLE (AV DU GENERAL","DE GAULLE (AVENUE CHARLE","DE GAULLE (AVENUE DU GEN","DE LATTRE DE TASSIGNY","DRAGUIGNAN (ROUTE DE) -","ECHANGEUR MUETTE","ESPAGNE (ROUTE D')","FONTAINEBLEAU (ROUTE DE)","GALLIENI (AV.) DE 1 A 10","GALLIENI (BOULEVARD)","GENAS (DE)","GENERAL DE GAULLE (RUE D","GENERAL FRERE (DU)","GENERAL LECLERC","GUILLOTIERE (DE LA)","Grande rue","HENRI BARBUSSE (AVENUE)","HUIT MAI 1945 (RUE DU)","IRENE JOLIOT CURIE","JEAN JAURES ( AVENUE )","JEAN JAURES (R)","JULES CANTINI (AVENUE)","LAENNEC","LAVERUNE (ROUTE DE","LECLERC   AVENUE DU GENE","LECLERC (AVENUE DU MAREC","LODEVE (AVENUE DE","LORIENT (DE)","LYON (DE)","LYON (ROUTE DE)","MARIETTON","MICHELET (AVE) : DU 1 AU","MONTABO (ROUTE DE) 1","MONTREAL -ROUTE DE -","N12W","N4","NICE(RN.7) AV.ET RTE DE","PARIS AVENUE DE N� IMPAI","PIERRE SEMARD","PORTE D AUTEUIL","PORTE DE GENTILLY","PORTE DE VANVES","QUAI DE GRENELLE","QUAI DE L HOTEL DE VILLE","QUAI DE LA TOURNELLE","RD 1","RD 11","RD 14","RD 213","RD 444","RD 6382","RD 9","RD 927","RD 93","RD383   14.250 A 18.000","REDON (BOULEVARD DU)","REPUBLIQUE (AVENUE)","REPUBLIQUE (DE LA)","RESISTANCE (AVENUE DE LA","RN 10","RN 12","RN 165","RN 21","RN124","ROCADE OUEST","ROMAIN ROLLAND (BOULEVAR","ROMAINS (ROUTE DES)","ROUTE DEPARTEMENTALE 15","RTE DE SAINT SIMON","RUE DE CHARENTON","RUE DU BAC","RUE LOUIS BLANC","RUE MANIN","RUE MONGE","RUE SAINT JACQUES","RUE VERCINGETORIX","Rue Pasteur","SAINT-JULIEN (ROUTE DE)","SCHIRMECK (ROUTE DE)","SERVIENT","STALINGRAD (DE)","Sens Aubagne vers Marsei","TONY GARNIER","VA007473 A62","VA007553 A61","VERN (DE)","VICTOR HUGO (AV)","VICTOR HUGO (AVE)  => N�","VITTON","VOSGES (AVENUE DES)","ZEPHIR (ROCADE)","rue principale","\"PAUL VAILLANT COUTURIER","4, RN4 - SECTION RIVIERA","8 MAI 1945   (Rue du)","A4.Y","A46S   53.980 A 57.400","A85","ALDUY (Paul)","ALLEES MARINES","ALSACE (RUE D')","ALSACE LORRAINE (BD D)","AMPERE","ANCIENS COMBATTANTS D IN","ARGELES SUR MER AVENUE D","ARGENTEUIL AV D'","AUTOROUTE (A1)","AV DE GRANDE BRETAGNE","AV DE STALINGRAD","AV DU GENERAL DE GAULLE","AV DU GENERAL LECLERC","AV GABRIEL PERI","AVENUE DE BAYONNE","AVENUE DE L HIPPODROME","AVENUE DE L OPERA","AVENUE DE LA PORTE D ORL","AVENUE DE LA PORTE DE LA","AVENUE DE VERSAILLES","AVENUE DU GENERAL MICHEL","AVENUE GEORGE V","AVENUE NATIONALE","Avenue de la R�publique","BARTHELEMY BUYER","BD D ARCOLE","BD DE STRASBOURG","BD LAZARE CARNOT","BELGES (DES)","BONAPARTE CHARLES  BD","BORDEAUX (AVENUE DE)","BOUCLE (DE LA)","BOULEVARD AUGUSTE BLANQU","BOULEVARD BARBES","BOULEVARD DE BERCY","BOULEVARD DE CLICHY","BOULEVARD DE L'OISE","BOULEVARD DE PICPUS","BOULEVARD KELLERMANN","BOULEVARD MASSENA","BOULEVARD PEREIRE","BOULEVARD POMMERY","BOULEVARD RICHARD LENOIR","BOULEVARD SAINT DENIS","BOULEVARD SAINT MARCEL","BOULEVARD SUCHET","BRIAND (RUE ARISTIDE)","CAMILLE PELLETAN (AVENUE","CAPELETTE (AVENUE DE LA)","CHALLEMEL LACOUR","CHANZY (BOULEVARD)","CHARLES KADDOUZ (RUE)","CHEMIN DU MERLAN A LA RO","CHOMEDEY DE MAISONNEUVE","CONSUL GENERAL NORDLING","CORAY ROUTE DE","COURS LA REINE","D 50","D115","D119","D120","D14","D28","D37","D39","D44","D48","D518","D56","D65","D911","D918","D937","D994","DANIELLE CASANOVA (RUE)","DANTON (RUE)","DAUPHINE (DU)","DE DION BOUTON (QUAI) DU","DEUX CROIX BOULEVARD","DIVISION LECLERC (AVENUE","DOCTEUR GAILLETON (DU)","DOUMER (BOULEVARD PAUL)","DROITS DE L'HOMME (DES)","DUBOUT (AVENUE ALBERT)","EBOUE (ROCADE FELIX)","EMILE ZOLA     (Cours)","FELIX EBOUE(ROCADE)","FLANDRES DUNKERQUE 1940","FOCH (AVENUE DU MARECHAL","FRAN�OIS MITTERRAND (AVE","GABRIEL PERI","GABRIEL PERI (R)","GABRIEL PERI (RUE)","GAGNY (ALLEE DE)","GAMBETTA (RUE)","HENRI BARBUSSE(BOULEVARD","HUGO VICTOR","JEAN JAURES (RUE)","JOFFRE (AVENUE DU MARECH","JOURDAN (AVENUE MICHEL)","LAFAYETTE","LECLERC","LIEUTAUD (COURS)","MARC BLOCH","MARCEAU (RUE)","MARECHAL DE SAXE","MARECHAL LECLERC (AVENUE","MATISSE (AV. HENRI)","MAXIME GORKI (BD)","MERCADER (BOULEVARD FELI","MITRY [CD115] (ROUTE DE)","MORETTI (BOULEVARD)","N13","NAPOLEON COURS AVANT BEV","NATIONAL (BOULEVARD)","NATIONALE (RUE)","OLIVES (AVENUE DES)","PAUL BERT (R)","PERIPHERIQUE ROUTIER","PIERRE BROSSOLETTE (AVEN","PIERRE MENDES FRANCE","PLACE DE LA PORTE MAILLO","PLACE DU MARECHAL DE LAT","POILUS (AVENUE DES)","POMME (BOULEVARD DE LA )","PONT DE SULLY","PONT DE VIVAUX (BOULEVAR","PORTE DAUPHINE","QUAI BRANLY","QUAI D AUSTERLITZ","RD 113","RD 20","RD 2060","RD 33","RD 43","RD 562","RD 59","RD 62","RD 81","RD 817","RD 901","RD 922","RD10","RD11","RD20","RD383   11.750 A 14.250","RD9","RECCO ABBE BOULEVARD","REPUBLIQUE","REPUBLIQUE (AVE DE LA )","RHIN TORTU (RUE DU)","RIMBAUD (RUE PAUL)","RN 124","RN 186","RN 70 (ROUTE EXPRESS)","RN 94","RN315 W","RN385","RN4 HORS AGGLOMERATION","RN9","ROGER SALENGRO     (Aven","ROGER SALENGRO (AVENUE)","ROME (RUE DE)","ROUGET DE L'ISLE","ROUTE DEPARTEMENTALE 652","ROUTE NATIONALE 230.","RT 20","RT 30","RT10","RUE BRANCION","RUE D ALESIA","RUE D AUBERVILLIERS","RUE DE LA REPUBLIQUE","RUE DE LA ROQUETTE","RUE DE VOUILLE","RUE DU COMMERCE","RUE JEAN JAURES","RUE PROUDHON","RUE ROYALE","Route de Salazie","Rte d�partementale 431","Rue du G�n�ral de Gaulle","SAINT ANTOINE (AVENUE DE","SAINT LOUP (BOULEVARD DE","SAINTE MARTHE (chemin)","SAUTEL  BOULEVARD ANDRE","SEZE (DE)","T20","TALABOT (BOULEVARD)","TEMPLIERS (ROUTE DES)","TOUR D'AUVERGNE (BD DE L","TROUBIRAN (CHEMIN DE)","VA008482 A624","VAILLANT COUTURIER (AVEN","VAILLANT COUTURIER PAUL","VOIE RAPIDE","kaweni-Europe (avenue)","le bourg","mamoudzou centre-Adrian","passamanty-Sada ( rue de","rue du stade","0, MARCEL PAUL (AVENUE)","8 MAI 1945 (DU)","A4.W","A4.Y - PARIS PROVINCE","A42   4.353 A 5.760   GE","A46S   43.680 A 47.880","A50 - Sens Aubagne vers","A5b","A6   455.000 A 455.614","A62","A621","A7   7.000 A 8.630","A7-Sens Lyon vers*Marsei","A71","ALBERT 1ER BD","ALBERT EINSTEIN (RUE)","ALLEE DU BORD DE L EAU","ALLEE DU VIGNOBLE","ALLENDE (QUAI SALVADOR)","ALLIES (BOULEVARD DES)","ALMA","ALOUETTES (AVENUE DES)","ALPHONSE DAUDET (RUE)","ARGENTEUIL (ROUTE D')","ARISTIDE BRIAND","ARISTIDE BRIAND (RUE)","AUTOROUTE A 21","AUTOROUTE A 62.","AUTOROUTE A 63.","AUTOROUTE A 86","AV CHARLES DE GAULLE","AV DES ETATS UNIS","AV DU 14 JUILLET 1789","AVENUE DE LA PORTE D ASN","AVENUE DE LA PORTE D ITA","AVENUE DE LA PORTE DE BA","AVENUE DE VERDUN","AVENUE DU PRESIDENT KENN","AVENUE FELIX FAURE","AVENUE LEDRU ROLLIN","Autoroute A7","Autoroute A9","BACHAGA SAID BOUALAM (AV","BAILLE (BD)","BARRE CITE ET RUE","BAS ( RUE DES )","BAS MARIN (R DU)","BD DE ROUBAIX","BERANGER (BOULEVARD)","BLANCARDE (BOULEVARD)","BONNEFOY (RUE)","BONNEVILLE (ROUTE DE )","BONNEVILLE (ROUTE DE)","BOULEVARD DAVOUT","BOULEVARD DE MENILMONTAN","BOULEVARD DE ROCHECHOUAR","BOULEVARD DES CAPUCINES","BOULEVARD DES INVALIDES","BOULEVARD DU PALAIS","BOULEVARD HENRI IV","BOULEVARD JEAN ALLEMANE","BOULEVARD LANNES","BOULEVARD ROMAIN ROLLAND","BOULEVARD WILSON","BRIGACHTAL (AVENUE DE)","CANEBIERE     1 A 79","CARRIERES (QU DES)","CD 212","CD 35","CD 900B","CD 938","CESSOLE (BD DE) (JUSQU'A","CHARLEVILLE","CHATEAUGIRON (DE)","CHOULANS (DE)","CLEMENCEAU (BD GEORGES)","COLBERT","COLONEL FABIEN (AVENUE)","CONQUERANT (BOULEVARD GU","CONVENTION (R DE LA)","COURS ALBERT 1ER","CREQUI (DE)","CROISAT AMBROISE RD 29 B","D 12","D102","D1083","D118","D124","D130","D131","D137","D1508","D210","D329","D38","D40","D43","D46","D523","D59","D6113","D619","D643","D66","D820","D83","D833","D88","D901","D902","D904","D906","D91","D913","D925","D942","D952","D955","D976","D992","D996","DAUMESNIL (AV)","DE GAULLE (AVENUE GENERA","DE GAULLE (AVENUE)","DE LATTRE DE TASSIGNY (1","DELESSERT (BOULEVARD BEN","DIGUE RONJON","DIVISION LECLERC (AV DE","DROITS DE LHOMME (CARREF","DUQUESNE","D�partementale  617","ECHANGEUR MAILLOT","EMILE DIDIER ( AV )","EPARGNE (DE L')","ESPLANADE SAINT LOUIS","EST (ROCADE)","ETREMBIERES (ROUTE D')","EUROPE (PLACE DE L')","FAUBOURG PONT NEUF (RUE","FAURE (RUE GABRIEL)","FEUILLAT","FOCH (RUE)","FOCH BOULEVARD","FORT DE LA BRICHE","FRANCE (AVENUE ANATOLE)","FRANCIS DE PRESSENSE","FRANCISQUE JOMARD","FRERES LUMIERE (DES)","FREVILLE (AVENUE HENRI)","GABRIEL PERI (AVENUE)","GARE (RUE DE LA)","GENERAL DE GAULLE (BLD D","GENERAL DE GAULLE(BOULEV","GENERAL LECLERC(AVE DU)8","GENEVE (RUE DE)","GEORGES GOSNAT (AV)","GEORGES POMPIDOU (RUE)","GERMAIN ST RUF (AVENUE )","GRASSET   AVENUE EDMOND","GRENOBLE (DE)  -  RN 6","GRESILLONS ( AVENUE DES","HENRI BARBUSSE (RUE) DE","INGERSHEIM (ROUTE D')","JAYR","JEAN BAPTISTE CLEMENT (A","JEAN JAURES (AV)","JEAN JAURES (AVENUE) (17","JEAN JAURES (AVENUE) COT","JEAN MOULIN","JEAN MOULIN (BOULEVARD)","JEAN SARRAZIN","JEANNE D'ARC (RUE)","JOSEPH GILLET","JUSTICE DE CASTELNAU (AV","KENNEDY  BOULEVARD J.F.","KENNEDY (AVENUE)","LA ROCHELLE (RUE DE)","LAMARTINE (RUE)","LE BOURG","LECLERC (AVENU DE LA DIV","LEON GEFFROY (R)","LETANDUERE","LIBERTE (BOULEVARD DE LA","LORRAINE (RUE DE)","LYON (AVENUE DE)","MAGINOT (AV. ANDRE)","MAIRIE (RUE DE LA)","MARC CHAGALL (BOULEVARD)","MARECHAL FOCH (RUE)","MARECHAL JOFFRE (DU)","MARECHAL LECLERC AVENUE","MARIUS VIVIER MERLE","MARNE   ( AVENUE DE LA )","MARNE (AVENUE DE LA)","MARTYRS (RUE DES)","MAR�CHAL JUIN (BOULEVARD","MAXIME GORKI (BOULEVARD)","MAZARIN (AVENUE)","MIRABEAU (RUE)","MITTERAND (MAIL FRANCOIS","MONT D'EST (BD)","MONTREAL (RUE DE)","MOULIN BOULEVARD","MOULIN CAGE (QUAI)","N12Y","N44","N7","N85","NONNEVILLE (AVENUE DE)","OLIVIER D ORMESSON (AV)","PALAVAS (AVENUE DE)","PAPIN DENIS -BD-","PASTEUR (BD)","PATTON AVENUE","PAUL CAZENEUVE","PAUL SEDAILLIAN","PIERRE DOIZE  (RUE)","PLACE CLEMENT ADER","PLACE DE L OPERA","PLACE DENFERT ROCHEREAU","PLACE DU VINGT CINQ AOUT","PLACE GAMBETTA","POMPADOUR(CARREFOUR)","PONS NOEL RUE","PRESIDENT ALLENDE BOULEV","PROFESSEUR BEAUVISAGE (D","Place de la R�publique","QUAI ANATOLE FRANCE","QUAI DE GESVRES","QUAI DE VALMY","QUAI DES CELESTINS","QUAI FRANCOIS MITTERRAND","QUEUE EN BRIE (RTE DE LA","R DE PARIS","RAYMOND TEISSERE (RUE)","RD 1006","RD 1075","RD 1089","RD 127","RD 131","RD 15","RD 153","RD 18","RD 188 CHEVREUSE","RD 19","RD 191","RD 2009","RD 26","RD 29","RD 31","RD 316","RD 36","RD 39","RD 44","RD 5","RD 606","RD 612","RD 67","RD 7N","RD 810","RD 86","RD 909","RD 915","RD 918","RD 923","RD 934","RD 939","RD 974","RD 98","RD 994","RD14","RD1508","RD21","RD26","RD33","RD36","RD612","RD64","RESISTANCE (PLACE DE LA)","RIVE NEUVE (QUAI)","RIVET (AVENUE JEAN CHARL","RN 57","RN 88","RN11","RN315 Y","RN4","RN4 - SECTION RIVIERA","RN85","ROGER SALENGRO","ROI RENE BOULEVARD","ROISSY (ROUTE DE)","ROQUEBILLIERE (R. DE)","ROSE (AVENUE DE LA)","ROUGET DE L ISLE (AV)","ROUTE DE BEHOBIE","ROUTE DE SEVRES A NEUILL","ROUTE DE STRASBOURG","ROUTE DEPARTEMENTALE 465","ROUTE DEPARTEMENTALE 656","ROUTE NATIONALE 3","ROUTE NATIONALE 568","RTE D'AMIENS","RTE DE NARBONNE","RTE DE SEYSSES","RUE CAMBRONNE","RUE CARDINET","RUE CHANZY","RUE D AVRON","RUE DE BAGNOLET","RUE DE BERCY","RUE DE L UNIVERSITE","RUE DE LA GARE","RUE DE LA POMPE","RUE DE MENILMONTANT","RUE DE TURENNE","RUE DE VERDUN","RUE DES FRANCS BOURGEOIS","RUE DU FAUBOURG POISSONN","RUE DU GENERAL KOENIG","RUE DU RENARD","RUE EDOUARD VAILLANT","RUE OBERKAMPF","RUE PELLEPORT","RUE VICTOR HUGO","Route Nationale 83","Route du Littoral","Route du Sacr� Coeur","Route nationale 2","Route nationale 7","Rte d�partementale 27","Rte d�partementale 52","Rue de la Gare","Rue de la gare","SABLIERE (ROUTE DE LA)","SADI CARNOT (BOULEVARD)","SAINT EXUPERY (AVENUE AN","SAINT MARCEL (BOULEVARD","SAINT MENET (AVENUE DE)","SAINT-BRIEUC (DE)","SALVADOR ALLENDE (RUE)","SAMPIERO CORSO - AV","SARTRE   AVENUE JEAN-PAU","SEMARD (AVENUE PIERRE)","ST VINCENT","STALINGRAD (RUE DE) A10","STRASBOURG (BOULEVARD)","T11","THEOPHILE SUEUR (BOULEVA","THONON (ROUTE DE)","TILLON (AVENUE CHARLES)","TONNER (AVENUE FRANCIS)","Tunnel Joliette Marseill","VALMY (BD DE)","VAUBAN (AVENUE)","VERDUN (AV DE)","VERDUN (BD DE)","VERDUN (BOULEVARD DE)","VERDUN (DE 62 A FIN)","VERDUN AVENUE DE AUTRES","VEZZANI - RUE CESAR","VICTOR HUGO (AVENUE)","VICTOR-HUGO (BD)","VIEILLE ROUTE SAINT PEE","VILLENEUVE   RUE","VILLENEUVE ( RUE DE LA)","WILLIAM BOOTH (AVENUE)","ZOLA (RUE EMILE)","avenue de la lib�ration","boulevard des crabes","mamoudzou centre-RP Pass","rue du pont","vahibe-Departementale 3","\"GUESDE JULES (BOULEVARD","\"STALINGRAD (AVENUE), NR","08 PK RN237 RE MOULIN JU","1, GABRIEL PERI (BOULEVA","1, JULES GUESDE (RUE)","122, AVENUE DU GENERAL L","14 ET 22 JUIN 1962","18 AOUT (RUE DU)","1848 (BOULEVARD)","30, AVENUE DE LA PORTE D","34 PK RN11 NANTES ROCADE","4 AOUT 1789    (Rue du)","4, PLACE DE LA CONCORDE","52 (ROUTE NATIONALE)","8 MAI 1945 (AVENUE","A150","A20","A31","A4 PROVINCE PARIS","A43","A43   3.865 A 9.894","A47   0.000  A 1.657","A49","A52","A55 - Sens Marseille ver","A6   451.790 A 453.400","A7   15.770 A 20.110","A7   29.920 A 31.960","A72 -","A75","A89","AIGUILLETTES  (BD 5 A 73","AILES (ALLEE DES)","ALBERT 1ER","ALES (ROUTE)","ALEXANDRE DUMAS (RUE)","ALFORTVILLE (AV D)","ALOUETTE (AVENUE)","ALSACE LORRAINE (AVENUE)","AMBROISE PARE","ANATOLE FRANCE","ANDRE CITROEN (BOULEVARD","ANDRE LASSAGNE","ANDRE MORIZET (AVENUE) -","ANGLAIS (DU N� 45 AU N�","AQUEDUC DE BEAUNANT (DE","ARAGON AVENUE","ARCEAUX (BOULEVARD DES)","ARIANE (BD DE L')","ARISTIDE BRIAND (AVENUE","AV D ELCHE","AV DE MURET","AV DE VERDUN","AV DES MINIMES","AV GENERAL DE GAULLE","AV ROGER SECRETAIN","AV SALVADOR ALLENDE","AV STALINGRAD","AVENUE BONAPARTE","AVENUE CARNOT","AVENUE CHARLES DE GAULLE","AVENUE DE FRIEDLAND","AVENUE DE L'HOPITAL","AVENUE DE LA LIBERATION","AVENUE DE LA MOTTE PICQU","AVENUE DE LA PORTE D AUT","AVENUE DE SUFFREN","AVENUE DENFERT ROCHEREAU","AVENUE DES GOBELINS","AVENUE DES MINIMES","AVENUE DES TERNES","AVENUE DU GROS CHENE","AVENUE DU TREMBLAY","AVENUE EDOUARD VAILLANT","AVENUE GENERAL DE GAULLE","AVENUE GETARIA","AVENUE IBSEN","AVENUE PAUL DOUMER","AVENUE PAUL VALERY","AVENUE RAYMOND POINCARE","AVENUE WINSTON CHURCHILL","AYGALADES (AVENUE DES)","AYRAULT","Autoroute A 330","Autoroute A4","Av Compagnie des Indes","Av du G�n�ral Leclerc","Avenue de la Lib�ration","Avenue du G�n�ral De Gau","Avenue du G�n�ral de Gau","Avenue du Pdt Mitterand","BALATA (ROUTE DE)","BALZAC","BARASSE","BARBES RUE","BAREL (BD VIRGILE)","BD BEAUVILLE","BD DE L'EUROPE","BD DE LA MUETTE","BD RICHARD WAGNER","BEAUREPAIRE (BOULEVARD)","BECQUEREL (RUE)","BEGAND (RUE)","BELLE BORNE (RUE)","BEN GOURION   (AV)","BERNARD (CLAUDE)","BERT (RUE P.)","BERTHELOT (MARCELIN) (AV","BESANCON (DU 72TER A LA","BIRGE BOULEVARD","BLANC LOUIS (BOULEVARD)","BLUM (RUE LEON)","BODIN (AVENUE EMILE)","BOIS L ABBE (R DU)","BOLHEN   (DE)","BON PASTEUR (DU)","BOUL ALSACE LORRAINE","BOUL CHARLES DE GAULLE","BOUL D'ALSACE LORRAINE","BOUL MARCEL DASSAULT","BOULEVARD BESSIERES","BOULEVARD BRUNE","BOULEVARD DAUPHINOT","BOULEVARD DE DOUAUMONT","BOULEVARD DE LA PAIX","BOULEVARD DE PORT ROYAL","BOULEVARD DE STRASBOURG","BOULEVARD GENERAL MARTIA","BOULEVARD JULES VERNE","BOULEVARD MORTIER","BOULEVARD MURAT","BOULEVARD SAINT MARTIN","BOULEVARD SOULT","BOULEVARD TOURASSE","BOUVET","BPNL","BRAM -ROUTE DE-","BREST (DE)","BRETEUIL (RUE)","BRIAND (AVE ARISTIDE)","BRIAND BOULEVARD ARISTID","BROSSOLETTE (RUE PIERRE)","BROSSOLETTE PIERRE (AV)","BRUNE (BOULEVARD)","Bd Jean Jaur�s","Bretelle acc�s autoroute","CAILLOLS (AVENUE DES)","CALIGNY (QUAI DE)","CARNOT (AVENUE)","CASSIN (RUE RENE)","CD 105","CD 941","CD 951","CD1","CELESTINS (DES)","CENTRE COMMERCIAL ROCADE","CHABANAS (RUE DE )","CHAMPIGNY (BD DE)","CHAMPLAIN (AV)","CHARANCE ( AVENUE DE )","CHARLEMAGNE","CHARLES DE GAULLE (BD DU","CHARLES GIDE (AV)","CHARLES LINDBERGH (AV)","CHARLES LIVON (BOULEVARD","CHARMILLES (MAIL DES)","CHARTRES RUE DE","CHAUMIN BOULEVARD","CHEMIN DE CEINTURE DU LA","CHENE POINTU (ALLEE DU)","CHENES (CHEMIN DES)","CLEMENCEAU (BOULEVARD GE","CLEMENCEAU (BOULEVARD)","CLICHY (QUAI DE) DE (104","COMMANDANT DUMONT ( AVEN","CONVENTION (RUE DE LA)","COPENHAGUE (RUE DE)","CORBEIL (ROUTE DE)","CORPS EXPEDITIONNAIRE FR","COSTE","CROISETTE (BOULEVARD DE","CROUPILLAC (AVE DE)","CUVIER","Chauss�e Royale","D 104","D 1075","D 13","D 22","D 47","D 62","D 67","D 8","D 939","D100","D1006 Route de Lyon","D101","D1029","D103","D1032","D104","D108","D113","D114","D117","D12","D1206","D123","D125","D126","D140","D141","D142","D153","D17","D18","D206","D213","D2152","D247","D29","D306","D321","D323","D403","D47","D49","D50","D519","D52","D54","D55","D554","D6015","D610","D63","D64","D674","D751","D76","D90","D900","D907","D908","D910","D919","D920","D921","D926","D93","D939","D94","D940","D947","D960","D973","D978","D980","D986","DAMES (BOULEVARD DES)","DE GAULLE (BD CHARLES)","DE JOUVENEL (BOULEVARD H","DEBOURG","DELMAS   AVENUE MAURICE","DEPORTES (RUE DES)","DIDEROT (AV)","DIX-HUIT JUIN 1940 (AVEN","DODIN (AVENUE ROGER)","DUNANT (AVENUE HENRI)","DUNANT (RUE HENRI)","DUNKERQUE (RUE DE)","D�partementale 2","ECHANGEUR AUTEUIL","ECHANGEUR BAGNOLET","ECHANGEUR CHAPELLE","EDOUARD VAILLANT (AVENUE","EGALITE (RUE DE L')","EMILE ZOLA (BOULEVARD)","EMMANUEL CHABRIER)","ENCO DE BOTTE (RTE)","EUGENE DERUELLE","EUROPE (AVENUE DE L' )","EUROPE (BOULEVARD DE L')","Europe ( rond point de l","FAUBOURG D'ARRAS RUE","FAUCEILLE (CHEMIN DE LA)","FLAHAULT (AVENUE CHARLES","FLANDRES\/DUNKERQUE (CARR","FOCH (AVENUE)","FOCH (BOULEVARD)","FONTENAY (R DE)","FOUGERAS (RUE DE)","FOUGERES (RUE DE)","FRANCE ANATOLE (RUE)","FRANCOIS MITTERRAND (AVE","FRANCOISE DUPARC (BOULEV","FRANKLIN ROOSEVELT","FRANS ROUTE DE","FRAN�OISE DUPARC (BOULEV","FRATERNITE (BOULEVARD DE","GABRIEL PERI (AVENUE) (1","GABRIEL-PERI (AV)","GALLIENI (RUE)","GALMOT (AVENUE)","GAMBETTA (A PARTIR DU N�","GAMBETTA (JUSQU'AU N� 62","GARE (AVENUE DE LA)","GASTON LACOSTE","GAULLE BOULEVARD CHARLES","GENERAL DE GAULLE (AV) D","GENERAL DE GAULLE (QUAI","GENERAL LECLERC (AV)","GENERAL LECLERC (BD DU)","GEORGES BRAQUE (BOULEVAR","GEORGES DIMITROV","GEORGES LAFAURIE (RUE)","GEORGES POMPIDOU ( BD)","GERMAIN","GORBELLA (BD DE)","GOUNOD","GRAND HAMEAU (Avenue du","GRANDE (RUE)","GRASSE RTE DE","Grande Rue","HAGUENAU (PLACE DE)","HENON","HENRI BARBUSSE (R)","HENRI BARBUSSE (RUE)","HIPPODROME (AVENUE DE L'","HUGO (RUE VICTOR)","HUIT MAI (AVENUE DU)","HUIT MAI 1945 (AV DU)","HUIT MAI 1945 (AVENUE DU","IMPERATRICE","INDUSTRIE (RUE DE L')","ITALIE (RUE D')","JACQUES COEUR (AVENUE)","JANVIER (AVENUE JEAN)","JANVIER (RUE GUILLAUME)","JARDY","JAURES (AVENUE JEAN) DE","JAURES (BOULEVARD JAURES","JAURES (RUE  JEAN )","JAURES JEAN (AVENUE)","JAURES RUE JEAN","JEAN CAGNE","JEAN DE VIENNE (COURS)","JEAN GIONO (AVENUE)","JEAN MONNET (RUE)","JEAN MOULIN (AVENUE)","JEAN ZAY","JOFFRE (AVENUE)","JOHN KENNEDY (BOULEVARD)","JOLIOT CURIE (RUE)","JOUX (avenue de)","JUIN (BOULEVARD MARECHAL","JUIN BOULEVARD MARECHAL","JULES FAVRE","JULES GUESDE (RUE)","JULIAN GRIMAU (R)","JULIETTE RECAMIER","KENNEDY (AVENUE DU PRESI","KLEBER (RUE)","L'APPEL DU DIX-HUIT JUIN","LA FONTAINE (BOULEVARD)","LAC DE MAINE AVENUE","LAGRANGE (AVENUE LEO)","LAREVELLIERE","LATTRE DE TASSIGNY (AV D","LAURENT-CELY  ( AVENUE )","LAVIEILLE (RUE FRANCOIS)","LAVOISIER (RUE)","LECLERC (AVENUE DE LA DI","LEDRU ROLLIN (AV)","LENINE","LENINE (AVENUE) NR 28 A","LENINE VLADIMIR ILITCH A","LEON BERARD","LEON BLUM","LEON BLUM (AV)","LEON MARCHAND (AV)","LIBERATION (RUE DE LA)","LIBERTE (DE LA)","LILLE (RUE DE)","LIONEL TERRAY","LORTET","LOUIS BLANC","LOUIS ROCHE (AVENUE) (1\/","LUCIEN LEFRANC (QUAI)","LYS (RUE DES)","Le bourg","MADELEINE (DE LA)","MADRAGUE VILLE (chemin d","MAI 1945 (AVENUE DU 8)","MALGRANGE (AVENUE DE LA)","MANGO (ROUTE)","MARCEL PAUL (AVENUE) (1\/","MARCEL SEMBAT","MARECHAL FOCH (AVENUE DU","MARECHAL JUIN","MARECHAL JUIN (BOULEVARD","MARECHAL JUIN AVENUE","MARECHAL LECLERC","MARECHAL LECLERC (R DU)","MARIGARDE (ROUTE DE LA)","MARINGOUINS (ROND-POINT)","MARIUS BERLIET","MARTYRS DE LA RESISTANCE","MARX DORMOY (AV)","MATHIEU DUSSURGEY","MAUNOURY (AVENUE DE MARE","MAURICE THOREZ","MAURICE THOREZ (AV)","MAZARGUES (ROND-POINT)","MEAUX RUE DE","MECHES.(RUE DES)","MEDERIC (AVENUE)","MEIGNANNE","MER (Bld de la )","MERIMEE","MERMOZ (BOULEVARD JEAN)","METZ (BOULEVARD DE)","METZ (ROUTE DE)","MICHELET(AV):N�1AU 103","MIREILLE LAUZE (BOULEVAR","MITTELHAUSBERGEN (ROUTE","MITTERAND (AVENUE FRANCO","MONDIAL 98 (AVENUE DU)","MONGE (AVENUE)","MONISTROL (RUE)","MONPLAISIR BOULEVARD","MONTABO (ROUTE DE) 2","MONTAIGNE (DE 39 A 111 E","MONTEE SAINT JEAN","MONTESSON (ROUTE DE)","MONTGOLFIER","MONTPELLIER (ROUTE DE)","MORBIHAN AVENUE DU","MOUILLERON (RUE GABRIEL)","MOZART (RUE)","MULSANT (RUE)","N 85","N1104 X D212","N12","N77","NANTES (AVENUE DE)","NANTES (DE)","NAPOLEON COURS APRES BEV","NARBONNE (ROUTE DE)","NATIONALE (RUE) 1\/37 - 2","NEUHOF (ROUTE)","NEUILLY (ROUTE)","NEUILLY (RUE DE)","NOBEL (RUE ALFRED)","NOISY (ROUTE DE) JUSQU'A","OBERHAUSBERGEN (ROUTE D","OSCHATZ (D')","OSTWALD (RUE D )","OUTREBON (AVENUE)","OWENS JAMES","PAIX (RUE DE LA)","PALAVAS D986 (ROUTE DE)","PAPETERIE(RUE)","PARADIS (RUE)       1 A","PARC (DU)","PARILLY (DE)","PARIS (BOULEVARD DE)","PARIS (DE)","PATTON (AVENUE DU GENERA","PAUL BERT AVENUE","PAUL CLAUDEL (BOULEVARD)","PAUL DOPFF (RUE)","PAUL LANGEVIN (AVENUE) (","PAUL SANTY","PAVE NEUF (AVENUE)","PAVELET (AVENUE DU COLON","PEN AR CH'LEUZ (ROND POI","PERIPHERIQUE","PERIPHERIQUE SUD","PERRIN (RUE FRANCOIS)","PETIT PEROU","PETITS PONTS (ROUTE DES)","PIERRE BROSSOLETTE","PIERRE DELORE","PIERREFEU (ROUTE DE) RD","PLACE DE L ALMA","PLACE DE LA BASTILLE","PLACE DE LA CHAPELLE","PLACE DE LA PORTE DE MON","PLACE DE LA PORTE DE SAI","PLACE JEAN JAURES","PLACE VALHUBERT","PLACE VAUBAN","PLAGE BOULEVARD DE LA","PLAINE DES BOUCHERS (RUE","POINCARE (AV. RAYMOND)","POINTIS INARD (ROUTE DE)","POLOGNE (AVENUE DE)","POMPIDOU GEORGES -ROND P","PONT DE TOLBIAC","PONT L'ABBE ROUTE DE","PORTE DE CLEUNAY","PORTE DE ST MALO","PORTE DU PRE SAINT GERVA","POUDRETTE     (Rue de la","PRADO (contre all�e)","PRESIDENT EDOUARD HERRIO","PRESIDENT ROOSEVELT (AVE","PREUILLY (BOULEVARD)","PRINCE IMPERIAL COURS","PR�SIDENT PAUL DOUMER (Q","PUTEAUX (PONT DE)","QUAI D ISSY LES MOULINEA","QUAI FRANCOIS MAURIAC","QUAI HENRI IV","QUAI PANHARD ET LEVASSOR","QUAI SAINT BERNARD","QUATORZE JUILLET (BOULEV","QUATORZE JUILLET (RUE DU","QUATRE EGLISES (RUE","QUATRE SEPTEMBRE (QUAI D","R-N 57.","RABELAIS","RABELAIS (RUE FRANCOIS )","RACINE (AVENUE)","RAOUL DUFY (AVENUE)","RASPAIL","RD 1004","RD 109","RD 114","RD 119","RD 12","RD 1201","RD 1206","RD 122","RD 13","RD 189","RD 2","RD 2144","RD 24","RD 25","RD 28","RD 307","RD 4","RD 42","RD 492 DU RP OCEANIS AU","RD 53","RD 559","RD 58","RD 6","RD 603","RD 613","RD 619","RD 63","RD 643","RD 650","RD 674","RD 683","RD 70","RD 752","RD 8","RD 82","RD 840","RD 86 DE MONTS � TOURS","RD 88","RD 911","RD 920","RD 936","RD 942","RD 946","RD 951","RD 956","RD 991","RD1","RD1201","RD145","RD15","RD191","RD2","RD263","RD27","RD28","RD30","RD31","RD37","RD4","RD40","RD5","RD6","RD7N","RD810","RD97","RECTEUR JEAN SARRAILH","REDOUTE (ROUTE DE LA)","REINE (ROUTE DE LA) 39\/1","REMPARTS   CHEMIN DES","RENAN (AVENUE ERNEST)","REPUBLIQUE ( AV. DE LA )","REPUBLIQUE (AV. DE LA)","REPUBLIQUE (BD DE LA)","REPUBLIQUE (DE)","RESISTANCE (AV. DE LA -P","RESISTANCE (RUE DE LA)","RICHELIEU (BOULEVARD DE)","RN 1057 (CH. EPITAPHE-CH","RN 113","RN 134","RN 154","RN 431","RN 449","RN 580","RN 6","RN 67","RN1013","RN1014 W","RN104.INT","RN113","RN116","RN346   34.850 A 36.215","RN520","RN57","RN6 (CHARTONNIERE)","RN88 -","ROCADE","ROCADE (BOULEVARD DE LA)","ROCADE 13-14","ROCADE N 347","ROCHEFORT (DE)  (AVENUE)","ROGER SALENGRO (RUE)","ROI RENE (BD DU)","ROND POINT CHAMPS ELYSEE","ROUGET DE LISLE","ROUSSE EMILE","ROUTE DE BORDEAUX","ROUTE DE CEINTURE DU LAC","ROUTE DE GARGES","ROUTE DE LA PTE DAUPHINE","ROUTE DE LA PTE DES SABL","ROUTE DE LYON","ROUTE DE SAINT JOSEPH","ROUTE DE STRASBOURG D 48","ROUTE DEPARTEMENTALE 29","ROUTE DEPARTEMENTALE 3","ROUTE DES MOULINS","ROUTE DES TRIBUNES","ROUTE DU SACRE COEUR","ROUTE DU TEIL","ROUTE NATIONALE 113 - CA","ROUTE NATIONALE 186","ROUTE NATIONALE 227","ROUTE NATIONALE 356","ROUTE NATIONALE 569","RT 10","RT11","RTE D ALBI","RU DE GIRONDE (AV DU)","RUBEN (AVENUE ERNEST)","RUE AUBER","RUE BALARD","RUE CAULAINCOURT","RUE CHAMPIONNET","RUE CHARLES DE GAULLE","RUE D AMSTERDAM","RUE DE CHATEAUDUN","RUE DE JAVEL","RUE DE L AMIRAL MOUCHEZ","RUE DE L EVANGILE","RUE DE L OURCQ","RUE DE LA MARSEILLAISE","RUE DE LA VERRERIE","RUE DE LOURMEL","RUE DE MAUBEUGE","RUE DE MEAUX","RUE DE METZ","RUE DE MIROMESNIL","RUE DE RENNES","RUE DE SEVRES","RUE DES 3 PINS","RUE DES CULTIVATEURS","RUE DES ECOLES","RUE DU COLONEL FABIEN","RUE DU FAUBOURG BONNEFOY","RUE DU GENERAL LECLERC","RUE DU RANELAGH","RUE DU VAL DE MARNE","RUE EMILE ZOLA","RUE ETIENNE MARCEL","RUE FROIDEVAUX","RUE JEAN DE LA FONTAINE","RUE LECOURBE","RUE NEUVE TOLBIAC","RUE RAYNOUARD","RUE SAINT HONORE","RUE SAINT LAZARE","RUE TRONCHET","Route D�partementale 108","Route D�partementale 29","Route d�partementale 19","Route d�partementale 2","Route d�partementale 6","Rte d�partementale 415","Rte d�partementale 430","Rte d�partementale 483","Rue de Paris","Rue de la R�publique","R�publique ( boulevard d","SAINT ANDRE (ROUTE DE)","SAINT ANTOINE A SAINT JO","SAINT BARNABE (AVENUE DE","SAINT DIZIER (RUE 82 ET","SAINT GILLES (ROUTE)","SAINT JUST (AVENUE DE)","SAINT LOUIS (AVENUE DE)","SAINT SERNIN (ROUTE DE)","SAINT-DENIS (RUE DE)","SAINT-DIE (AV. DE)","SAINT-HELIER","SAINT-MALO (RUE DE)","SAINTE MARGUERITE (RUE)","SALYENS ( AVENUE DES )","SAULNIER JULES","SEMARD (RUE PIERRE)","SEMBAT (RUE MARCEL)","SERGENT MICHEL BERTHET (","SONIA DE LAUNAY (VOI)","SOULAS (AVENUE DU PERE","SOUTERRAIN VAN GOGH","STAINS (RTE DE)","STALINGRAD (QUAI DE)","STENDHAL (AVENUE)","STEPHANOPOLI NICEPHORE","STRASBOURG (ROUTE DE)","THIERS","THIERS   RUE","TOURCOING (RUE DE)","TOURNAI (ROUTE DE)","TREVOUX (AVENUE DE)","TROIS CENT VINGT NEUVIEM","TROIS MAIRES (RUE DES)","TURCAN FRANCIS","UNIVERSITE (DE L')","UNIVERSITE CHICAGO (RUE","VA007306 A64","VA007342 LA CEPIERE  A62","VAILLANT (RUE EDOUARD)","VALBARELLE (BOULEVARD DE","VALIN (AVENUE DU GENERAL","VALIOUD","VALLES (JULES)","VANEAU","VEIL (AV. SIMONE)","VENDOME","VERDUN (AVENUE)","VERDUN (DE)","VERSAILLES (RUE DE)","VESOUL RUE DE (inf 52)","VIC. HUGO(RUE)091A113 ET","VICTOIRE (RUE DE LA)","VICTOR HUGO (BD)","VICTOR HUGO (RUE)","VILLEBOIS MAREUIL (BD)","VILLETTE (DE LA)","VINCENT DELPUECH (BOULEV","VINGT SIXIEME R.I. (BOUL","VIVIANI","VOIE DES BERGES","VOIE ROMAINE (AV. DE LA)","VOISIN (BOULEVARD ANDRE-","Verdun 1916 ( avenue de","WAGNER (BOULEVARD RICHAR","WANTZENAU (ROUTE DE LA)","ZOLA (BOULEVARD EMILE)","autoroute A4","ave Andr� MAGINOT","ave Georges POMPIDOU","avenue Charles de Gaulle","avenue de la gare","avenue de verdun","avenue du grand sud","avenue du g�n�ral de gau","cavani-Kavani sud ( rue","chemin SAINTE MARTHE","d994","doujani-Mosqu�e doujani","kaweni-Caserne ( rue de","kaweni-Kaweni sud  (Z I)","mamoudzou centre-Rassi B","route de lyon","route de paris","rue de Nantes","rue de paris","rue de rennes","rue des MARTYRS","rue du 19 mars 1962","rue du 8 mai 1945","rue du COLOMBIER","rue du G�n�ral Leclerc","rue du g�n�ral de gaulle","rue du moulin","tsoundzou-Kadjifouni ( r","tsoundzou-Kwal� ( route","tsoundzou-Maternelle ( r","\"PIERRE SEMARD (RUE \"\"CO","\"SEMBAT MARCEL (BD), NR","\"STRASBOURG, NR 36 ET SU",", BOULEVARD DE SEBASTOPO",", RUE LA FAYETTE","., PIERRE MENDES FRANCE","0, GLOBE (RUE DU)","0, LOUIS ROCHE (AVENUE)","0, MAGALOTTI (RUE)","0, MARECHAL FOCH (RUE DU","0, PIERRE DE COUBERTIN P","0, PIERRE TIMBAUD (RUE)","0, PORTE DE TRIVAUX (RUE","0, RN 165","00, A87N","00, DAVID D'ANGERS","00, LORIENT (DE)","00, MOULIN BOULEVARD","00, PREVALAYE (CHEMIN DE","01, MIMARD ETIENNE JUSQU","03 PK RN237 MOULIN JUSTI","05 PK RN237 RE MOULIN JU","06 PK RN237 RE MOULIN JU","1, CONSUL GENERAL NORDLI","1, EUROPE (AVENUE DE L')","1, JACQUES DUCLOS (RUE)","1, JEAN JAURES (AVENUE)","1, LONGJUMEAU (route de)","1, PAUL LANGEVIN (AVENUE","1, PLACE VALHUBERT","1, WALLACE (BD RICHARD)","1, doujani-Mosqu�e de do","100, BARBUSSE HENRI BOUL","100, RUE DE LA CHAPELLE","103, ETATS UNIS (DES)","103, HANNE (BOULEVARD)","104 ( ROUTE DEP�RTEMENTA","104, BOULEVARD DE COURCE","104, HENRI BARBUSSE (AVE","104B ( ROUTE DEPARTEMENT","107, AVENUE VICTOR HUGO","11 NOVEMBRE 1918    (Bou","11 NOVEMBRE 1918 (DU)","11, MADRID (AVENUE DE)","110, AVENUE EMILE ZOLA","112 PK RN137 JUSTICE ROC","112, WILLIAM BOOTH (AVEN","114, GENERAL DE GAULLE (","116, BOULEVARD SUCHET","12, PAUL VAILLANT COUTUR","12, QUAI FRANCOIS MITTER","120, GABRIEL-PERI (AV)","121, DOCTEUR DERVAUX  (","129, JOFFRE (AVENUE DU M","129, PETIT PEROU","133, AVENUE DE VILLIERS","137, AVENUE PARMENTIER","140, AVENUE D ITALIE","15, AVENUE DE LA PORTE D","159, RUE LA FAYETTE","15EME CORPS (AVE DU)","168, BOULEVARD HAUSSMANN","17, ALEX ANSALDI (RUE)","18 AOUT 44 (RUE DU)","18, AVENUE CORENTIN CARI","189, RUE D AUBERVILLIERS","193, RUE DE TOLBIAC","2, PLACE DE L OPERA","2, PLACE DE LA CONCORDE","2, ROUTE DES TRIBUNES","2, RUE DE LA CONVENTION","204, BINEAU (BOULEVARD,","208, RUE DE RIVOLI","21 AOUT 1944 (AVENUE DU)","21, QUAI DE MONTEBELLO","23, PLACE DE LA REPUBLIQ","23, QUAI DE CONTI","233, RUE DE VAUGIRARD","241, BOULEVARD SAINT GER","25, MURIERS (DES)","25EME REGIMENT DE TIRAIL","267, RUE DU FAUBOURG SAI","289, CLEMENCEAU GEORGES","3, BOULEVARD BARBES","312","32, MICHELET(AV):N�1AU 1","33 PK RN11 ROCADE NANTES","33 grande rue","35 PK RN11 ROCADE NANTES","4, RN4-ROND POINT SAINT","40, RUE DU LOUVRE","41, AVENUE DE FRIEDLAND","41, JANVIER (AVENUE JEAN","42 rue de l'�galit�","42, GAMBETTA (BOULEVARD)","47, HAVRE BOULEVARD DU","48, BOULEVARD SERURIER","48, SAINT LOUIS (AVENUE","49, AVENUE DES CHAMPS EL","49, AVENUE PARMENTIER","49, LOUIS ARMAND (RUE)","5, ALEMBERT (RUE D')","50, MARNE   ( AVENUE DE","51 BIS, BOULEVARD SAINT","519 AVENUE DE PARIS","54, GENERAL DE GAULLE (A","54, REPUBLIQUE (AV DE LA","546, MIRELLE LAUZE (BOUL","59, BOULEVARD PONIATOWSK","6 rue de l'�glise","6, PLACE SAINT AUGUSTIN","60 Bd Voltaire","60, CLICHY (QUAI DE) DE","60, RUE DE COURCELLES","62, AVENUE SIMON BOLIVAR","62, PARIS (RUE DE)","63, AVENUE PARMENTIER","65, RUE DES ENTREPRENEUR","66, BOULEVARD ORNANO","69, BOULEVARD SAINT MICH","69, RUE ARMAND CARREL","71, AVENUE DE VILLIERS","77, \"LANDY RD 20, NR IMP","8 MAI 1945 (AV DU )","8 MAI 1945 (AVENUE DU)","8 MAI 45 (AVENUE DU 1 AU","88, RUE DE LA FEDERATION","9, RUE ORDENER","93, RUE DE LA CHAPELLE","96, AVENUE PHILIPPE AUGU","A 40","A 48","A104.EXT","A11","A13 Y","A28","A36","A38","A4.W - PROVINCE PARIS","A42     0.560 A 4.020","A42   6.290 A 8.310","A42 4.329 A 5.760   LYON","A43   13.029 A 15.971","A46N   19.955 A 25.180","A46N   N\/S  25.680 A 25.","A46N 25.180 A 25.680","A46S   40.883 A 43.680","A46S   49.160 A 53.980","A46S   57.400 A 61.010","A47 -","A48","A5","A51","A52-Sens Toulon vers Pon","A55-Sens*Marseille vers","A557-Liaison A7 Marseill","A6   449.510 A 451.640","A64","A66","A7   0.000 A 2.278","A7   2.278 A 3.690","A7   4.270 A 5.756","A7   8.630 A 10.992","A750","A8 PK058.500","A84","A87","A9","ABBAYE (RUE DE L')","ABBE PIERRE","ABBE ROGER DERRY (AV DE","ABREUVOIR","ACADEMIE PLACE","ACHILLE PERETTI (AVENUE,","ADOLPHE THIERS (RUE)","AEROPORT INTERNATIONAL (","AGENT SARRE (AV DE L')","AIGUILLETTES  (BD 16 A 2","ALBERT 1ER (BD)","ALBERT GARRY (R)","ALBERT THOMAS(RUE)","ALEX ANSALDI (RUE)","ALEX ANSALDI RUE","ALEX. FLEMING (Bd)","ALEXANDRE FOURNY (R)","ALEXANDRE III (BOULEVARD","ALEXIS PERRONCEL     (Ru","ALFRED KASTLER (ROUTE)","ALFRED NOBEL","ALL CHARLES DE FITTE","ALL HENRI SELLIER","ALL JULES GUESDE","ALLENDE (AVENUE DU PRESI","ALLENDE SALVADOR (AVENUE","ALLIES (BD DES)","ALPES (QUAI DES)","ALSACE (AVENUE)","ALSACE-LORRAINE (BOULEVA","ALVITRE (AVENUE ABBE)","AMIOT (BOULEVARD FELIX)","AMIRAL MOUCHEZ (BD)","AMPERE (RUE)","AMUSANT (PAUL)","ANATOLE FRANCE (BOULEVAR","ANCIENS COMBATANTS D'IND","ANCIENS COMBATTANTS A.F.","ANCIENS COMBATTANTS D'AF","ANDELLE (CHAUSSEE D')","ANDRE MALRAUX (RUE)","ANDRE PHILIP","ANDRE ROUY (R)","ANDRE ZENATTI (AVENUE)","ANDR� ROUSSIN (AVENUE)","ANDUZE (AVE)","ANNEXION (RUE DE L')","ANTOINE LUMIERE","ANTONIN PERRIN     (Rue)","ANTRAIN (D') DE 43 ET 80","APPEL DU DIX HUIT JUIN 1","AQUITAINE (RUE D')","ARAGO (RUE)","ARAGO FRANCOIS AVENUE","ARC ( RUE JEANNE D'N","ARCADES (RD POINT)","ARENC (QUAI D')","ARGENTEUIL ( AVENUE D' )","ARISTIDE BRIAND (R)","ARISTIDE BRIAND(RUE)85 +","ARMEE DES ALPES (BD DE L","ARMENY (RUE D')","ARSON (RUE)","AUBAREDE (CHEMIN DE L')","AUDIENCE (RUE DE L')","AUGE (BOULEVARD DU DR LE","AUTOROUTE A 1","AUTOROUTE A 104","AUTOROUTE A 36","AUTOROUTE A4","AUTOROUTE A9015","AUTOROUTE A9015.2","AUXERRE (ROUTE)","AV CHARLES LINDBERGH","AV CRAMPEL","AV DE FRONTON","AV DE LA REPUBLIQUE","AV DE LA VILLE IDEALE","AV DE LATTRE DE TASSIGNY","AV DE LYON","AV DES DROITS DE L'HOMME","AV DIVISION LECLERC","AV DU CHATEAU D'ESTE","AV DU GENERAL FOY","AV EGLISE SAINT-JOSEPH","AV GEORGES POMPIDOU","AV JEAN JAURES","AV LOUIS JOSEPH SOULAS","AV MARECHAL LECLERC","AV MARIE ET PIERRE CURIE","AV ROBERT SCHUMAN","AVE DE VERDUN","AVE MARIA(rond point)","AVE THIERS","AVELANEDE (CHEMIN DE L')","AVENUE ALBERT REYNIER","AVENUE ALFRED NOBEL","AVENUE BENOIT FRACHON","AVENUE BREBANT","AVENUE BUGEAUD","AVENUE CARTELLIER","AVENUE CHRISTOPHE COLOMB","AVENUE CLEMENCEAU","AVENUE CORENTIN CARIOU","AVENUE D EYLAU","AVENUE D IENA","AVENUE D'ANTIBES","AVENUE D'EPERNAY","AVENUE D'ESPAGNE","AVENUE DE BRETAGNE","AVENUE DE BUROS","AVENUE DE CHANTACO","AVENUE DE FRANCE","AVENUE DE GRAMMONT","AVENUE DE GRAVELLE","AVENUE DE LA BOURDONNAIS","AVENUE DE LA CONCORDE","AVENUE DE LA FORET","AVENUE DE LA PORTE D AUB","AVENUE DE LA PORTE DE SE","AVENUE DE LA PORTE DES P","AVENUE DE LAON","AVENUE DE LOWENDAL","AVENUE DE MALAKOFF","AVENUE DE PROVENCE","AVENUE DE SANTONA","AVENUE DE SOLOGNE","AVENUE DES AYGALADES","AVENUE DU 8 MAI","AVENUE DU DOCTEUR ARNOLD","AVENUE DU DOCTEUR NOEL F","AVENUE DU GRAND BASQUE","AVENUE DU MAHATMA GANDHI","AVENUE DU MARECHAL GALLI","AVENUE DU MARECHAL JUIN","AVENUE DU PRES KENNEDY","AVENUE DU TRONE","AVENUE DU VAL AUX DAMES","AVENUE DU VERCORS","AVENUE FERDINAND BUISSON","AVENUE GEORGES POMPIDOU","AVENUE HENRI DE NAVARRE","AVENUE HENRI MARTIN","AVENUE HOCHE","AVENUE JEAN MOULIN","AVENUE JOSEPH BOUVARD","AVENUE LAHOUZE","AVENUE LOUIS DE FOIX","AVENUE MARECHAL SOULT","AVENUE MATIGNON","AVENUE MOZART","AVENUE NICEPHORE NIEPCE","AVENUE NIEL","AVENUE PERCIER","AVENUE PIERRE DE COUBERT","AVENUE PIERRE MENDES FRA","AVENUE PIERRE SEMARD","AVENUE RAIMU","AVENUE SARAH BERNHARDT","AVENUE SIMON BOLIVAR","AVENUE VICTORIA","AYLMER (BOULEVARD D')","Acc�s A57 Beno�t Malon T","Autoroute A.351","Autoroute A11","Autoroute A43","Autoroute A57","Av Alexandre Fleming","Av du G�n�ral de Gaulle","Avenue Commune de Paris","Avenue Fr�d�ric Mistral","Avenue Georges Pompidou","Avenue Henri Barbusse","Avenue Ile de France","Avenue Rico Carpaye","Avenue de Bresse","Avenue de VERDUN","Avenue de Verdun","Avenue de la gare","Avenue des Mascareignes","Avenue du Mar�chal Lyaut","Axe mixte de Cambaie","BAHONNEAU BOULEVARD","BALANDE   RUE GASTON","BALZAC (AVENUE HONORE DE","BANDOL (ROUTE de)","BANDOL (ROUTE)","BARBERIS (RUE)","BARBUSSE (AVENUE HENRI)","BARDOUL","BARLA (RUE)","BARRE (DE LA)","BAS ROGERS (RUE DES)","BASSEE (RTE DE LA)","BASSENS (AVENUE DE)","BAUDIN (AVENUE) ( RN21)","BD ARISTIDE BRIAND","BD CHARLES DE GAULLE","BD DE LA MARQUETTE","BD DE SUISSE","BD DENFERT ROCHEREAU","BD DES COURTIES","BD DES FRERES MOGA","BD FAIDHERBE","BD FLORENCE ARTHAUD","BD GAMBETTA","BD GRIFFOUL DORVAL","BD MATABIAU","BD SALVADOR ALLENDE","BD SILVIO TRENTIN","BEAUBLANC (BOULEVARD DE)","BEAUCAIRE (ROUTE)","BEAUFORT (ROUTE DE)","BEAULIEU (PORTE DE)","BEAUREGARD","BEAUSEJOUR JAMBETTE (ROU","BEAUSSIER BOULEVARD","BECQUEREL (HENRI)","BEDIER BOULEVARD","BEETHOVEN (COUR)","BEETHOVEN (RUE)","BEL AIR (BOULEVARD DE)","BEL AIR (R DU)","BEL AIR (RUE DU)","BELFORT (RUE DE)","BELFORT RUE DE BELFORT (","BELGES (QUAI DES)","BELGIQUE (RUE DE)","BELLAC (RUE DE)","BELLEC MAURICE (RTE DU C","BELLECOMBE (DE)","BELLEVUE","BERCHERES (RUE DES)","BERCY (QU DE)","BEREGOVOY (AVENUE PIERRE","BERGER (AVENUE GASTON)","BERGSON A PARTIR N� 18-5","BERIGNY (QUAI)","BERLIN (AVENUE DE)","BERLIOZ AVENUE","BERRY-BOUY (ROUTE DE)","BESANCON (FAUBOURG DE)","BESNADIERE","BESSET AVENUE CYRILLE","BEULET (RUE DU)","BEVERINI VICO PAIR AVENU","BICHERAY. AVENUE DU COMM","BIGNE A FOSSE","BIGNON (DU)","BIGNON BOULEVARD ET ROND","BLANC (BD DR EUGENE)","BLANC (LOUIS)","BLANC AVENUE ROSETTE","BLANCHOIN BOULEVARD","BLUM  LEON RUE","BLUM ( BD LEON )","BLUM (AV. LEON)","BLUM (QUAI LEON)","BOILEAU","BOIS DE GROSLAY (DES)","BOIS GRONEE (AVENUE DU)","BOISSY (RUE DE)","BOISSY.(AVENUE DE)","BOLLEE (AV) N� IMP 347 E","BONDY (DE)","BOUFFLERS (AV. DE 74 A 3","BOUIN (RUE JEAN)","BOUJU (RUE)","BOULE PLACE DE LA","BOULEVARD D AURELLE DE P","BOULEVARD D INDOCHINE","BOULEVARD DE BEAUSEJOUR","BOULEVARD DE BELLEVILLE","BOULEVARD DE BONNE NOUVE","BOULEVARD DE CHARONNE","BOULEVARD DE CHATENAY","BOULEVARD DE DOULON","BOULEVARD DE EMPEREUR","BOULEVARD DE LA TOUR MAU","BOULEVARD DES ANGLAIS","BOULEVARD DES FILLES DU","BOULEVARD DES TONDEURS","BOULEVARD DU FORT DE VAU","BOULEVARD DU GEN LECLERC","BOULEVARD DU MASSACRE","BOULEVARD DU TEMPLE","BOULEVARD GARIBALDI","BOULEVARD GOUVION SAINT","BOULEVARD GUSTAVE ROCH","BOULEVARD HENRI BERGSON","BOULEVARD MONTMARTRE","BOULEVARD ROBERT SCHUMAN","BOULEVARD ROGER SALENGRO","BOULEVARD SALVADOR ALLEN","BOULEVARD VENDEE GLOBE","BOULINGRIN (ROND POINT D","BOURGELAT CLAUDE","BOURGEOIS (RUE LEON)","BOURNARD (RUE DU)","BOURRAT BOULEVARD JEAN","BOURRELY (CHEMIN DES)","BOUYALA D'ARNAUD (BOULEV","BPNL   37.781 A 41.124","BRANLY (RUE EDOUARD)","BRAUN THEODORE  AV","BREST (RUE DE)","BREUCQ BOULEVARD DU","BREVANNES (R DE)","BRIANCON (BOULEVARD)","BRIAND  ARISTIDE RUE","BRIAND ( AV.  ARISTIDE)","BRIAND ( AV. ARISTIDE) 1","BRIAND ( AV. ARISTIDE) 3","BRIEY (ROUTE DE)","BRIQUETTERIE (CHEMIN DE","BROCHIER (RUE)","BROGLIE (AVENUE LOUIS DE","BROGNY (AVENUE DE) (SECT","BROSSOLETTE PIERRE (BD)","BROSSOLETTE(AVENUE PIERR","BROTTEAUX (DES)","BRUAY ( AVENUE DE )","BRUNOY (RUE DE)","BRUYERES RUE DES","BUCAILLE (RUE DE LA)","BURDEAU   BD ( HORS GEAN","BUREL (BOULEVARD)","BURKEL (ROUTE)","BUS (RD301)   0.000 A 2.","BUS (RD301)   4.470 A 7.","BUS (RD301)  2.800 A 4.4","BUZOT (RUE)","Bd Charles DE GAULLE","Bd Compagnie des Indes","Bd Hubert Delisle","Bd du Prince Vinh-San","Boulevard Gabriel Mac�","Boulevard du Chaudron","Bretelle sortie autorout","C2","CABOT (BOULEVARD)","CAMILLE GROULT (R)","CAMILLE PELLETAN(RUE)17","CAMPI LOUIS BD","CANEBIERE    30 A 68","CANNES (RUE DE)","CANUTS (DES)","CAP - ROUTE DU CAP","CAP DE CROIX (AV. ET TUN","CAPITAINE GEZE (BOULEVAR","CAPUCINS (CHEMIN ET IMPA","CARNOT ( QUAI)","CARNOT (BOULEVARD ET TRA","CARNOT (R)","CARNOT (RUE SADI)","CARNOT SADI RUE","CARREFOUR POMPADOUR","CARREFOUR RN20 \/ CD120","CARRIEU (RUE MARIUS)","CARTIER (BD JACQUES)","CASSIN ( BD RENE )","CASSIN (AVENUE RENE)","CASSIN (BD RENE)","CATALOGNE (PLACE DE)","CAZAUX (ROUTE DE LA SERR","CD 112","CD 119","CD 12","CD 15","CD 20","CD 21","CD 26","CD 28","CD 312","CD 579","CD 580","CD 607","CD 612","CD 9","CD 916","CD 925","CD 929","CD 940","CD 942 DE CARPENTRAS A R","CD137","CD16 (LE DELA)","CD31","CD34","CD9","CHALANDRAY (RUE DE)","CHALLES (ROUTE DE)","CHAMBAUD DE LA BRUYERE","CHAMP ROY (DU)","CHAMPION HENRI (RUE) N�","CHANTE PERDRIX (tvse)","CHANZY ( AVENUE DE )","CHANZY (RUE)","CHAPELLE","CHAPELLE (RUE DE LA)","CHARDONCHAMP  (ROUTE DE)","CHARLES DE GAULLE (AV)","CHARLES DE GAULLE (GRAND","CHARLES DE GAULLE(AV)","CHARLES GOUNOD (RUE)","CHARLES TILLON (route)","CHARLETTERIE (RUE DE LA)","CHASSEURS (RUE DES)","CHASSEURS ALPINS (ROND-P","CHATEAU (AVENUE DU)","CHATEAU (ROUTE DU)","CHATEAU D'EAU (RUE DU)","CHATEAU D'O (ROND-POINT","CHATEAU GOMBERT CHEMIN","CHATELIER (QUAI DU )","CHATILLON (DE)","CHAUVEAU","CHAZELLES ( COURS LOUIS","CHE DE FENOUILLET","CHE DES IZARDS","CHENOVE (DE) (RUE)","CHERON (AVENUE HENRI)","CHEVILLY (R DE)","CHEVREUL","CHEZY (BD DE)","CHOISY(ROUTE DE)","CHOLET (RUE DE)","CHURCHILL (AVENUE SIR WI","CHURCHILL (AVENUE WINSTO","CHURCHILL AVENUE ET SQUA","CHURCHILL WINSTON (PLACE","CLAUDE BERNARD","CLAUDE DEBUSSY","CLAYE  (RUE DE  )","CLEMENCEAU (RUE GEORGES)","CLEMENCEAU GEORGES ( BD)","CLICHY (AVENUE DE)","CLICHY (QUAI DE) DE (8 A","CLOS COURTEL (DU)","CLUNY (ROUTE DE)","COL DU SERRE (CHEMIN DU)","COLBERT (RUE)","COLOMBES","COMMANDANT BARRE (AVENUE","COMMANDANT CHARCOT (DU)","COMMUNE DE PARIS (RUE DE","CONCORDE (DE LA)","CONDORCET","CONDORCET (RUE)","CORBEIL (RUE)","CORDES (RTE DE)","CORMERY (RUE DE)","CORNEILHAN (ROUTE DE)","CORNICHE (ROUTE DE LA)","CORNIGLION MOLINIER (BD)","CORPS FRANC POMMIES (AVE","COTE D'AMOUR (RTE DE LA)","COUDRAIE (RUE DE LA)","COUPEE (GRANDE-RUE DE LA","COURBET GUSTAVE  RUE","COURNEUVE (ROUTE)","COURS DE VERDUN","CRETEIL (BD DE)","CROIX (CHEMIN DE LA)","CROIX FICHET (RUE DE LA)","CROIZAT ( RUE AMBROISE )","CRS DE LA MARNE","CURIE (BOULEVARD)","CURIE PIERRE ET MARIE AV","Charles de gaulle","Chemin Boeuf","Chemin Roland Garros","Chez Salot","Corniche JFK","Corniche John Fitzgerald","D 115","D 123","D 125","D 185","D 215","D 27","D 28","D 29","D 32","D 33","D 35","D 4","D 43","D 46","D 56","D 606","D 6089","D 84","D 9","D 902","D 906","D 98","D 982","D.613 ( SAINT DESIR)","D1017","D1044","D1085","D109","D1091 Rochetaill�e","D1235","D127","D128","D129 X D140","D133","D139","D145","D149","D150","D151","D1532","D155","D157","D159","D165","D168","D17A","D200","D2007","D205","D208","D21  ROUTE DE CARNON","D217","D218","D22","D225","D228","D231","D231 X BRET. D934","D239","D240","D251","D313","D318","D32","D33","D3508","D36A","D415","D464","D468","D486","D520","D520B","D526","D531","D540","D562","D57","D570N","D578A","D58","D60","D6007","D603","D609","D6098","D6110","D612","D618","D62","D622","D632","D653","D67","D68","D70","D72","D735","D775","D785","D786","D830","D834","D84","D86","D8N","D9 - R. DES TROIS VILLES","D905","D92","D927","D930","D931","D935","D936","D941","D953","D956","D96","D975","D982","D984","D987","D988","D990","D999","DALBIEZ (AVENUE VICTOR)","DANIEL CASANOVA (BOULEVA","DANIEL MAYER","DANIELLE CASANOVA","DANIELLE CASANOVA (AV)","DANIELLE CASANOVA PROLON","DARCY (PLACE)","DAVID D'ANGERS","DE FLEURY (ROUTE )","DE GAULLE (BOULEVARD DU","DE GAULLE (PROMENADE CHA","DE GAULLE GENERAL AVENUE","DE GAULLE RUE DU GENERAL","DE SAINT LOUIS AU ROVE (","DE VALMY BOULEVARD","DEBARQUEMENT (ROND POINT","DEBUSSY (RUE CLAUDE)","DECAZEVILLE (AVENUE DE)","DECLE RENE (RUE)","DELAUNAY HENRI","DELIVRANDE (RUE DE LA)","DENAVE (AVENUE PIERRE)","DENIS","DEPARTEMENTAL 12","DEPARTEMENTAL 212 (ROUTE","DEPORTES (ROUTE DES )","DESCARTES (RUE \/ AVE)","DESROCHE (RUE HENRI)","DESSERTE INDUSTRIELLE  (","DEVOS (BOULEVARD JULIEN)","DIDIER (ROUTE DE)","DIGUE DES FRANCAIS (TRAV","DIJON (RUE DE)","DIVISION LECLERC (31 A 5","DIVISION LECLERC (53 A 2","DIVISION LECLERC (RUE DE","DIX NEUF JANVIER","DIX NEUF MARS 1962 (RUE","DOCKS (DES)","DOCTEUR BAUER(RUE DU) :N","DOCTEUR MARIE (R DU)","DOCTEUR REBILLARD (RUE D","DOCTEUR ROLLET       (Ru","DOCTEUR SUREAU","DOLE RUE DE (entre 82 et","DOLE RUE DE (inf 82)","DOLE RUE DE (sup 200)","DOTHEMARE","DOUANE (QUAI DE LA)","DOUMER (AVENUE PAUL)","DOUMER (AVENUE PAUL) EST","DOUMERGUE (RUE GASTON)","DOURDEIN (RUE AUGUSTE )","DRAGUIGNAN (AVENUE DE)","DUBLED (RUE GUSTAVE)","DUCHERE (DE LA)","DUCLOS (AVENUE JACQUES)","DUGAZON","DUNKERQUE AVENUE DE","DUTEMPLE (R )","Douville","D�partementale 1","D�partementale 10","D�partementale 1131","D�partementale 13","D�partementale 347","D�partementale 45","D�partementale 60","D�partementale 6086","D�partementale 7","D�partementale 764","D�partementale 84","D�partementale 910","D�partementale 914","ECHANGEUR ISSY","ECHENILLY (RUE)","ECOLES (BD DES)","ECOLES (RUE DES)","EDISON RUE THOMAS","EDITH CAVELL","EDMOND ROSTAND (RUE)","EDOUARD HERRIOT (RUE)","EGALITE (DE L')","EGALITE RUE DE L","EGLISE (RUE DE L')","EISENHOWER (AVENUE)","ELLEON (AVENUE)","ELYSIQUES (VOIES DES)","EMBRUN ( AVENUE D')","EMILE ALLIAUD (AVENUE)","EMPEREUR (ROUTE DE L') E","EOURES (ROUTE D')","ERGUE ARMEL BOULEVARD D'","ERNEST RENAN","ESCADRILLE NORMANDIE NIE","ESCARTEFIGUE (CORNICHE)","ESP EDOUARD BRANLY","ESPAGNE (BOULEVARD D')","ESPALION (ROUTE D')","ESTIENNE D'ORVES (AVENUE","ESTIENNE D'ORVES (RUE D'","ESTIENNE D'ORVES BOULEVA","ESTREES (AVENUE D')","ETANGS  (AVENUE DES)","ETATS UNIS (QUAI DES)","ETIENNE CUCCA-CD908 (AVE","ETIENNE DOLET (R)","ETRETAT ( ROUTE D')","ETTORE BUGATTI (RUE)","EUROPE  ROND POINT DE","EUROPE (AVENUE DE L )","EUROPE (CARREFOUR DE L')","EUROPE (DE 58 A 166 ET 9","EUROPE (PONT DE L )","EUROPE (RN 190) AVENUE D","EUROPE\/VALAIS","EUSEN VICTOR","EVREUX (PLACE D')","EXPRESS (VOIE)","EYSSAGNIERES ( ROUTE DES","FAIDHERBE (AVENUE)","FAIDHERBE RUE","FAITA VINCENT (RUE)","FALAISES (ROUTE DES) MAI","FAUCIGNY (RUE DU)","FAURIEL (COURS)","FAUVETTES (RUE DES)","FEDERICO GARCIA LORCA","FELIX FAURE (RUE)","FELTRE ( RUE DE )","FERRER RUE","FERRY (BOULEVARD JULES)","FERRY (RUE JULES)","FIGUEROLLES FAUBOURG","FIL D'ARIANE","FILAUX (RUE ABBE)","FLEURS RUE DES","FOCH (AVENUE MARECHAL)","FOCH (BOULEVARD MAL.)","FOCH RUE DU MARECHAL","FOCH(AVENUE DU MARECHAL)","FORET (RUE DE LA)","FORET NOIRE (AVENUE DE L","FORT (RUE DU)","FORT UHRICH (ROUTE DU)","FOUGERES (ROUTE DE)","FOULON (AVENUE PROFESSEU","FOURMIES (BOULEVARD DE)","FOURNET (RUE)","FRACHON BENOIT AVENUE","FRANCE (AVENUE)(SECTEUR","FRANCE (R. DE) DU N� 1-2","FRANCE (RUE ANATOLE)","FRANCE ANATOLE (DE 55 A","FRANCE ANATOLE ENTREE A1","FRANCE ANATOLE ENTREE A8","FRANCE LIBRE  AVENUE DE","FRANCOIS MAZELINE","FRANCOIS MITTERAND ( AVE","FRANCOISE DUPARC (Bd)","FRANKLIN ROOSEVELT (COUR","FRIEDBERG (BD DE)","FUSILLES DE LA RESISTANC","GABRIEL PERI (AV)","GAGARINE (RUE  YOURI )","GAGNY (AVENUE DE)","GAL DE GAULLE AV. DU","GALLIENI (AVENUE DU GENE","GALLIENI (QUAI)","GAMBETTA LEON RUE","GANGES (ROUTE DE","GARE (AV DE LA)","GARE (BD DE LA)","GARE (ROUTE)","GARE D'EAU (DE LA)","GARE D'EAU AV.  DE LA (i","GARENNE","GARIBALDI (AVENUE)","GARIBALDI (BOULEVARD)","GAROUTTE (BOULEVARD)","GARRATS (AVENUE DES)","GASQUET (AVE JOSEPH DE 1","GASSION (AVENUE FERNAND","GAULLE   AVENUE DU GENER","GAULLE (AVENUE DU GENERA","GAULLE (AVENUE GENERAL D","GAULLE (RUE DU GAL DE)","GENERAL DE CASTELNAU (RU","GENERAL DE GAULLE  (AVEN","GENERAL DE GAULLE (PLACE","GENERAL GALLIENI (RUE DU","GENERAL GIRAUD (DU)","GENERAL LECLERC  (RUE DU","GENERAL LECLERC(AV)","GENERAL LECLERC(AVE DU)(","GENERAL ROGUET (RUE DU)","GENERAL TOUZET DU VIGIER","GEORGES BIZET (ALLEE)","GEORGES POMPIDOU","GERARDMER (route de)","GERLAND (DE)","GIRATOIRE MARINGOUINS","GIRAUDEAU (RUE)","GIRONDINS AVENUE DES","GLACIERE (RUE DE LA)","GLASGOW (DE 1 A 9 ET 2 A","GOUMS (AVENUE DES)","GRAND LAUNAY","GRAND PRE DES BORDES","GRAND'RUE","GRANIER (ROND POINT ERNE","GRASSE AVENUE DE","GRAY ROUTE DE","GRENOBLE (ROUTE DE)","GUEIDON (BOULEVARD)","GUERINAIS (BD DE LA)","GUESDE (AVE JULES)","GUESDES (RUE JULES)","GUILLAUDOT ( DU GENERAL","GUILLAUME FAREL ( AVENUE","GUILLAUME LE CONQUERANT","GUILLOU (BOULEVARD YVES)","GUITON   AVENUE JEAN (16","GUSTAVE CHARPENTIER (R)","GUSTAVE GANAY (BOULEVARD","GUSTAVE LEVEILLE (R)","GUTENBERG BOULEVARD","GUYNEMER (AVENUE GEORGES","G�n�ral de Gaulle  ( ave","HARAS DE JARDY","HASPRES (R. D')","HAUTPOUL (BOULEVARD)","HAVRE. ROUTE DU","HENRI BARBUSSE","HENRI BARBUSSE (AVE) N�1","HENRI BARNIER (BOULEVARD","HENRI FAISANS","HENRI IV","HENRI LANGLOIS","HENRI MARTIN (R)","HENRY CHERON (RUE)","HERBET FOURNET (BOULEVAR","HERBOUVILLE (D')","HERRIOT ( BOULEVARD EDOU","HEURTELOUP (BOULEVARD)","HEUZE OLIVIER AV N� PAIR","HOCHE (AVENUE)","HOCHE (RUE)","HOCHFELDEN (RUE DE)","HONFLEUR (ROUTE D'HONFLE","HOPITAL (ROUTE DE L )","HOTEL DE VILLE (RUE DE L","HOUOT (AVENUE CDT)","HUGO (AVENUE VICTOR)","HUGO (BOULEVARD VICTOR)","HUIT MAI 1945 AVENUE DU","HUIT MAI 1945 RUE DU","HUIT-MAI-1945 (AVENUE DU","ICARD (BOULEVARD)","IMPERIALE (Route) D464","IMPERIALE - ROUTE","INDUSTRIE (BOULEVARD DE","INDUSTRIEL. BOULEVARD (C","INKERMANN (BOULEVARD D')","INTERCOMMUNAL (B)","IVRY (ROUTE D')","Inter D51C et D46","J. GUESDES(RUE)103A139ET","JACQUARD (BOULEVARD)","JACQUES KABLE (RUE)","JACQUINOT (RUE)","JADFARD (RENE)","JASMIN(LOTISSEMENT)","JAURES (PLACE JEAN)","JAURES AVENUE JEAN","JAURES JEAN (AV) N� IMP","JAURES JEAN RUE","JAURES. AVENUE JEAN","JEAN JACQUES DE MONAIX","JEAN JACQUES ROUSSEAU","JEAN JACQUES ROUSSEAU (P","JEAN JACQUES ROUSSEAU AV","JEAN JAURES      (Rue)","JEAN JAURES  (AVE)  157","JEAN JAURES (AVENUE) N�","JEAN JAURES (BD) DE 47 A","JEAN JAURES (PLACE)","JEAN LOLIVE (AVENUE)(107","JEAN MERMOZ (RUE)","JEAN MONNET","JEAN MONNET (BD)","JEAN MOULIN (BD)","JEAN MOULIN (RUE)","JEAN XXIII","JEANNE D'ARC (BOULEVARD)","JEANPIERRE (AVENUE MAURI","JOFFRE ( BD MARECHAL )","JOFFRE (BD MARECHAL)","JOFFRE (BOULEVARD MARECH","JOFFRE (RUE DU MARECHAL)","JOFFRE MARECHAL AVENUE D","JOHN F. KENNEDY (AVENUE)","JOLIETTE (QUAI DE LA)","JOLIOT CURIE F. ET IRENE","JOLIVET (RUE)","JOSEPH MADEC","JOUHAUX (AV. LEON)","JOURDANE GASTON -PLACE-","JUIN (AVENUE DU MARECHAL","JUIN (V DU MARECHAL)","JULES CANTINI (AV)","JULES CHAGOT (QUAI)","JULES DURAND (BD)","JULIEN PANCHOT (AVENUE)","Jacques EBERHARD (Avenue","Jean Jaures (Avenue)","KARL MARX (AV)","KENNEDY   AVENUE DU PRES","KENNEDY (BD JOHN-FITZGER","KERFEUNTEUN RUE DE","KERGUERES (Route de)","KERUSTUM  ROND POINT DE","KLEBER (PLACE)","L ARMEE D AFRIQUE (CHEMI","LA FONTAINE","LA FONTAINE (RUE)","LACROIX   RUE MARIUS","LACROIX (BOULEVARD DU DO","LAENNEC (BD RENE)","LAGNY (R DE)","LAGRANGE  AVENUE LEO","LANDOUGE (AVENUE DE)","LATTRE DE TASSIGNY (AVEN","LAURENCIE (AVENUE CAPITA","LAUSANNE (RUE DE)","LAVAL (RTE DE) PAIRS","LAVALETTE -ROUTE DE-","LD \"CHAUVIN\"","LE CHATELIER","LE GUENNEC LOUIS BOULEVA","LECLERC AV. DU GENERAL P","LECLERC GENERAL AVENUE","LECLERC\/AUROCHS","LEFAUCHEUX PIERRE (BD)","LEMAN (AVENUE DU)","LENINE (BOULEVARD)","LEON BLUM (AVENUE)","LEON BOURSIER","LEON JOUHAUX","LEPANTE (R. DE)","LEPOUZE (RUE)","LEROY PLACE","LES BLACHES","LES BRUYERES","LESVEN JULES (DE 26 A 58","LIBERATION   RUE DE LA","LIBERATION ( AV. DE LA )","LIBERATION (BOULEVARD)","LIBERATION (DE LA)","LIBERATION (RTE DE LA)","LIBERATION - AVENUE","LIBERTE (RUE DE LA)","LIBERTE BVD N�147 A FIN-","LIEUTAUD (COURS)      2","LIMOGES (AVENUE DE)","LITTORAL (CHEMIN DU)","LOBAU (BOULEVARD)","LOGE (RUE DE LA)","LOMBARDS (AVENUE)","LONDRES (AVENUE DE)","LONGSARD (route de)","LOUBES (ROUTE DES)","LOUIS BECKER        (Rue","LOUIS BLANC (QUAI)","LOUIS BREGUET (AVENUE)","LOUIS PASTEUR (QUAI)","LOUIS REGIS (RUE)","LOUIS SCOCARD (RUE)","LOUIS TALAMONI (R)","LOUISON BOBET (AV)","LUCIEN FRANCAIS (AV)","LUCIEN LANTERNIER (AVENU","LUXEMBOURG (AV DU)","LYCEE (BOULEVARD DU)(BRO","LYON (DE) (D 518)","LYON (RTE DE)","LYONNAIS (DU)","LYONS LA FORET. ROUTE DE","La Tuili�re","Les Egats","Les Galets","Lichessol","L�ON LACHAMP (ROUTE)","MACCHABEES (DES)","MACON (ROUTE DE)","MADEMOISELLE BOURGEOIS","MADRAGUE DE MONTREDON (A","MAERTENS GEORGES RUE","MAGALOTTI (RUE)","MAIL   ALLEE DU","MALADRERIE AV DE LA","MALRAUX (QUAI ANDRE)","MARANA (ROUTE)","MARAT (R)","MARCEAU (PLACE)","MARCEL BOYER (QU)","MARCEL CACHIN","MARCEL CACHIN (AV)","MARCEL HOUEL","MARCEL MERIEUX","MARCEL SEMBAT (AVENUE)","MARCET (RUE BAPTISTE)","MARECHAL DELATTRE DE TAS","MARECHAL FOCH ( AVENUE D","MARECHAL FOCH (AVENUE) C","MARECHAL FOCH (DU)","MARECHAL JOFFRE (BD DU)","MARECHAL JOFFRE (RUE DU)","MARES (AVENUE HENRI)","MARIE DE MONTPELLIER","MARIE MADELEINE FOURCADE","MARNE (AV. DE LA)","MAROTS (RUE DES)","MARQUISAT (AV DU)","MARQUISATS (AVENUE DES)","MARSEILLE ( AVENUE DE )","MARSEILLE (DE)","MARTINE (TRAVERSE LA)","MARTRE (RUE) DE (59 A 10","MARTYRS ( AVENUE DES )","MARX DORMOY (RUE)","MARX DORMOY BOULEVARD","MARYSE BASTIE","MAS-DONAT (DU)","MASSENA","MATISSE (RUE HENRI)","MAUMUS (RUE JEAN)","MAURIAC (RUE)","MAURICE BOKANOWSKI","MAURICE FLANDIN","MAURICE RIQUIEZ (QUAI)","MAURIN (AVENUE DE","MAXIMILIEN ROBESPIERRE (","MAZAGRAN (RUE DE)","MENDES FRANCE (AV)","MENDES FRANCE (BOULEVARD","MENDES FRANCE AVENUE PIE","MENDES FRANCE PIERRE (AV","MER (AVENUE DE LA)","MERE ELISABETH RIVET","MERIMEE (PROSPER)","MERLAN (AVENUE)","MERMOZ JEAN RUE","METALLURGIE (AVENUE)","METZ (BD DE)","METZ (RUE DE)","MEUDON (RUE DE) - COTE P","MICHELET BLD","MILLENAIRE (BOULEVARD DU","MINERVOISE -ROUTE-","MIRABEAU (BOULEVARD)","MIRELLE LAUZE (BOULEVARD","MITTERRAND ( RUE FRANCOI","MOATTI PASSAGE","MOLIERE (AVENUE)","MOLIERE (R)","MON IDEE (RUE DE)","MONCLAR (Avenue)","MONNET (RUE JEAN)","MONS (RUE DE)","MONTAUBAN D 958 (ROUTE D","MONTBOUCONS CHEMIN DES","MONTCALM   RUE","MONTE CASSINO (ROND POIN","MONTEBELLO BOULEVARD N�","MONTELS-EGLISE (RUE DE)","MONTLHERY (ROUTE DE)","MONTOLIVET (AVENUE DE)","MONTPELLIER (AVENUE DE)","MONTPENSIER","MONTRAPON AVENUE DE","MONTS D'ARREE (AVENUE DE","MONTTESSUY (RUE DE)","MORGIOU (chemin de )","MORIERES (Route de )","MORVAN (RUE DU)","MOTTE BRULON (DE LA)","MOULIN (AVENUE JEAN)","MOULIN AVENUE JEAN","MOULIN DE CAGE (QUAI DU)","MOULIN MARCILLE CHEMIN","MOULIN NEUF","MOULIN PONT ET PLACE","MOULINS (AVENUE DES","MOURET HENRI (AV)","MOZART","MUNAT ROUTE DU","MURIERS (DES)","Maurice Grynfogel (Bd)","Miral","N1104 X ROUTE DE CLAYE","N164","N28","N6","NANCY (BOULEVARD DE)","NANTES (RUE DE)","NAPOLEON (PLACE)","NAPOLEON (PONT)","NAPOLEON (ROUTE)","NAPOLEON III (PONT)","NATIONALE  ( ROUTE )","NATIONALE (ROUTE)","NATIONALE 6 (CES POMPIDO","NATIONALE 6 (GLACIERE)","NERUDA (AVENUE  PABLO )","NICE (ROUTE DE)","NID DE  PIE","NIMES (AVENUE DE)","NOGENT (AV DE)","NORMAN PRINCE","NORMANDIE (AVENUE DE)","NOTRE DAME (BD)","NOTRE DAME (RUE)","NOTRE DAME DE CONSOLATIO","NOUVELLE FRANCE (RUE DE","NS, PONT DE CLICHY","National ( boulevard )","OFFENBACH (RUE JACQUES)","OLOF PALME","ONZE NOVEMBRE","ORIENT (BOULEVARD  DE L'","ORLEANS (ROUTE D')","OUDINOT (RUE DU MAL)","OUEST BOULEVARD","PABLO NERUDA (ROND-POINT","PADOUANE (BD DE LA )","PADOVANI ( AVE )","PAIX (AVENUE DE LA)","PAIX (DE LA) ( R )","PAIX(BLD DE LA) 1 A 39","PANCHOT (AVENUE JULIEN)","PAOUTE (ROUTE ET TRAVERS","PAPERIE","PAPETERIE (RUE DE LA)","PARC SAINT CLOUD","PARIS  (AVENUE DE)","PARIS ( AVENUE DE )","PARIS (RUE)","PARIS RUE DE","PARTHENAY (Rte de) (RD 3","PARTOUNEAUX (RUE)","PAS DU LOUP (RUE DU","PAS NOTRE-DAME (RUE DU)","PASCAL (RUE BLAISE)","PASTEUR ( AVENUE )","PASTEUR (AV.)","PASTEUR (AVENUE LOUIS)","PASTEUR (AVENUE)","PASTEUR (BOULEVARD) DE 1","PASTEUR AVENUE","PASTEUR RUE","PATTON GENERAL RTE ST-AU","PAU (ROUTE DE)","PAUL DAILLY","PAUL KRUGER      (Avenue","PAVE DES GARDES (ROUTE D","PAYS-BAS (AVENUE DES)","PDT WILSON (Avenue)","PECHERIE (DE LA)","PEGOMAS (ROUTE DE)","PENESME (ROND POINT)","PERI (PLACE GABRIEL)","PERI RUE GABRIEL N�37 A","PERIPHERIQUE NORD","PESARO BOULEVARD DE","PESSICART (JUSQU'AU 270-","PETINIAUD BEAUPEYRAT (RU","PETIT (AVENUE ALBERT) N�","PETIT MONTMARIN (RUE DU)","PEYSSONNEL (RUE)","PICAUD (AVENUE DU DOCTEU","PICOT (AVE DU COLONEL)","PIERRE BROSSOLETTE (PONT","PIERRE BRUNIER","PIERRE CURIE (RUE)","PIERRE DE COUBERTIN  ( B","PIERRE DE COUBERTIN PROL","PIERRE ET MARIE CURIE (R","PIERRE MENDES FRANCE (AV","PIERRE PROST (AVENUE)","PIERRE PUGET (COURS)","PIERRE SEMARD (PL)","PINATEL (BOULEVARD)","PINCHARD (RUE RAYMOND LI","PL DE VERDUN","PL MARECHAL FOCH","PL MAX LEJEUNE","PLACE BALARD","PLACE D IENA","PLACE DE CLICHY","PLACE DE LA NATION","PLACE DE LA PORTE D AUTE","PLACE DE LA PORTE DE BAG","PLACE DE LA REPUBLIQUE D","PLACE DE LA VICTOIRE","PLACE DE VARSOVIE","PLACE DE VERDUN","PLACE DU CANADA","PLACE DU DIX HUIT JUIN 1","PLACE DU TROCADERO ET DU","PLACE FELIX EBOUE","PLACE LEON BLUM","PLACE MARTIN NADAUD","PLACE SAINT AUGUSTIN","PLACE SAINT MICHEL","PLACE SAINTE CROIX","PLATEAU DES GLIERES (AVE","POILUS ( BD DES )","POINCARE (BOULEVARD HENR","POINCARE (RUE RAYMOND 1-","POINT DU JOUR (DU)","POISSONNIERS (CHEMIN DES","POLYGONE (ROUTE DU)","POMPIDOU (BOULEVARD GEOR","POMPIDOU (PROMENADE)","POMPIDOU GEORGES (BOULEV","PONT BLANC.CHARLES TILLO","PONT D AUSTERLITZ","PONT D IENA","PONT D'ASNIERES","PONT DE CHEVIRE","PONT DE CLICHY","PONT DE L'EUROPE","PONT DE SURESNES","PONT DE VIVAUX (Bd)","PONT DES HALLES (R DU)","PONT NATIONAL","PONT NEUF","PONT NOIR (RUE DU)","PONT NOTRE DAME","PONT SAINT FREDERIC","PONT-TRENCAT (CAMI DEL)","PONTOISE AV DE","PORT (QUAI DU)","PORT DE BERCY","PORT DU NAVEIX (RUE DU)","PORT MOUTON (DU)","PORTE D ISSY","PORTE DE BREQUIGNY","PORTE DE LA PLAINE","PORTE DE LORIENT","PORTE DES TERNES","POTIER (RUE EUGENE)","POULGUINAN BOULEVARD DE","POURCHON (BD MAURICE)","POUTINGON (CHEMIN DE)","PRAIRIE (RUE DE LA)","PREFET CHALEIL (CD44) (R","PREIZE (RUE DE)","PRELEVET (AVENUE DE)","PREMIERE ARMEE FRANCAISE","PREMIERE DFL (AVENUE)","PRESIDENT JOHN KENNEDY (","PRESIDENT SALVADOR ALLEN","PRESIDENT WILSON","PRESIDENT WILSON (AV DU)","PRESIDENT WILSON (BOULEV","PRESIDENT WILSON (RUE)","PREVOT (ERNEST)","PROFESSEUR CADIOT (AV DU","PROUDHON","PROUST (MARCEL)","PROUVE JEAN (AVENUE)","PROVENCE ( AVENUE DE )","PRUNIERS","PUITS (RUE DES)","PYRAMIDES (AVENUE DES)","PYRENEES (BOULEVARD DES)","Piste cyclable","Pont de la LOIRE","QUAI DE FRANCE","QUAI DE JEMMAPES","QUAI DE LA FOSSE","QUAI DE LA GARE","QUAI DE LA MONNAIE","QUAI DE MONTEBELLO","QUAI DES ETATS UNIS","QUAI DES TUILERIES","QUAI LOUIS XVIII","QUAI PRE AUX MOINES","QUAI VOLTAIRE","QUARANTAINE  RUE DE LA","QUATRE SEPTEMBRE (AV. DU","QUERCY GASCOGNE RD 118 (","QUICONCES (RUE DES)","QUINZIEME CORPS (AV. DU)","R COLOMBIER\/GRAND CHAMPS","R D'ABBEVILLE","R DES DEPORTES","R EMILE FRANCFORT","R HENRI BARBUSSE","R JEAN JAURES","R JULES BARNI","R N 7","R VANMARCKE","R.N 105","R.N. 19","R.N. 353","RABATAU (BD)","RABELAIS (BD)","RAMON BOULEVARD","RANCY (DES)","RANSON (RUE LOUIS CASIMI","RAPERIE (RUE DE LA)","RASPAIL (RUE)","RAYMON ARON (AVENUE)","RAYMOND DUGRAND (AVENUE)","RAYMOND POINCARE (RUE)","RD 1001","RD 101","RD 105","RD 1062","RD 1084","RD 112","RD 116","RD 121","RD 124","RD 133","RD 135","RD 142","RD 143","RD 147","RD 152","RD 154E","RD 157","RD 158E4","RD 159 B","RD 16","RD 172","RD 188","RD 203","RD 2076","RD 21","RD 2152","RD 223","RD 2271\/R PAULIN LABARRE","RD 3","RD 30","RD 306","RD 32","RD 34","RD 347","RD 396","RD 40","RD 421","RD 429","RD 463","RD 465","RD 465 (DESSERTE PORTUAI","RD 47","RD 48","RD 487","RD 50","RD 500","RD 54","RD 541","RD 543","RD 558","RD 56","RD 568 CLM","RD 578","RD 6009 NARBONNE - BEZIE","RD 6161 - Rocade Ouest","RD 621","RD 657 CHAMPEY","RD 7","RD 70 (route d�partement","RD 704","RD 72","RD 73","RD 74","RD 783","RD 783 BEUZEC","RD 786","RD 80","RD 802","RD 813","RD 813 (NOUVELLE ROCA","RD 83","RD 834","RD 84","RD 85","RD 8N","RD 909A","RD 91","RD 913","RD 914","RD 917","RD 925","RD 931","RD 933","RD 938","RD 944","RD 945","RD 950","RD 952","RD 970 ROUTE D'AVIGNON","RD 975","RD 976","RD 981","RD 986","RD 987","RD 989","RD 992","RD 996","RD POINT GASCOGNE","RD1044","RD1083","RD1091","RD116","RD116 PanONF � rte Butte","RD12","RD148","RD159","RD178","RD18","RD2076","RD22","RD23","RD24","RD25","RD302   0.400 A 4.620","RD35","RD38","RD383 2.321 A 3.750","RD44","RD449","RD6007","RD6015","RD607 de Barbizon � pav�","RD610","RD613","RD619","RD643","RD673","RD7","RD81","RD838","RD840","RD86","RD900","RD901","RD913","RD926","RD927","RD944","RD951","RD990","RD991","RD999","REAUMUR   RUE","REDON (BOULEVARD du)","REIMS (DE)","RENARD (RUE EDOUARD)","RENE CASSIN (RUE)","RENE MARLIN (CARREFOUR)","REPUBLIQUE (AVE DE LA)","REPUBLIQUE (PLACE DE LA)","REPUBLIQUE QUAI DE LA","REPUBLIQUE RUE DE LA","RHIN (AVENUE DU)","RHIN ET DANUBE","RHIN ET DANUBE ( AVENUE)","RHONE (DU)","RICHELIEU (BOULEVARD)","RIMIEZ (AV. DE)","RISSO (BD)","RIVAGE (BOULEVARD DU)","RN 102","RN 1057 (ROUTE DE GRAY-C","RN 116","RN 12 (PEN AR CH'LEUZ A","RN 13","RN 137","RN 171","RN 19","RN 296","RN 31","RN 385 INT","RN 4","RN 6 (CES POMPIDO","RN 6 (PARTIE FORET)","RN 6 (REVEIL MATI","RN 77","RN. 10","RN. 147","RN1 Majicavo Koropa","RN1 ROCADE DE CHAUVEL","RN1-  HAUTEUR DE SORTIE","RN10","RN104.EXT","RN109","RN157","RN31","RN5","RN6","RN7 DEV PLV","RN77","RN79","RN88 (ROCADE)","RN94","RN98","ROBERT SCHUMANN (RUE)","ROCADE  OUEST (RD 910)","ROCADE G.POMPIDOU (DU 7","ROCADE-D520","ROCHAT AV.PHILIPPE","ROCHET (RUE WALDECK)","ROCHETAILLEE (AVENUE) JU","RODIN (BOULEVARD)","RODOCANACHI (BOULEVARD)","ROGER SALENGRO (NATIONAL","ROMAIN ROLLAND","ROMPSAY   AVENUE DE","RONCEVAUX R","ROND POINT DE KERESSEIS","ROOSVELT (AVENUE FRANKLI","ROSNY (AVENUE DE)","ROSSINI PASCAL BD","ROUBAIX (RUE DE)","ROUCAS BLAN (CHEMIN)","ROUEN (RUE DE)","ROUET (RUE DU)","ROUFFACH (ROUTE DE)","ROUGET DE L'ISLE (RUE)","ROUILLEN AVENUE","ROULE (AVENUE DU, N� 29","ROUQUIER (BOULEVARD EMMA","ROUSSEAU (RUE JEAN-JACQU","ROUTE D'EPERNAY","ROUTE D'OLIVET","ROUTE D'ORLEANS","ROUTE DE BAYONNE","ROUTE DE CAPESTANG-RD11","ROUTE DE CHALONS","ROUTE DE CHOISY","ROUTE DE CREST","ROUTE DE DIEPPE","ROUTE DE LA FERME","ROUTE DE LA JONELIERE","ROUTE DE LA SERRE DE CAZ","ROUTE DE PROVINS","ROUTE DE SANDILLON","ROUTE DE SOISSONS","ROUTE DE VANNES","ROUTE DE WITRY","ROUTE DEPARTEMENTALE 2","ROUTE DEPARTEMENTALE 612","ROUTE DES PLAGES","ROUTE DES REFUZNICKS","ROUTE DU PESAGE","ROUTE DU STILETTO","ROUTE NATIONALE","ROUTE NATIONALE 5","ROUTE NATIONALE 6","ROUZIERS (ROUTE DE)","ROY D'ESPAGNE (CHEMIN)","ROYALE","RT 40","RT 50","RT20","RT30","RTE D AGDE","RTE DE PARIS","RTE DE REVEL","RTE DE SAINT BARDOUX","RTE N113 MARSEILLE A BOR","RTE SANDILLON\/RTE ST CYR","RUE ABBAYE","RUE ANTONIN VALLON","RUE ARMAND CARREL","RUE BALZAC","RUE BOISSIERE","RUE BOTZARIS","RUE CARNOT","RUE CARPEAUX","RUE CASTETNAU","RUE CHARLES BEAUHAIRE","RUE CHATEAUBRIAND","RUE CURIAL","RUE D ASSAS","RUE D'AMIENS","RUE D'ARCOLE","RUE DAMREMONT","RUE DE CLIGNANCOURT","RUE DE CONSTANTINOPLE","RUE DE COULMIERS","RUE DE CUGNAUX","RUE DE GRENELLE","RUE DE KABYLIE","RUE DE L ARRIVEE","RUE DE LA CHAUSSEE D ANT","RUE DE LA CITE","RUE DE LA FEDERATION","RUE DE LA MAGDELEINE","RUE DE LA SENTELLE","RUE DE LILLE","RUE DE LONGCHAMP","RUE DE LOUVOIS","RUE DE LYON","RUE DE PATAY","RUE DE PITCHOT","RUE DE SAINT PETERSBOURG","RUE DE STALINGRAD","RUE DE STRASBOURG","RUE DE TOCQUEVILLE","RUE DE VESLE","RUE DE WATTIGNIES","RUE DES ALLIES","RUE DES ARCHIVES","RUE DES COSMONAUTES","RUE DES ENTREPRENEURS","RUE DES FOUGERES","RUE DES HAUTES LEVEES","RUE DES NOUETTES","RUE DES PLANTES","RUE DES SAINTS PERES","RUE DES TANNEURS","RUE DES TILLEULS","RUE DU 14 JUILLET","RUE DU CHEMIN VERT","RUE DU CHEVALERET","RUE DU COMMANDANT GUILBA","RUE DU DEPART","RUE DU FAUBOURG DU TEMPL","RUE DU FAUBOURG SAINT HO","RUE DU FAUBOURG SAINT JA","RUE DU GENERAL DE LANGLE","RUE DU G�N�RAL DE GAULLE","RUE DU MARECHAL FOCH","RUE DU QUATORZE JUILLET","RUE DU RUISSELET","RUE DU TEMPLE","RUE DU TIERS POT","RUE ETIENNE DOLET","RUE FERDINAND BUISSON","RUE GABRIEL PERI","RUE GABRIEL VOISIN","RUE GAETAN RONDEAU","RUE GAY LUSSAC","RUE GOIOT","RUE GUITTE","RUE GUY MOQUET","RUE JANKEL SEGAL","RUE JEAN HENRI FABRE","RUE JEAN MERMOZ","RUE JEAN PIERRE TIMBAUD","RUE JOACHIM DU BELLAY","RUE JOUFFROY D ABBANS","RUE JULES FERRY","RUE JULES STAAT","RUE LAURISTON","RUE LINOIS","RUE LOUIS LOUCHEUR","RUE LOUIS VICAT","RUE LUCIEN SAMPAIX","RUE MARIE LAURENCIN","RUE MONTPENSIER","RUE OSCAR ROTY","RUE PARROT","RUE PASQUIER","RUE PETIT","RUE PIERRE BROSSELETTE","RUE PRINCIPALE","RUE REAUMUR","RUE RIQUET","RUE ROBERT ETLIN","RUE SAINT CHARLES","RUE SAINT FARGEAU","RUE STEPHENSON","RUE TAITBOUT","RUE TRAVERSIERE","RUE VAILLANT COUTURIER","RUE VAN GOGH","RUE VIEILLE DU TEMPLE","RUE VIVIENNE","RUELLE AUX LOUPS (CHEMIN","RUFFI (RUE DE)","Route D�partementale 1","Route D�partementale 341","Route Gabriel Mac�","Route Ligne Paradis","Route Nationale 12","Route Nationale 568","Route Nationale 7","Route d'Avignon","Route de Bellevue","Route de Bourg","Route de Montjoly","Route de Moulins","Route de PLASCASSIER","Route de Saverne","Route d�partementale 10","Route d�partementale 101","Route d�partementale 13","Route d�partementale 16","Route d�partementale 28","Route d�partementale 3","Route d�partementale 42","Route d�partementale 432","Route d�partementale 608","Route d�partementale D66","Route nationale 113","Rte ancienne RN1","Rte de la Ligne Paradis","Rte d�partementale 11.6","Rte d�partementale 201","Rte d�partementale 473","Rte d�partementale 48","Rte d�partementale 48.1","Rte d�partementale 83","Rue Archambaud","Rue Augustin Archambaud","Rue Jean Jaur�s","Rue Leconte Delisle","Rue L�opold Rambaud","Rue Mah� Labourdonnais","Rue Saint-Michel","Rue Victor Hugo","Rue de Beauvais","Rue de la Mairie","Rue des canadiens","Rue des �tangs","Rue du 19 mars 1962","Rue du Mar�chal Leclerc","Rue du P�re Favron","Rue du bourg","Rue nationale","SABLARD (AVENUE DE)","SADI CARNOT (PLACE)","SAINT BERAIN (RUE DE)","SAINT CYR (ROUTE DE)","SAINT DENIS  (RUE   )","SAINT GERMAIN DES NOYERS","SAINT JEAN (BD)","SAINT JEAN DU DESERT (ch","SAINT JUST (R)","SAINT LEGER (RUE DU FAUB","SAINT LEU (ROUTE DE) 1 �","SAINT LEU (ROUTE DE) > 1","SAINT LEU (ROUTE)","SAINT MARC ROUTE DU VIEU","SAINT MARTIAL (QUAI)","SAINT MATHIEU (ROUTE ET","SAINT MENET (MONTEE)","SAINT MICHEL (BD)","SAINT MICHEL (BOULEVARD)","SAINT MICHEL (GRANDE RUE","SAINT NAZAIRE (BOULEVARD","SAINT SATURNIN (ROUTE DE","SAINT SIMON (RTE DE) DU","SAINT-DENIS (CHEMIN DE)","SAINT-DENIS BD (120 A 17","SAINT-MARC (AVENUE)","SAINT-MARC (ROUTE DE) DU","SAINT-NAZAIRE (AVENUE DE","SAINT-SIMON.(RUE ET VILL","SALAUN PENQUER","SALENGRO (RUE ROGER)","SALENGRO ROGER RUE","SALINE (BOULEVARD DE LA)","SALINS DE (DU 64 A LA FI","SALVATORE ALLENDE (BOULE","SARAGAT (BD DU PRESIDENT","SARTENE ANCIENNE ROUTE","SARTRE (AVENUE JEAN-PAUL","SAUMUROISE IMPASSE ET RU","SAUVEGARDE (DE LA)","SAUVY (ALFRED)","SAVIGNY (RUE DE)","SAVOIE (AVENUE DE)","SCHUMAN (BOULEVARD ROBER","SCHUTZENBERGER (AVENUE)","SE A14","SEBASTIANI  - AVENUE","SEBASTIANU COSTA BD","SEBASTOPOL","SECTEUR DAMPIERRE","SELESTAT (RUE DE)","SEMARD (BD PIERRE)","SEMARD(RUE PIERRE)","SERPOLLIERES (DES)","SETE ( ROUTE)","SEURRE (ROUTE DE)","SEVERIN SAURIN (RUE)","SEVIGNE (AVENUE DE)","SIDI BRAHIM (AVENUE)","SIDOINE APPOLINAIRE","SOLDATS (DES)","SOLFERINO RUE N�208-FIN-","SOLVIOU (CORNICHE DE)","SOMME (RUE DE LA)","SOULTZ(ROUTE DE)","SPORTS (AVENUE DES)","ST BONNET DE MURE (DE)","ST CYR (DE)","ST PIERRE DE VAISE","ST-LOUIS (BD)","STADE DE FRANCE (AVENUE","STAINS (ROUTE DE)","STALINGRAD (AVENUE DE)","STALINGRAD (AVENUE)","STALINGRAD (AVENUE), NR","STATION ( RUE )","STATIONS RUE N� RESTE","STEPHANE DECHANT","STRASBOURG (BD DE)","STRASBOURG (DE)","STRASBOURG (PLACE)","STRASBOURG (RUE DE)","STRASBOURG BOULEVARD","SUCY (R DE)","SULLY","SULLY  (RUE)","SULLY (RUE)","T21","T40","TALMA (RUE)","TARDY (DE)","TASSIGNY \/ GRANGE","TASSIGNY(AVE DU MARECHAL","TEILLET (RTE DE)","TEINCHURIER (AVENUE DU)","TERME","TERREAUX (DES)","TETE D'OR (DE LA)","THIERS (AVENUE)","THOMAS (AV ALBERT)","THOREZ (AVENUE MAURICE)","THUMENAU (RUE DE LA)","TILLEULS (RUE DES) 1\/67","TIMONE (AVENUE DE LA)","TOLSTOI    (Cours)","TOULON (VIEUX CHEMIN DE)","TOULOUSE (AVENUE DE)","TOULOUSE (RUE DE)","TOURELLE (AVENUE DE LA )","TOURNELLES (RUE DES)","TRANCHEE (AVENUE DE LA)","TREBEURDEN (ROUTE DE)","TRIAIRE SERGENT (BOULEVA","TROIS LUCS A LA VALENTIN","TROIS PAROISSES CHEMIN","TROPIQUES (AVENUE DES)","TROYES (DE) (BOULEVARD)","TUNNEL DE LA CROIX ROUSS","TURGOT (AVENUE) N� PAIRS","TURIN (RTE DE)","TVPCM-Sens Saint Victor","UZES (ROUTE D')","VAILLANT (AVENUE EDOUARD","VAILLANT COUTURIER (R)","VAILLANT COUTURIER (RUE)","VAILLANT-COUTURIER (AVEN","VALBONNE (ROUTE)","VALENTINE (ROUTE DE LA)","VALLEES (ROUTE DES)","VALLON (R DU)","VALMY> 68  55 (BD DE)","VANIERES (AVENUE DE)","VANVES BOULEVARD DE N� P","VAUGUEUX (RUE DU)","VENDOME (AVENUE DE)","VERDI (R.)","VERDUN","VERDUN (AVENUE DE) DU 11","VERDUN (COUR DE)","VERDUN (DE 01 A 61)","VERDUN (R DE)","VERDUN AVENUE DE N�2 A 2","VERNE (RUE JULES)","VERON (R)","VERS ECHANG VILLENEUVE","VERSAILLES (AV DE)","VERSAILLES (ROUTE DE)","VERTHAMONT (RUE DU GUE)","VEST FERDINANT","VEYNES ( AVENUE DE  )","VICTOR AUGAGNEUR","VICTOR BASCH (AVENUE)","VICTOR HUGO ( R )","VICTOR HUGO (AVE)  => 12","VICTOR HUGO (R)","VICTOR SCHOELCHER (AVENU","VIEUX BOURG","VIEUX PONT RUE DU","VIEUX VIVY (ROUTE DU)","VIGENAL (BOULEVARD DU)","VILLE JOUHA (BD DE LA)","VILLENEUVE LE ROI (PONT","VILLENEUVE-ANGOULEME (AV","VILLIERS ( AVENUE DE )","VILLIERS(RUE DE)  54A86","VINCENT LEBLANC (RUE)","VOLNEY","VOLTAIRE","VOLTAIRE (BOULEVARD)","VOLTAIRE (R)","VOLTAIRE(AVENUE)","VOSGES (RUE DES)","VOULDY (CHAUSSEE DU)","Village","WANTZENAU (RTE DE LA)","WARCQ","WINSTON CHURCHILL","WINSTON CHURCHILL (AV)","WRESINKI (rond point)","YOURI GAGARINE (AV)","YSER. BOULEVARD DE L'","Z I LA JAMBETTE","ZAMENHOF DOCTEUR (AV DU)","ZILLER (AVENUE PIERRE)","ZONE COLLERY I OU II","ZONE COMMERCIALE AUCHAN","a40","auriol","autoroute 41","autoroute A1","autoroute A8","avenue Jacques DUCLOS","avenue de ALOUETTE","avenue de BORDEAUX","avenue de bordeaux","avenue de la m�diterran�","avenue de la r�publique","avenue du 11 novembre 19","avenue jean moulin","bel air","boulevard HEURTELOUP","boulevard Jean Moulin","boulevard Pasteur","boulevard de la pr�fectu","cavani-Belle vue (rue)","cavani-Rond point du Sta","cd 135","champlouis","chemin vicinal","d15","d57","d96","doujani-Carri�re ( route","doujani-Mosqu�e de douja","d�partementale 1","d�partementale 2","d�partementale 342","d�partementale 6","grand rue","grande rue","kaweni-Centrale EDM (rue","kaweni-GEOLE (la)","kaweni-Geole ( rue de la","kaweni-Lazerevouni ( rue","kaweni-Mangrove (route d","kaweni-Poste ( rue de la","kaweni-SPPM ( rue de la","kerhamon","la croix rouge","la lande","la roche","le  bourg","le moulin neuf","le port","les combes","les quatres routes","lieu dit Caporalino","lieu dit patau","m'tsapere-M'tsap�r�- M't","m'tsapere-Mosqu�e Maevan","mamoudzou centre-Haladi","mgombani-Baobab ( Bd )","pointe rouge (ave)","promenade de la mer","quai Paul BERT","rd 5","rocade D520","rond point de la baou","route de Bonifacio","route de Bruyeres","route de DIEPPE","route de Grenoble","route de Montjoly","route de Paris","route de Rouffach","route de chouvigny","route de cordon","route de la chartreuse","route de la gare","route des dolines","route du parc","route d�partementale 70","route d�partementale 820","route nationale","route nationale 1","route nationale 13","route nationale 20","route nationale 57","route nationale 7","route territoriale 20","rue ARISTIDE BRIAND","rue DESAIX","rue Edouard VAILLANT","rue L�on BOYER","rue Marcel CACHIN","rue de CORMERY","rue de VERDUN","rue de beauvais","rue de brest","rue de l'industrie","rue de l'�galit�","rue de la BERGEONNERIE","rue de la R�publique","rue de la chapelle","rue de la libert�","rue de la mairie","rue de la motte","rue de la paix","rue de la r�sistance","rue des canadiens","rue du ch�teau","rue du parc","rue du souvenir","rue lamartine","tsoundzou-KOUALE ( rue d","tsoundzou-Mangadzia  Tso","tsoundzou-Stara (rue)","\"8 MAI 45 (AVENUE \"\"N� 2"," * "],
					"frequencies": [389,215,173,170,162,155,144,139,138,99,92,76,71,71,68,63,47,47,40,37,37,36,35,34,33,32,31,30,30,30,30,30,30,30,29,29,29,28,28,27,27,26,26,25,25,25,23,23,23,23,23,22,22,22,21,21,21,20,20,20,20,20,20,20,20,20,20,20,20,19,19,19,19,18,18,18,18,18,18,18,17,17,17,17,16,16,16,16,16,16,15,15,15,15,15,15,15,15,14,14,14,14,14,14,14,14,14,14,14,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,23230]
				}
			},
			"R051": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Maneuver)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,4]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1395,20281],
						[828,17944]
					],
					"partInterests": [0.435045,0.564955]
				}
			},
			"R052": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Direction)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,3]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1620,30913],
						[603,7312]
					],
					"partInterests": [0.21835,0.78165]
				}
			},
			"R053": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where Direction not in {Increasing, Decreasing}",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,6]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[2125,34351],
						[98,3874]
					],
					"partInterests": [0.0789907,0.921009]
				}
			},
			"R054": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where ImpactPoint <> Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,450]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[631,7633],
						[1592,30592]
					],
					"partInterests": [0.771813,0.228187]
				}
			},
			"R055": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where ImpactPoint <> Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,120]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[631,7633],
						[1592,30592]
					],
					"partInterests": [0.771813,0.228187]
				}
			},
			"R056": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where ImpactPoint <> Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,450]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[631,7633],
						[1592,30592]
					],
					"partInterests": [0.771813,0.228187]
				}
			},
			"R057": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where ImpactPoint <> Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[631,7633],
						[1592,30592]
					],
					"partInterests": [0.771813,0.228187]
				}
			},
			"R058": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mode(Vehicles.Direction)",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Increasing","Unknown",""],
								["Decreasing"]
							],
							"defaultGroupIndex": 0
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1131,23130],
						[1092,15095]
					],
					"partInterests": [0.428514,0.571486]
				},
				"inputValues": {
					"values": ["Increasing","Decreasing","Unknown",""],
					"frequencies": [17010,16187,7167,84]
				}
			},
			"R059": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Max(Vehicles.PassengerNumber) where Maneuver <> NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,900]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[768,9959],
						[1455,28266]
					],
					"partInterests": [0.710336,0.289664]
				}
			},
			"R060": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where Maneuver <> NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,450]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[768,9959],
						[1455,28266]
					],
					"partInterests": [0.710336,0.289664]
				}
			},
			"R061": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "CountDistinct(Vehicles.Category)",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[1,1.5],
								[1.5,4]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1478,22464],
						[745,15761]
					],
					"partInterests": [0.384856,0.615144]
				}
			},
			"R062": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where ImpactPoint = Front",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,6]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1988,35877],
						[235,2348]
					],
					"partInterests": [0.075834,0.924166]
				}
			},
			"R063": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Weather",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["Normal","Overcast","HeavyRain"],
								["LightRain"],
								["VeryGood","FogOrSmoke"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1898,32543],
						[176,4269],
						[149,1413]
					],
					"partInterests": [0.000234224,0.353377,0.646389]
				},
				"inputValues": {
					"values": ["Normal","LightRain","Overcast","HeavyRain","VeryGood","FogOrSmoke","SnowOrHail","Other","StrongWindOrStorm",""],
					"frequencies": [32153,4445,1374,914,717,299,257,202,83,4]
				}
			},
			"R064": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where Category = Car<=3.5T",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,1.5],
								[1.5,10]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1866,29704],
						[357,8521]
					],
					"partInterests": [0.200199,0.799801]
				}
			},
			"R065": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Count(Vehicles) where Maneuver = NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[0,0.5],
								[0.5,7]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[794,16334],
						[1429,21891]
					],
					"partInterests": [0.597574,0.402426]
				}
			},
			"R066": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Mean(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,180]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[794,16334],
						[1429,21891]
					],
					"partInterests": [0.597574,0.402426]
				}
			},
			"R067": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Min(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,180]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[794,16334],
						[1429,21891]
					],
					"partInterests": [0.597574,0.402426]
				}
			},
			"R068": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "StdDev(Vehicles.PassengerNumber) where Maneuver = NoDirectionChange",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,100]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[794,16334],
						[1429,21891]
					],
					"partInterests": [0.597574,0.402426]
				}
			},
			"R069": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Sum(Vehicles.PassengerNumber) where Direction not in {Increasing, Decreasing}",
							"type": "Numerical",
							"partitionType": "Intervals",
							"partition": [
								[],
								[0,180]
							]
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[1868,29959],
						[355,8266]
					],
					"partInterests": [0.19568,0.80432]
				}
			}
		}
	},
	"treePreparationReport": {
		"reportType": "Preparation",
		"summary": {
			"dictionary": "Accidents",
			"variables": {
				"types": [
					"Categorical",
					"Numerical",
					"Table"
				],
				"numbers": [
					16,
					96,
					1
				]
			},
			"database": "c:\\APPLIC~1\\src\\tmp\\pykhiops\\KhiopsClassifier_fit_xlddrq_l\\Accidents.txt",
			"samplePercentage": 100,
			"samplingMode": "Include sample",
			"selectionVariable": "",
			"selectionValue": "",
			"instances": 40448,
			"learningTask": "Classification analysis",
			"targetVariable": "Gravity",
			"targetDescriptiveStats": {
				"values": 2,
				"mode": "NonLethal",
				"modeFrequency": 38225
			},
			"targetValues": {
				"values": ["Lethal","NonLethal"],
				"frequencies": [2223,38225]
			},
			"evaluatedVariables": 10,
			"nativeVariables": 0,
			"constructedVariables": 10,
			"informativeVariables": 10
		},
		"variablesStatistics": [
			{
				"rank": "R01",
				"name": "Tree_1",
				"type": "Categorical",
				"level": 0.097845,
				"parts": 5,
				"values": 15,
				"mode": "L7",
				"modeFrequency": 12202,
				"constructionCost": 158.231,
				"preparationCost": 70.8077,
				"dataCost": 7544.47,
				"derivationRule": "SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where FixedObstacle = None`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(118.5), Commune), \"L1\", \"L19\", \"L20\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\", \"\", \" * \"), ValueGroup(\"Other\", \"2Vehicles-BehindVehicles-Frontal\", \"NoCollision\", \"3+Vehicles-Multiple\")), CollisionType), \"L1\", \"L7\", \"L8\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"NoCollision\", \"3+Vehicles-Chain\"), ValueGroup(\"Other\", \"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\", \"\", \" * \")), CollisionType), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Sum(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle`), \"L2\", SwitchC(IntervalIndex(IntervalBounds(85.5), Commune), \"L3\", \"L11\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\"), ValueGroup(\"2Vehicles-Behind\", \" * \")), CollisionType), \"L9\", \"L13\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"TwilightOrDawn\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L12\", \"L17\", \"L18\"))), \"L10\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"TwilightOrDawn\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"None\", \"DitchTalusOrRockyWall\", \"MetallicBarrier\", \"ConcreteBarrier\", \"BuildingWallOrPier\", \" * \"), ValueGroup(\"Tree\")), `Mode(Vehicles.FixedObstacle)`), \"L4\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Other\", \"3+Vehicles-Multiple\", \" * \"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\")), CollisionType), \"L15\", \"L25\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where Category <> Car<=3.5T`), \"L23\", \"L27\", \"L28\")), \"L24\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"None\", \"Tree\", \"DitchTalusOrRockyWall\", \"Post\", \" * \"), ValueGroup(\"ConcreteBarrier\", \"MetallicBarrier\")), `Mode(Vehicles.FixedObstacle)`), \"L4\", \"L21\", \"L22\"))))"
			},
			{
				"rank": "R02",
				"name": "Tree_9",
				"type": "Categorical",
				"level": 0.0977899,
				"parts": 6,
				"values": 16,
				"mode": "L11",
				"modeFrequency": 10015,
				"constructionCost": 189.465,
				"preparationCost": 81.0992,
				"dataCost": 7503.42,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(#Missing), `Median(Vehicles.PassengerNumber) where FixedObstacle = None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"No\"), ValueGroup(\"Yes\", \" * \")), InAgglomeration), \"L0\", \"L23\", \"L24\"), SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.Direction)`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Mean(Vehicles.PassengerNumber) where MobileObstacle = Vehicle`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L3\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Car<=3.5T\", \"Utility\", \"Motorbike>125cm3\", \"Bicycle\", \"Scooter<50cm3\", \"Moped\", \"Scooter_50cm3-125cm3\", \"Motorbike_50cm3-125cm3\", \"Scooter>125cm3\", \"Bus\", \"Other\", \"Tramway\", \"Quadricycle\", \"QuadBike>50cm3\", \"Coach\", \"QuadBike<=50cm3\"), ValueGroup(\"LargeCar>7.5T\", \"LargeCar_3.5T-7.5T\", \"SpecialEngine\", \"LargeCar+Trailer>3.5T\", \"Truck+SemiTrailer\", \"Tractor\", \"Train\", \" * \")), `Mode(Vehicles.Category)`), \"L7\", \"L21\", \"L22\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Car<=3.5T\", \"Bicycle\", \"Utility\", \"LargeCar+Trailer>3.5T\", \"Truck+SemiTrailer\", \" * \"), ValueGroup(\"Motorbike>125cm3\", \"Moped\", \"Motorbike_50cm3-125cm3\", \"Scooter_50cm3-125cm3\", \"Scooter>125cm3\", \"QuadBike>50cm3\", \"Scooter<50cm3\")), `Mode(Vehicles.Category)`), \"L7\", \"L17\", \"L18\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L3\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"Other\", \"3+Vehicles-Chain\", \" * \"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\")), CollisionType), \"L8\", \"L11\", \"L12\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Behind\", \"2Vehicles-Side\", \"3+Vehicles-Chain\", \"3+Vehicles-Multiple\", \"Other\", \"NoCollision\", \" * \"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\")), CollisionType), \"L8\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoIntersection\", \"Other\", \"Roundabout\", \" * \"), ValueGroup(\"X-type\", \"T-type\")), IntersectionType), \"L10\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L25\", \"L29\", \"L30\"), \"L28\"), \"L26\"))), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L2\", \"L5\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Front\"), ValueGroup(\"LeftFront\", \" * \")), `Mode(Vehicles.ImpactPoint)`), \"L4\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoIntersection\"), ValueGroup(\"X-type\", \" * \")), IntersectionType), \"L6\", \"L19\", \"L20\"), \"L14\"))))"
			},
			{
				"rank": "R03",
				"name": "Tree_8",
				"type": "Categorical",
				"level": 0.0937387,
				"parts": 9,
				"values": 18,
				"mode": "L25",
				"modeFrequency": 8853,
				"constructionCost": 207.45,
				"preparationCost": 109.533,
				"dataCost": 7491.9,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Mean(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L1\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Min(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle`), \"L9\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"Other\", \"3+Vehicles-Chain\", \"3+Vehicles-Multiple\", \"NoCollision\", \" * \"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\")), CollisionType), \"L11\", \"L25\", \"L26\"), \"L20\"), SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.ImpactPoint)`), \"L9\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-BehindVehicles-Frontal\", \"Other\", \"3+Vehicles-Multiple\"), ValueGroup(\"NoCollision\", \"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\", \" * \")), CollisionType), \"L12\", \"L31\", \"L32\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\", \"Other\", \"NoCollision\", \"\", \" * \")), CollisionType), \"L12\", \"L17\", \"L18\"))), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"DitchTalusOrRockyWall\", \"Tree\", \"BuildingWallOrPier\", \"MetallicBarrier\", \"Post\", \"OtherInSidewalkOrShoulder\", \"ExitLaneWithoutObstacle\", \"TrafficSignOrEmergencyBox\", \"OtherBarrier\"), ValueGroup(\"None\", \"StationaryVehicle\", \"ConcreteBarrier\", \"SideWalkEdge\", \"OtherInLane\", \"StreetFurniture\", \"TrafficIslandRefugeOrMilestone\", \"\", \"Parapet\", \" * \")), `Mode(Vehicles.FixedObstacle)`), \"L1\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"No\"), ValueGroup(\"Yes\", \" * \")), InAgglomeration), \"L10\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"DitchTalusOrRockyWall\", \"MetallicBarrier\", \"BuildingWallOrPier\", \" * \"), ValueGroup(\"Tree\")), `Mode(Vehicles.FixedObstacle)`), \"L23\", \"L33\", \"L34\"), \"L30\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L10\", \"L27\", \"L28\"))), SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where FixedObstacle = None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L2\", \"L5\", SwitchC(IntervalIndex(IntervalBounds(960), Department), \"L3\", \"L21\", \"L22\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\", \"Other\", \"NoCollision\", \" * \"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\")), CollisionType), \"L2\", SwitchC(IntervalIndex(IntervalBounds(945), Department), \"L4\", \"L15\", \"L16\"), \"L8\")))"
			},
			{
				"rank": "R04",
				"name": "Tree_4",
				"type": "Categorical",
				"level": 0.087518,
				"parts": 5,
				"values": 13,
				"mode": "L9",
				"modeFrequency": 12909,
				"constructionCost": 142.537,
				"preparationCost": 67.5593,
				"dataCost": 7652.39,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where FixedObstacle <> None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L0\", SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where MobileObstacle <> Vehicle`), \"L1\", \"L9\", \"L10\"), SwitchC(IntervalIndex(IntervalBounds(#Missing), `StdDev(Vehicles.PassengerNumber) where Direction = Increasing`), \"L1\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Median(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle`), \"L8\", SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L11\", \"L17\", \"L18\"), \"L16\"), SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L8\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoDirectionChange\", \"None\", \"CrossLane\", \"Avoidance\", \"PassLeft\"), ValueGroup(\"SameDirectionOrLane\", \"Insertion\", \"BetweenLanes\", \" * \")), `Mode(Vehicles.Maneuver)`), \"L12\", \"L23\", \"L24\"), SwitchC(IntervalIndex(IntervalBounds(960), Department), \"L12\", \"L21\", \"L22\")))), SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"No\"), ValueGroup(\"Yes\", \" * \")), InAgglomeration), \"L2\", \"L5\", \"L6\"), SwitchC(IntervalIndex(IntervalBounds(945), Department), \"L2\", \"L13\", \"L14\")))"
			},
			{
				"rank": "R05",
				"name": "Tree_3",
				"type": "Categorical",
				"level": 0.0812853,
				"parts": 4,
				"values": 9,
				"mode": "L8",
				"modeFrequency": 12158,
				"constructionCost": 115.667,
				"preparationCost": 52.7622,
				"dataCost": 7747.76,
				"derivationRule": "SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L0\", SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.Maneuver)`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Front\", \"RightFront\", \"LeftFront\", \"None\", \"LeftSide\", \" * \"), ValueGroup(\"Back\")), `Mode(Vehicles.ImpactPoint)`), \"L1\", SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where FixedObstacle <> None`), \"L7\", \"L11\", \"L12\"), \"L10\"), \"L8\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoDirectionChange\", \"None\", \"SwerveToRight\", \"SwerveToLeft\", \"CrossLane\", \"Avoidance\", \"PassLeft\"), ValueGroup(\"SameDirectionOrLane\", \"BetweenLanes\", \"Insertion\", \"ChangeToRightLane\", \"ChangeToLeftLane\", \"Stopped\", \" * \")), `Mode(Vehicles.Maneuver)`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where ImpactPoint <> Front`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Front\", \"RightFront\", \"LeftFront\", \"None\", \"Multiple\", \" * \"), ValueGroup(\"Back\")), `Mode(Vehicles.ImpactPoint)`), \"L3\", \"L15\", \"L16\"), \"L14\"), SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where FixedObstacle = None`), \"L2\", \"L5\", \"L6\")))"
			},
			{
				"rank": "R06",
				"name": "Tree_5",
				"type": "Categorical",
				"level": 0.0764639,
				"parts": 7,
				"values": 15,
				"mode": "L19",
				"modeFrequency": 5901,
				"constructionCost": 143.688,
				"preparationCost": 89.0693,
				"dataCost": 7724.98,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where Maneuver <> NoDirectionChange`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Mean(Vehicles.PassengerNumber) where Direction = Decreasing`), \"L1\", SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where MobileObstacle <> Vehicle`), \"L9\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L11\", \"L21\", \"L22\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L11\", \"L19\", \"L20\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L9\", \"L15\", SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where Direction = Decreasing`), \"L12\", \"L23\", \"L24\"))), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"No\"), ValueGroup(\"Yes\", \" * \")), InAgglomeration), \"L1\", \"L25\", SwitchC(IntervalIndex(IntervalBounds(118.5), Commune), \"L10\", \"L27\", \"L28\"))), SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where FixedObstacle <> None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L2\", \"L7\", SwitchC(IntervalIndex(IntervalBounds(76.5), Commune), \"L3\", \"L13\", \"L14\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Yes\"), ValueGroup(\"No\", \" * \")), InAgglomeration), \"L2\", \"L5\", \"L6\")))"
			},
			{
				"rank": "R07",
				"name": "Tree_10",
				"type": "Categorical",
				"level": 0.0647891,
				"parts": 7,
				"values": 15,
				"mode": "L18",
				"modeFrequency": 7250,
				"constructionCost": 164.275,
				"preparationCost": 86.2758,
				"dataCost": 7807.78,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where FixedObstacle = None`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L0\", \"L27\", \"L28\"), SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.Direction)`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Vehicle\"), ValueGroup(\"Pedestrian\", \" * \")), `Mode(Vehicles.MobileObstacle)`), \"L2\", SwitchC(IntervalIndex(IntervalBounds(735), Department), \"L3\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightStreelightsOn\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L5\", \"L23\", \"L24\"), \"L18\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightStreelightsOn\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L3\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Car<=3.5T\", \"Bicycle\", \"Motorbike>125cm3\", \"Utility\", \"Scooter<50cm3\", \"Moped\", \"Motorbike_50cm3-125cm3\", \"Scooter_50cm3-125cm3\", \"Scooter>125cm3\", \"Bus\", \"Other\", \"Quadricycle\", \"Tramway\", \"LargeCar_3.5T-7.5T\", \"QuadBike>50cm3\", \"Coach\", \"QuadBike<=50cm3\", \"Truck\", \" * \"), ValueGroup(\"LargeCar>7.5T\", \"LargeCar+Trailer>3.5T\", \"Truck+SemiTrailer\", \"SpecialEngine\", \"Tractor\", \"Train\")), `Mode(Vehicles.Category)`), \"L6\", SwitchC(IntervalIndex(IntervalBounds(675), Department), \"L13\", \"L21\", \"L22\"), \"L20\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"None\", \"WildAnimal\", \" * \"), ValueGroup(\"Pedestrian\")), `Mode(Vehicles.MobileObstacle)`), \"L6\", \"L15\", \"L16\"))), SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where Direction not in {Increasing, Decreasing}`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightStreelightsOn\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L4\", SwitchC(IntervalIndex(IntervalBounds(635), Department), \"L7\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"TwilightOrDawn\"), ValueGroup(\"NightStreelightsOn\", \"NightStreelightsOff\", \" * \")), Light), \"L9\", \"L25\", \"L26\"), \"L12\"), \"L10\"), \"L8\")))"
			},
			{
				"rank": "R08",
				"name": "Tree_2",
				"type": "Categorical",
				"level": 0.0482014,
				"parts": 6,
				"values": 11,
				"mode": "L11",
				"modeFrequency": 12436,
				"constructionCost": 146.467,
				"preparationCost": 70.9763,
				"dataCost": 7983.82,
				"derivationRule": "SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Front\", \"LeftFront\", \"RightFront\", \"None\", \"RightSide\", \"Multiple\", \"RightBack\", \"\", \" * \"), ValueGroup(\"Back\", \"LeftSide\", \"LeftBack\")), `Mode(Vehicles.ImpactPoint)`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `StdDev(Vehicles.PassengerNumber) where FixedObstacle = None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightNoStreetLight\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightStreelightsOn\")), Light), \"L1\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"DitchTalusOrRockyWall\", \"Tree\", \"BuildingWallOrPier\", \"Post\", \"ExitLaneWithoutObstacle\", \"OtherInSidewalkOrShoulder\", \"TrafficSignOrEmergencyBox\", \"OtherBarrier\"), ValueGroup(\"ConcreteBarrier\", \"MetallicBarrier\", \"StationaryVehicle\", \"SideWalkEdge\", \"OtherInLane\", \"StreetFurniture\", \"TrafficIslandRefugeOrMilestone\", \"\", \"Parapet\", \" * \")), `Mode(Vehicles.FixedObstacle)`), \"L5\", \"L15\", \"L16\"), \"L10\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightStreelightsOn\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L1\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoDirectionChange\"), ValueGroup(\"None\", \" * \")), `Mode(Vehicles.Maneuver)`), \"L6\", \"L11\", \"L12\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Vehicle\", \"None\", \"WildAnimal\", \" * \"), ValueGroup(\"Pedestrian\")), `Mode(Vehicles.MobileObstacle)`), \"L6\", \"L13\", \"L14\"))), SwitchC(IntervalIndex(IntervalBounds(#Missing), `Mean(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(0.5), `Count(Vehicles) where MobileObstacle <> Vehicle`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Daylight\", \"NightStreelightsOn\", \"TwilightOrDawn\", \"NightStreelightsOff\", \" * \"), ValueGroup(\"NightNoStreetLight\")), Light), \"L3\", \"L19\", \"L20\"), \"L18\"), \"L4\"))"
			},
			{
				"rank": "R09",
				"name": "Tree_6",
				"type": "Categorical",
				"level": 0.0452897,
				"parts": 6,
				"values": 12,
				"mode": "L11",
				"modeFrequency": 8341,
				"constructionCost": 157.657,
				"preparationCost": 74.5715,
				"dataCost": 7994.13,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(#Missing), `StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L0\", SwitchC(IntervalIndex(IntervalBounds(1.5), `Count(Vehicles) where Maneuver <> NoDirectionChange`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Front\", \"LeftFront\", \"RightFront\", \"None\", \"Multiple\", \"RightBack\", \" * \"), ValueGroup(\"Back\", \"LeftSide\", \"RightSide\", \"LeftBack\")), `Mode(Vehicles.ImpactPoint)`), \"L1\", SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.Direction)`), \"L3\", SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.ImpactPoint)`), \"L5\", \"L11\", \"L12\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"Other\", \"2Vehicles-Behind\", \"NoCollision\"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\", \"3+Vehicles-Chain\", \" * \")), CollisionType), \"L5\", \"L9\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoIntersection\"), ValueGroup(\"T-type\", \" * \")), IntersectionType), \"L8\", \"L19\", \"L20\"))), \"L6\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\", \"Other\", \"NoCollision\"), ValueGroup(\"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\", \"\", \" * \")), CollisionType), \"L1\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `StdDev(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle`), \"L4\", \"L17\", \"L18\"), \"L14\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"Other\", \"NoCollision\", \"2Vehicles-BehindVehicles-Frontal\", \"3+Vehicles-Multiple\"), ValueGroup(\"2Vehicles-Side\", \"2Vehicles-Behind\", \"3+Vehicles-Chain\", \" * \")), CollisionType), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoDirectionChange\", \"None\", \"SwerveToRight\", \"SwerveToLeft\"), ValueGroup(\"SameDirectionOrLane\", \" * \")), `Mode(Vehicles.Maneuver)`), \"L2\", \"L21\", \"L22\"), \"L16\"))"
			},
			{
				"rank": "R10",
				"name": "Tree_7",
				"type": "Categorical",
				"level": 0.0402974,
				"parts": 6,
				"values": 18,
				"mode": "L6",
				"modeFrequency": 4774,
				"constructionCost": 206.153,
				"preparationCost": 84.8107,
				"dataCost": 7978.41,
				"derivationRule": "SwitchC(IntervalIndex(IntervalBounds(120.5), Commune), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None`), \"L0\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoIntersection\"), ValueGroup(\"X-type\", \" * \")), IntersectionType), \"L1\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"SameDirectionOrLane\", \" * \"), ValueGroup(\"NoDirectionChange\")), `Mode(Vehicles.Maneuver)`), \"L9\", SwitchC(IntervalIndex(IntervalBounds(915), Department), \"L11\", \"L31\", \"L32\"), SwitchC(IntervalIndex(IntervalBounds(905), Department), \"L11\", \"L27\", SwitchC(IntervalIndex(IntervalBounds(945), Department), \"L24\", \"L29\", \"L30\"))), SwitchC(IntervalIndex(IntervalBounds(745), Department), \"L9\", \"L17\", \"L18\")), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"None\", \"ConcreteBarrier\", \"StationaryVehicle\", \"OtherInLane\", \"SideWalkEdge\", \"ExitLaneWithoutObstacle\", \" * \"), ValueGroup(\"DitchTalusOrRockyWall\", \"Tree\", \"BuildingWallOrPier\", \"MetallicBarrier\", \"Post\", \"OtherInSidewalkOrShoulder\")), `Mode(Vehicles.FixedObstacle)`), \"L1\", \"L19\", SwitchC(IntervalIndex(IntervalBounds(915), Department), \"L10\", \"L33\", \"L34\"))), SwitchC(IntervalIndex(IntervalBounds(635), Department), \"L0\", SwitchC(IntervalIndex(IntervalBounds(#Missing), `Max(Vehicles.PassengerNumber) where FixedObstacle = None`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"DitchTalusOrRockyWall\", \"BuildingWallOrPier\", \"MetallicBarrier\", \"StationaryVehicle\", \" * \"), ValueGroup(\"Tree\", \"Post\")), `Mode(Vehicles.FixedObstacle)`), \"L3\", \"L13\", \"L14\"), SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoDirectionChange\"), ValueGroup(\"SameDirectionOrLane\", \" * \")), `Mode(Vehicles.Maneuver)`), \"L3\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"NoIntersection\"), ValueGroup(\"X-type\", \" * \")), IntersectionType), \"L8\", \"L25\", \"L26\"), \"L22\")), SwitchC(IntervalIndex(IntervalBounds(1.5), `CountDistinct(Vehicles.ImpactPoint)`), \"L2\", SwitchC(GroupIndex(ValueGroups(ValueGroup(\"None\", \"ConcreteBarrier\", \"ExitLaneWithoutObstacle\", \"SideWalkEdge\", \"OtherInLane\"), ValueGroup(\"DitchTalusOrRockyWall\", \"Tree\", \"MetallicBarrier\", \"BuildingWallOrPier\", \"StationaryVehicle\", \"Post\", \"OtherInSidewalkOrShoulder\", \" * \")), `Mode(Vehicles.FixedObstacle)`), \"L4\", \"L15\", \"L16\"), \"L6\")))"
			}
		],
		"variablesDetailedStatistics": {
			"R01": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_1",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L8","L11","L17"],
								["L7"],
								["L10","L25","L20","L13","L27","L18"],
								["L21","L28","L24"],
								["L19","L22"]
							],
							"defaultGroupIndex": 2
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[396,13190],
						[128,12074],
						[985,9164],
						[623,2125],
						[91,1672]
					],
					"partInterests": [0.0996054,0.327833,0.1362,0.436177,0.000184738]
				},
				"inputValues": {
					"values": ["L7","L8","L10","L25","L11","L21","L20","L19","L13","L17","L27","L28","L24","L22","L18"],
					"frequencies": [12202,10797,3257,2875,1698,1556,1490,1487,1480,1091,780,749,443,276,267]
				}
			},
			"R02": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_9",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L21","L5","L29","L18","L12"],
								["L11"],
								["L23","L17","L26"],
								["L24"],
								["L14","L20","L30","L28"],
								["L19","L22"]
							],
							"defaultGroupIndex": 5
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[473,17179],
						[100,9915],
						[801,4773],
						[218,2759],
						[305,2613],
						[326,986]
					],
					"partInterests": [0.1519,0.267848,0.275961,0.00802913,0.0509946,0.245267]
				},
				"inputValues": {
					"values": ["L11","L21","L5","L29","L23","L24","L14","L19","L17","L18","L12","L20","L30","L28","L26","L22"],
					"frequencies": [10015,7343,4828,4110,4073,2977,1190,1182,1079,688,683,604,564,560,422,130]
				}
			},
			"R03": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_8",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L20","L27","L26","L8","L21"],
								["L25"],
								["L17","L32"],
								["L5","L16"],
								["L15"],
								["L31","L18","L22"],
								["L33"],
								["L30","L28"],
								["L34"]
							],
							"defaultGroupIndex": 5
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[420,10899],
						[83,8770],
						[308,4213],
						[80,3390],
						[11,3395],
						[530,2562],
						[351,2175],
						[251,2241],
						[189,580]
					],
					"partInterests": [0.0358642,0.244952,0.00647237,0.0396003,0.137721,0.244581,0.113229,0.0375356,0.140043]
				},
				"inputValues": {
					"values": ["L25","L20","L17","L15","L5","L33","L27","L31","L30","L18","L26","L28","L32","L16","L8","L34","L21","L22"],
					"frequencies": [8853,6742,3494,3406,2641,2526,1965,1664,1375,1221,1121,1117,1027,829,803,769,688,207]
				}
			},
			"R04": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_4",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L9","L18","L21"],
								["L10","L13"],
								["L5","L23"],
								["L6","L17","L24"],
								["L16","L14","L22"]
							],
							"defaultGroupIndex": 4
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[166,14292],
						[302,9653],
						[1173,6840],
						[381,5575],
						[201,1865]
					],
					"partInterests": [0.407934,0.0733228,0.48278,0.00472228,0.0312409]
				},
				"inputValues": {
					"values": ["L9","L10","L5","L23","L6","L17","L16","L13","L24","L18","L21","L14","L22"],
					"frequencies": [12909,8800,4412,3601,3340,1618,1370,1155,998,819,730,459,237]
				}
			},
			"R05": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_3",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L8","L10"],
								["L11","L6","L16"],
								["L15"],
								["L12","L14","L5"]
							],
							"defaultGroupIndex": 1
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[199,13430],
						[381,12247],
						[1103,6496],
						[540,6052]
					],
					"partInterests": [0.351872,0.104678,0.495752,0.0476975]
				},
				"inputValues": {
					"values": ["L8","L11","L15","L12","L14","L6","L10","L5","L16"],
					"frequencies": [12158,9355,7599,2992,2736,2578,1471,864,695]
				}
			},
			"R06": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_5",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L7","L21"],
								["L15","L13","L5"],
								["L25","L23"],
								["L19"],
								["L28","L20","L6"],
								["L27","L22"],
								["L14","L24"]
							],
							"defaultGroupIndex": 4
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[115,9975],
						[169,7410],
						[1034,6011],
						[189,5712],
						[351,3321],
						[162,3120],
						[203,2676]
					],
					"partInterests": [0.312439,0.115525,0.466857,0.0405843,0.056215,0.0011911,0.00718822]
				},
				"inputValues": {
					"values": ["L19","L7","L15","L25","L21","L23","L14","L28","L27","L22","L20","L13","L24","L5","L6"],
					"frequencies": [5901,5875,5718,4563,4215,2482,1877,1769,1759,1523,1367,1122,1002,739,536]
				}
			},
			"R07": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_10",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L23","L22","L8","L26"],
								["L21","L12","L28"],
								["L18"],
								["L27"],
								["L25","L15","L24"],
								["L10","L20"],
								["L16"]
							],
							"defaultGroupIndex": 5
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[364,13259],
						[421,8619],
						[92,7158],
						[731,5180],
						[367,3233],
						[168,598],
						[80,178]
					],
					"partInterests": [0.164578,0.00829043,0.229526,0.259753,0.0796268,0.152171,0.106055]
				},
				"inputValues": {
					"values": ["L18","L23","L27","L22","L21","L12","L25","L8","L28","L15","L10","L24","L26","L16","L20"],
					"frequencies": [7250,6777,5911,5045,4990,2911,2529,1402,1139,621,563,450,399,258,203]
				}
			},
			"R08": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_2",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L11","L16","L20"],
								["L12","L18"],
								["L19"],
								["L15","L13"],
								["L4","L10"],
								["L14"]
							],
							"defaultGroupIndex": 5
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[789,14063],
						[387,12048],
						[68,5596],
						[716,4071],
						[184,2276],
						[79,171]
					],
					"partInterests": [0.000805088,0.132406,0.240332,0.475397,0.0139291,0.137131]
				},
				"inputValues": {
					"values": ["L11","L12","L19","L15","L16","L18","L13","L4","L10","L20","L14"],
					"frequencies": [12436,10540,5664,3312,1992,1895,1475,1281,1179,424,250]
				}
			},
			"R09": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_6",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L11","L9","L16","L18"],
								["L6","L12"],
								["L17"],
								["L21"],
								["L22","L14","L20"],
								["L19"]
							],
							"defaultGroupIndex": 4
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[668,13278],
						[229,8747],
						[87,6443],
						[747,5315],
						[213,3026],
						[279,1416]
					],
					"partInterests": [0.0117604,0.156076,0.260267,0.34472,0.0057837,0.221392]
				},
				"inputValues": {
					"values": ["L11","L17","L21","L6","L12","L9","L16","L19","L22","L14","L18","L20"],
					"frequencies": [8341,6530,6062,4681,4295,2728,1713,1695,1591,1180,1164,468]
				}
			},
			"R10": {
				"dataGrid": {
					"isSupervised": true,
					"dimensions": [
						{
							"variable": "Tree_7",
							"type": "Categorical",
							"partitionType": "Value groups",
							"partition": [
								["L6","L31","L19","L17","L34"],
								["L22","L27","L15","L26"],
								["L18","L32","L29"],
								["L25","L13"],
								["L33","L16","L30"],
								["L14"]
							],
							"defaultGroupIndex": 4
						},
						{
							"variable": "Gravity",
							"type": "Categorical",
							"partitionType": "Values",
							"partition": ["Lethal","NonLethal"]
						}
					],
					"partTargetFrequencies": [
						[452,12232],
						[645,11319],
						[71,7348],
						[528,4481],
						[387,2344],
						[140,501]
					],
					"partInterests": [0.0849396,0.000208711,0.361985,0.160856,0.231152,0.160859]
				},
				"inputValues": {
					"values": ["L6","L18","L22","L27","L25","L15","L31","L19","L17","L32","L13","L26","L33","L16","L29","L14","L34","L30"],
					"frequencies": [4774,4319,3884,3333,3212,3149,3051,2421,2224,2053,1797,1598,1546,1105,1047,641,214,80]
				}
			}
		},
		"treeDetails": {
			"R01": {
				"name": "Tree_1",
				"variableNumber": 8,
				"depth": 7,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "InAgglomeration",
					"type": "Categorical",
					"partition": [
						["Yes"],
						["No"]
					],
					"defaultGroupIndex": 1,
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partition": [
								[],
								[0,200]
							],
							"childNodes": [
								{
									"nodeId": "L5",
									"variable": "Commune",
									"type": "Numerical",
									"partition": [
										[1,118.5],
										[118.5,895]
									],
									"childNodes": [
										{
											"nodeId": "L19",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [76,1411]
											}
										},
										{
											"nodeId": "L20",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [142,1348]
											}
										}
									]
								},
								{
									"nodeId": "L6",
									"variable": "CollisionType",
									"type": "Categorical",
									"partition": [
										["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain",""],
										["Other","2Vehicles-BehindVehicles-Frontal","NoCollision","3+Vehicles-Multiple"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L7",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [128,12074]
											}
										},
										{
											"nodeId": "L8",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [340,10457]
											}
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "CollisionType",
							"type": "Categorical",
							"partition": [
								["2Vehicles-Side","2Vehicles-Behind","NoCollision","3+Vehicles-Chain"],
								["Other","2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple",""]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Sum(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
									"type": "Numerical",
									"partition": [
										[],
										[0,64]
									],
									"childNodes": [
										{
											"nodeId": "L9",
											"variable": "Commune",
											"type": "Numerical",
											"partition": [
												[1,85.5],
												[85.5,907]
											],
											"childNodes": [
												{
													"nodeId": "L11",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [35,1663]
													}
												},
												{
													"nodeId": "L12",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Side"],
														["2Vehicles-Behind"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L13",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [131,1349]
															}
														},
														{
															"nodeId": "L14",
															"variable": "Light",
															"type": "Categorical",
															"partition": [
																["Daylight","TwilightOrDawn"],
																["NightNoStreetLight"]
															],
															"defaultGroupIndex": 0,
															"childNodes": [
																{
																	"nodeId": "L17",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [21,1070]
																	}
																},
																{
																	"nodeId": "L18",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [25,242]
																	}
																}
															]
														}
													]
												}
											]
										},
										{
											"nodeId": "L10",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [294,2963]
											}
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "Light",
									"type": "Categorical",
									"partition": [
										["Daylight","TwilightOrDawn"],
										["NightNoStreetLight"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L15",
											"variable": "Mode(Vehicles.FixedObstacle)",
											"type": "Categorical",
											"partition": [
												["None","DitchTalusOrRockyWall","MetallicBarrier","ConcreteBarrier","BuildingWallOrPier"],
												["Tree"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L23",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["Other","3+Vehicles-Multiple"],
														["2Vehicles-BehindVehicles-Frontal"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L25",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [303,2572]
															}
														},
														{
															"nodeId": "L26",
															"variable": "Max(Vehicles.PassengerNumber) where Category <> Car<=3.5T",
															"type": "Numerical",
															"partition": [
																[],
																[0,60]
															],
															"childNodes": [
																{
																	"nodeId": "L27",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [90,690]
																	}
																},
																{
																	"nodeId": "L28",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [177,572]
																	}
																}
															]
														}
													]
												},
												{
													"nodeId": "L24",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [109,334]
													}
												}
											]
										},
										{
											"nodeId": "L16",
											"variable": "Mode(Vehicles.FixedObstacle)",
											"type": "Categorical",
											"partition": [
												["None","Tree","DitchTalusOrRockyWall","Post"],
												["ConcreteBarrier","MetallicBarrier"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L21",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [337,1219]
													}
												},
												{
													"nodeId": "L22",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [15,261]
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			},
			"R02": {
				"name": "Tree_9",
				"variableNumber": 9,
				"depth": 8,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Median(Vehicles.PassengerNumber) where FixedObstacle = None",
					"type": "Numerical",
					"partition": [
						[],
						[0,200]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "InAgglomeration",
							"type": "Categorical",
							"partition": [
								["No"],
								["Yes"]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L23",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [563,3510]
									}
								},
								{
									"nodeId": "L24",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [218,2759]
									}
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "CountDistinct(Vehicles.Direction)",
							"type": "Numerical",
							"partition": [
								[1,1.5],
								[1.5,3]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Mean(Vehicles.PassengerNumber) where MobileObstacle = Vehicle",
									"type": "Numerical",
									"partition": [
										[],
										[0,153]
									],
									"childNodes": [
										{
											"nodeId": "L7",
											"variable": "InAgglomeration",
											"type": "Categorical",
											"partition": [
												["Yes"],
												["No"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L15",
													"variable": "Mode(Vehicles.Category)",
													"type": "Categorical",
													"partition": [
														["Car<=3.5T","Utility","Motorbike>125cm3","Bicycle","Scooter<50cm3","Moped","Scooter_50cm3-125cm3","Motorbike_50cm3-125cm3","Scooter>125cm3","Bus","Other","Tramway","Quadricycle","QuadBike>50cm3","Coach","QuadBike<=50cm3"],
														["LargeCar>7.5T","LargeCar_3.5T-7.5T","SpecialEngine","LargeCar+Trailer>3.5T","Truck+SemiTrailer","Tractor","Train"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L21",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [212,7131]
															}
														},
														{
															"nodeId": "L22",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [30,100]
															}
														}
													]
												},
												{
													"nodeId": "L16",
													"variable": "Mode(Vehicles.Category)",
													"type": "Categorical",
													"partition": [
														["Car<=3.5T","Bicycle","Utility","LargeCar+Trailer>3.5T","Truck+SemiTrailer"],
														["Motorbike>125cm3","Moped","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Scooter>125cm3","QuadBike>50cm3","Scooter<50cm3"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L17",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [182,897]
															}
														},
														{
															"nodeId": "L18",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [20,668]
															}
														}
													]
												}
											]
										},
										{
											"nodeId": "L8",
											"variable": "InAgglomeration",
											"type": "Categorical",
											"partition": [
												["Yes"],
												["No"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L9",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Side","2Vehicles-Behind","Other","3+Vehicles-Chain"],
														["2Vehicles-BehindVehicles-Frontal"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L11",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [100,9915]
															}
														},
														{
															"nodeId": "L12",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [26,657]
															}
														}
													]
												},
												{
													"nodeId": "L10",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Behind","2Vehicles-Side","3+Vehicles-Chain","3+Vehicles-Multiple","Other","NoCollision"],
														["2Vehicles-BehindVehicles-Frontal"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L25",
															"variable": "IntersectionType",
															"type": "Categorical",
															"partition": [
																["NoIntersection","Other","Roundabout"],
																["X-type","T-type"]
															],
															"defaultGroupIndex": 0,
															"childNodes": [
																{
																	"nodeId": "L27",
																	"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle <> None",
																	"type": "Numerical",
																	"partition": [
																		[],
																		[0,40]
																	],
																	"childNodes": [
																		{
																			"nodeId": "L29",
																			"targetValues": {
																				"values": ["Lethal","NonLethal"],
																				"frequencies": [115,3995]
																			}
																		},
																		{
																			"nodeId": "L30",
																			"targetValues": {
																				"values": ["Lethal","NonLethal"],
																				"frequencies": [51,513]
																			}
																		}
																	]
																},
																{
																	"nodeId": "L28",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [54,506]
																	}
																}
															]
														},
														{
															"nodeId": "L26",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [56,366]
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["Yes"],
										["No"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L5",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [100,4728]
											}
										},
										{
											"nodeId": "L6",
											"variable": "Mode(Vehicles.ImpactPoint)",
											"type": "Categorical",
											"partition": [
												["Front"],
												["LeftFront"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L13",
													"variable": "IntersectionType",
													"type": "Categorical",
													"partition": [
														["NoIntersection"],
														["X-type"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L19",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [296,886]
															}
														},
														{
															"nodeId": "L20",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [69,535]
															}
														}
													]
												},
												{
													"nodeId": "L14",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [131,1059]
													}
												}
											]
										}
									]
								}
							]
						}
					]
				}
			},
			"R03": {
				"name": "Tree_8",
				"variableNumber": 8,
				"depth": 6,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Department",
					"type": "Numerical",
					"partition": [
						[10,905],
						[905,976]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Mean(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partition": [
								[],
								[0,57]
							],
							"childNodes": [
								{
									"nodeId": "L9",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["Yes"],
										["No"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L11",
											"variable": "Min(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
											"type": "Numerical",
											"partition": [
												[],
												[0,150]
											],
											"childNodes": [
												{
													"nodeId": "L19",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Side","2Vehicles-Behind","Other","3+Vehicles-Chain","3+Vehicles-Multiple","NoCollision"],
														["2Vehicles-BehindVehicles-Frontal"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L25",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [83,8770]
															}
														},
														{
															"nodeId": "L26",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [41,1080]
															}
														}
													]
												},
												{
													"nodeId": "L20",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [234,6508]
													}
												}
											]
										},
										{
											"nodeId": "L12",
											"variable": "CountDistinct(Vehicles.ImpactPoint)",
											"type": "Numerical",
											"partition": [
												[1,1.5],
												[1.5,6]
											],
											"childNodes": [
												{
													"nodeId": "L13",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-BehindVehicles-Frontal","Other","3+Vehicles-Multiple"],
														["NoCollision","2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L31",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [297,1367]
															}
														},
														{
															"nodeId": "L32",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [76,951]
															}
														}
													]
												},
												{
													"nodeId": "L14",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain"],
														["2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple","Other","NoCollision",""]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L17",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [232,3262]
															}
														},
														{
															"nodeId": "L18",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [196,1025]
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"nodeId": "L10",
									"variable": "Mode(Vehicles.FixedObstacle)",
									"type": "Categorical",
									"partition": [
										["DitchTalusOrRockyWall","Tree","BuildingWallOrPier","MetallicBarrier","Post","OtherInSidewalkOrShoulder","ExitLaneWithoutObstacle","TrafficSignOrEmergencyBox","OtherBarrier"],
										["None","StationaryVehicle","ConcreteBarrier","SideWalkEdge","OtherInLane","StreetFurniture","TrafficIslandRefugeOrMilestone","","Parapet"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L23",
											"variable": "InAgglomeration",
											"type": "Categorical",
											"partition": [
												["No"],
												["Yes"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L29",
													"variable": "Mode(Vehicles.FixedObstacle)",
													"type": "Categorical",
													"partition": [
														["DitchTalusOrRockyWall","MetallicBarrier","BuildingWallOrPier"],
														["Tree"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L33",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [351,2175]
															}
														},
														{
															"nodeId": "L34",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [189,580]
															}
														}
													]
												},
												{
													"nodeId": "L30",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [150,1225]
													}
												}
											]
										},
										{
											"nodeId": "L24",
											"variable": "InAgglomeration",
											"type": "Categorical",
											"partition": [
												["Yes"],
												["No"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L27",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [87,1878]
													}
												},
												{
													"nodeId": "L28",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [101,1016]
													}
												}
											]
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Count(Vehicles) where FixedObstacle = None",
							"type": "Numerical",
							"partition": [
								[0,1.5],
								[1.5,7]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["Yes"],
										["No"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L5",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [60,2581]
											}
										},
										{
											"nodeId": "L6",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[910,960],
												[960,976]
											],
											"childNodes": [
												{
													"nodeId": "L21",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [25,663]
													}
												},
												{
													"nodeId": "L22",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [37,170]
													}
												}
											]
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "CollisionType",
									"type": "Categorical",
									"partition": [
										["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain","Other","NoCollision"],
										["2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L7",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[910,945],
												[945,976]
											],
											"childNodes": [
												{
													"nodeId": "L15",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [11,3395]
													}
												},
												{
													"nodeId": "L16",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [20,809]
													}
												}
											]
										},
										{
											"nodeId": "L8",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [33,770]
											}
										}
									]
								}
							]
						}
					]
				}
			},
			"R04": {
				"name": "Tree_4",
				"variableNumber": 7,
				"depth": 6,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Count(Vehicles) where FixedObstacle <> None",
					"type": "Numerical",
					"partition": [
						[0,0.5],
						[0.5,6]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "InAgglomeration",
							"type": "Categorical",
							"partition": [
								["Yes"],
								["No"]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L7",
									"variable": "Count(Vehicles) where MobileObstacle <> Vehicle",
									"type": "Numerical",
									"partition": [
										[0,0.5],
										[0.5,4]
									],
									"childNodes": [
										{
											"nodeId": "L9",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [153,12756]
											}
										},
										{
											"nodeId": "L10",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [277,8523]
											}
										}
									]
								},
								{
									"nodeId": "L8",
									"variable": "StdDev(Vehicles.PassengerNumber) where Direction = Increasing",
									"type": "Numerical",
									"partition": [
										[],
										[0,24.04163056]
									],
									"childNodes": [
										{
											"nodeId": "L11",
											"variable": "Median(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
											"type": "Numerical",
											"partition": [
												[],
												[0,180]
											],
											"childNodes": [
												{
													"nodeId": "L15",
													"variable": "Department",
													"type": "Numerical",
													"partition": [
														[10,905],
														[905,976]
													],
													"childNodes": [
														{
															"nodeId": "L17",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [86,1532]
															}
														},
														{
															"nodeId": "L18",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [5,814]
															}
														}
													]
												},
												{
													"nodeId": "L16",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [140,1230]
													}
												}
											]
										},
										{
											"nodeId": "L12",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[10,905],
												[905,976]
											],
											"childNodes": [
												{
													"nodeId": "L19",
													"variable": "Mode(Vehicles.Maneuver)",
													"type": "Categorical",
													"partition": [
														["NoDirectionChange","None","CrossLane","Avoidance","PassLeft"],
														["SameDirectionOrLane","Insertion","BetweenLanes"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L23",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [532,3069]
															}
														},
														{
															"nodeId": "L24",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [58,940]
															}
														}
													]
												},
												{
													"nodeId": "L20",
													"variable": "Department",
													"type": "Numerical",
													"partition": [
														[910,960],
														[960,976]
													],
													"childNodes": [
														{
															"nodeId": "L21",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [8,722]
															}
														},
														{
															"nodeId": "L22",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [22,215]
															}
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Department",
							"type": "Numerical",
							"partition": [
								[10,905],
								[905,976]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["No"],
										["Yes"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L5",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [641,3771]
											}
										},
										{
											"nodeId": "L6",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [237,3103]
											}
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "Department",
									"type": "Numerical",
									"partition": [
										[910,945],
										[945,976]
									],
									"childNodes": [
										{
											"nodeId": "L13",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [25,1130]
											}
										},
										{
											"nodeId": "L14",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [39,420]
											}
										}
									]
								}
							]
						}
					]
				}
			},
			"R05": {
				"name": "Tree_3",
				"variableNumber": 7,
				"depth": 5,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "InAgglomeration",
					"type": "Categorical",
					"partition": [
						["Yes"],
						["No"]
					],
					"defaultGroupIndex": 1,
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "CountDistinct(Vehicles.Maneuver)",
							"type": "Numerical",
							"partition": [
								[1,1.5],
								[1.5,4]
							],
							"childNodes": [
								{
									"nodeId": "L7",
									"variable": "Mode(Vehicles.ImpactPoint)",
									"type": "Categorical",
									"partition": [
										["Front","RightFront","LeftFront","None","LeftSide"],
										["Back"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L9",
											"variable": "Count(Vehicles) where FixedObstacle <> None",
											"type": "Numerical",
											"partition": [
												[0,0.5],
												[0.5,4]
											],
											"childNodes": [
												{
													"nodeId": "L11",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [267,9088]
													}
												},
												{
													"nodeId": "L12",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [220,2772]
													}
												}
											]
										},
										{
											"nodeId": "L10",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [12,1459]
											}
										}
									]
								},
								{
									"nodeId": "L8",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [187,11971]
									}
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Mode(Vehicles.Maneuver)",
							"type": "Categorical",
							"partition": [
								["NoDirectionChange","None","SwerveToRight","SwerveToLeft","CrossLane","Avoidance","PassLeft"],
								["SameDirectionOrLane","BetweenLanes","Insertion","ChangeToRightLane","ChangeToLeftLane","Stopped"]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Count(Vehicles) where ImpactPoint <> Front",
									"type": "Numerical",
									"partition": [
										[0,1.5],
										[1.5,11]
									],
									"childNodes": [
										{
											"nodeId": "L13",
											"variable": "Mode(Vehicles.ImpactPoint)",
											"type": "Categorical",
											"partition": [
												["Front","RightFront","LeftFront","None","Multiple"],
												["Back"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L15",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [1103,6496]
													}
												},
												{
													"nodeId": "L16",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [34,661]
													}
												}
											]
										},
										{
											"nodeId": "L14",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [244,2492]
											}
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "Count(Vehicles) where FixedObstacle = None",
									"type": "Numerical",
									"partition": [
										[0,1.5],
										[1.5,9]
									],
									"childNodes": [
										{
											"nodeId": "L5",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [76,788]
											}
										},
										{
											"nodeId": "L6",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [80,2498]
											}
										}
									]
								}
							]
						}
					]
				}
			},
			"R06": {
				"name": "Tree_5",
				"variableNumber": 8,
				"depth": 6,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Count(Vehicles) where Maneuver <> NoDirectionChange",
					"type": "Numerical",
					"partition": [
						[0,1.5],
						[1.5,12]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partition": [
								[],
								[0,57]
							],
							"childNodes": [
								{
									"nodeId": "L9",
									"variable": "Mean(Vehicles.PassengerNumber) where Direction = Decreasing",
									"type": "Numerical",
									"partition": [
										[],
										[0,71]
									],
									"childNodes": [
										{
											"nodeId": "L11",
											"variable": "Count(Vehicles) where MobileObstacle <> Vehicle",
											"type": "Numerical",
											"partition": [
												[0,0.5],
												[0.5,6]
											],
											"childNodes": [
												{
													"nodeId": "L17",
													"variable": "InAgglomeration",
													"type": "Categorical",
													"partition": [
														["Yes"],
														["No"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L21",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [52,4163]
															}
														},
														{
															"nodeId": "L22",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [80,1443]
															}
														}
													]
												},
												{
													"nodeId": "L18",
													"variable": "InAgglomeration",
													"type": "Categorical",
													"partition": [
														["Yes"],
														["No"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L19",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [189,5712]
															}
														},
														{
															"nodeId": "L20",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [140,1227]
															}
														}
													]
												}
											]
										},
										{
											"nodeId": "L12",
											"variable": "InAgglomeration",
											"type": "Categorical",
											"partition": [
												["Yes"],
												["No"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L15",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [126,5592]
													}
												},
												{
													"nodeId": "L16",
													"variable": "Count(Vehicles) where Direction = Decreasing",
													"type": "Numerical",
													"partition": [
														[1,1.5],
														[1.5,6]
													],
													"childNodes": [
														{
															"nodeId": "L23",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [404,2078]
															}
														},
														{
															"nodeId": "L24",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [75,927]
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"nodeId": "L10",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["No"],
										["Yes"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L25",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [630,3933]
											}
										},
										{
											"nodeId": "L26",
											"variable": "Commune",
											"type": "Numerical",
											"partition": [
												[1,118.5],
												[118.5,895]
											],
											"childNodes": [
												{
													"nodeId": "L27",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [82,1677]
													}
												},
												{
													"nodeId": "L28",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [155,1614]
													}
												}
											]
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Count(Vehicles) where FixedObstacle <> None",
							"type": "Numerical",
							"partition": [
								[0,0.5],
								[0.5,5]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["Yes"],
										["No"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L7",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [63,5812]
											}
										},
										{
											"nodeId": "L8",
											"variable": "Commune",
											"type": "Numerical",
											"partition": [
												[1,76.5],
												[76.5,873]
											],
											"childNodes": [
												{
													"nodeId": "L13",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [24,1098]
													}
												},
												{
													"nodeId": "L14",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [128,1749]
													}
												}
											]
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "InAgglomeration",
									"type": "Categorical",
									"partition": [
										["Yes"],
										["No"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L5",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [19,720]
											}
										},
										{
											"nodeId": "L6",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [56,480]
											}
										}
									]
								}
							]
						}
					]
				}
			},
			"R07": {
				"name": "Tree_10",
				"variableNumber": 7,
				"depth": 7,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle = None",
					"type": "Numerical",
					"partition": [
						[],
						[0,200]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Department",
							"type": "Numerical",
							"partition": [
								[10,905],
								[905,976]
							],
							"childNodes": [
								{
									"nodeId": "L27",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [731,5180]
									}
								},
								{
									"nodeId": "L28",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [50,1089]
									}
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "CountDistinct(Vehicles.Direction)",
							"type": "Numerical",
							"partition": [
								[1,1.5],
								[1.5,3]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Mode(Vehicles.MobileObstacle)",
									"type": "Categorical",
									"partition": [
										["Vehicle"],
										["Pedestrian"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L5",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[10,735],
												[735,976]
											],
											"childNodes": [
												{
													"nodeId": "L17",
													"variable": "Light",
													"type": "Categorical",
													"partition": [
														["Daylight","NightStreelightsOn","TwilightOrDawn","NightStreelightsOff"],
														["NightNoStreetLight"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L23",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [171,6606]
															}
														},
														{
															"nodeId": "L24",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [37,413]
															}
														}
													]
												},
												{
													"nodeId": "L18",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [92,7158]
													}
												}
											]
										},
										{
											"nodeId": "L6",
											"variable": "Light",
											"type": "Categorical",
											"partition": [
												["Daylight","NightStreelightsOn","TwilightOrDawn","NightStreelightsOff"],
												["NightNoStreetLight"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L13",
													"variable": "Mode(Vehicles.Category)",
													"type": "Categorical",
													"partition": [
														["Car<=3.5T","Bicycle","Motorbike>125cm3","Utility","Scooter<50cm3","Moped","Motorbike_50cm3-125cm3","Scooter_50cm3-125cm3","Scooter>125cm3","Bus","Other","Quadricycle","Tramway","LargeCar_3.5T-7.5T","QuadBike>50cm3","Coach","QuadBike<=50cm3","Truck"],
														["LargeCar>7.5T","LargeCar+Trailer>3.5T","Truck+SemiTrailer","SpecialEngine","Tractor","Train"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L19",
															"variable": "Department",
															"type": "Numerical",
															"partition": [
																[10,675],
																[675,976]
															],
															"childNodes": [
																{
																	"nodeId": "L21",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [220,4770]
																	}
																},
																{
																	"nodeId": "L22",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [133,4912]
																	}
																}
															]
														},
														{
															"nodeId": "L20",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [49,154]
															}
														}
													]
												},
												{
													"nodeId": "L14",
													"variable": "Mode(Vehicles.MobileObstacle)",
													"type": "Categorical",
													"partition": [
														["None","WildAnimal"],
														["Pedestrian"]
													],
													"defaultGroupIndex": 0,
													"childNodes": [
														{
															"nodeId": "L15",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [64,557]
															}
														},
														{
															"nodeId": "L16",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [80,178]
															}
														}
													]
												}
											]
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "Count(Vehicles) where Direction not in {Increasing, Decreasing}",
									"type": "Numerical",
									"partition": [
										[0,0.5],
										[0.5,4]
									],
									"childNodes": [
										{
											"nodeId": "L7",
											"variable": "Light",
											"type": "Categorical",
											"partition": [
												["Daylight","NightStreelightsOn","TwilightOrDawn","NightStreelightsOff"],
												["NightNoStreetLight"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L9",
													"variable": "Department",
													"type": "Numerical",
													"partition": [
														[10,635],
														[635,976]
													],
													"childNodes": [
														{
															"nodeId": "L11",
															"variable": "Light",
															"type": "Categorical",
															"partition": [
																["Daylight","TwilightOrDawn"],
																["NightStreelightsOn","NightStreelightsOff"]
															],
															"defaultGroupIndex": 1,
															"childNodes": [
																{
																	"nodeId": "L25",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [266,2263]
																	}
																},
																{
																	"nodeId": "L26",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [11,388]
																	}
																}
															]
														},
														{
															"nodeId": "L12",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [151,2760]
															}
														}
													]
												},
												{
													"nodeId": "L10",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [119,444]
													}
												}
											]
										},
										{
											"nodeId": "L8",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [49,1353]
											}
										}
									]
								}
							]
						}
					]
				}
			},
			"R08": {
				"name": "Tree_2",
				"variableNumber": 8,
				"depth": 5,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Mode(Vehicles.ImpactPoint)",
					"type": "Categorical",
					"partition": [
						["Front","LeftFront","RightFront","None","RightSide","Multiple","RightBack",""],
						["Back","LeftSide","LeftBack"]
					],
					"defaultGroupIndex": 0,
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "StdDev(Vehicles.PassengerNumber) where FixedObstacle = None",
							"type": "Numerical",
							"partition": [
								[],
								[0,76.5]
							],
							"childNodes": [
								{
									"nodeId": "L5",
									"variable": "Light",
									"type": "Categorical",
									"partition": [
										["Daylight","NightNoStreetLight","TwilightOrDawn","NightStreelightsOff"],
										["NightStreelightsOn"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L9",
											"variable": "Mode(Vehicles.FixedObstacle)",
											"type": "Categorical",
											"partition": [
												["DitchTalusOrRockyWall","Tree","BuildingWallOrPier","Post","ExitLaneWithoutObstacle","OtherInSidewalkOrShoulder","TrafficSignOrEmergencyBox","OtherBarrier"],
												["ConcreteBarrier","MetallicBarrier","StationaryVehicle","SideWalkEdge","OtherInLane","StreetFurniture","TrafficIslandRefugeOrMilestone","","Parapet"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L15",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [525,2787]
													}
												},
												{
													"nodeId": "L16",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [120,1872]
													}
												}
											]
										},
										{
											"nodeId": "L10",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [79,1100]
											}
										}
									]
								},
								{
									"nodeId": "L6",
									"variable": "Light",
									"type": "Categorical",
									"partition": [
										["Daylight","NightStreelightsOn","TwilightOrDawn","NightStreelightsOff"],
										["NightNoStreetLight"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L7",
											"variable": "Mode(Vehicles.Maneuver)",
											"type": "Categorical",
											"partition": [
												["NoDirectionChange"],
												["None"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L11",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [646,11790]
													}
												},
												{
													"nodeId": "L12",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [312,10228]
													}
												}
											]
										},
										{
											"nodeId": "L8",
											"variable": "Mode(Vehicles.MobileObstacle)",
											"type": "Categorical",
											"partition": [
												["Vehicle","None","WildAnimal"],
												["Pedestrian"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L13",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [191,1284]
													}
												},
												{
													"nodeId": "L14",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [79,171]
													}
												}
											]
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Mean(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partition": [
								[],
								[0,6.75]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Count(Vehicles) where MobileObstacle <> Vehicle",
									"type": "Numerical",
									"partition": [
										[0,0.5],
										[0.5,4]
									],
									"childNodes": [
										{
											"nodeId": "L17",
											"variable": "Light",
											"type": "Categorical",
											"partition": [
												["Daylight","NightStreelightsOn","TwilightOrDawn","NightStreelightsOff"],
												["NightNoStreetLight"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L19",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [68,5596]
													}
												},
												{
													"nodeId": "L20",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [23,401]
													}
												}
											]
										},
										{
											"nodeId": "L18",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [75,1820]
											}
										}
									]
								},
								{
									"nodeId": "L4",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [105,1176]
									}
								}
							]
						}
					]
				}
			},
			"R09": {
				"name": "Tree_6",
				"variableNumber": 9,
				"depth": 7,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None",
					"type": "Numerical",
					"partition": [
						[],
						[0,11.69134295]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "Count(Vehicles) where Maneuver <> NoDirectionChange",
							"type": "Numerical",
							"partition": [
								[0,1.5],
								[1.5,12]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Mode(Vehicles.ImpactPoint)",
									"type": "Categorical",
									"partition": [
										["Front","LeftFront","RightFront","None","Multiple","RightBack"],
										["Back","LeftSide","RightSide","LeftBack"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L5",
											"variable": "CountDistinct(Vehicles.Direction)",
											"type": "Numerical",
											"partition": [
												[1,1.5],
												[1.5,3]
											],
											"childNodes": [
												{
													"nodeId": "L7",
													"variable": "CountDistinct(Vehicles.ImpactPoint)",
													"type": "Numerical",
													"partition": [
														[1,1.5],
														[1.5,5]
													],
													"childNodes": [
														{
															"nodeId": "L11",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [416,7925]
															}
														},
														{
															"nodeId": "L12",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [120,4175]
															}
														}
													]
												},
												{
													"nodeId": "L8",
													"variable": "CollisionType",
													"type": "Categorical",
													"partition": [
														["2Vehicles-Side","Other","2Vehicles-Behind","NoCollision"],
														["2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple","3+Vehicles-Chain"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L9",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [109,2619]
															}
														},
														{
															"nodeId": "L10",
															"variable": "IntersectionType",
															"type": "Categorical",
															"partition": [
																["NoIntersection"],
																["T-type"]
															],
															"defaultGroupIndex": 1,
															"childNodes": [
																{
																	"nodeId": "L19",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [279,1416]
																	}
																},
																{
																	"nodeId": "L20",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [33,435]
																	}
																}
															]
														}
													]
												}
											]
										},
										{
											"nodeId": "L6",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [109,4572]
											}
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "CollisionType",
									"type": "Categorical",
									"partition": [
										["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain","Other","NoCollision"],
										["2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple",""]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L13",
											"variable": "StdDev(Vehicles.PassengerNumber) where MobileObstacle <> Vehicle",
											"type": "Numerical",
											"partition": [
												[],
												[0,15.5]
											],
											"childNodes": [
												{
													"nodeId": "L17",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [87,6443]
													}
												},
												{
													"nodeId": "L18",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [54,1110]
													}
												}
											]
										},
										{
											"nodeId": "L14",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [74,1106]
											}
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "CollisionType",
							"type": "Categorical",
							"partition": [
								["Other","NoCollision","2Vehicles-BehindVehicles-Frontal","3+Vehicles-Multiple"],
								["2Vehicles-Side","2Vehicles-Behind","3+Vehicles-Chain"]
							],
							"defaultGroupIndex": 1,
							"childNodes": [
								{
									"nodeId": "L15",
									"variable": "Mode(Vehicles.Maneuver)",
									"type": "Categorical",
									"partition": [
										["NoDirectionChange","None","SwerveToRight","SwerveToLeft"],
										["SameDirectionOrLane"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L21",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [747,5315]
											}
										},
										{
											"nodeId": "L22",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [106,1485]
											}
										}
									]
								},
								{
									"nodeId": "L16",
									"targetValues": {
										"values": ["Lethal","NonLethal"],
										"frequencies": [89,1624]
									}
								}
							]
						}
					]
				}
			},
			"R10": {
				"name": "Tree_7",
				"variableNumber": 8,
				"depth": 7,
				"treeNodes": {
					"nodeId": "L0",
					"variable": "Commune",
					"type": "Numerical",
					"partition": [
						[1,120.5],
						[120.5,907]
					],
					"childNodes": [
						{
							"nodeId": "L1",
							"variable": "StdDev(Vehicles.PassengerNumber) where FixedObstacle <> None",
							"type": "Numerical",
							"partition": [
								[],
								[0,7.5]
							],
							"childNodes": [
								{
									"nodeId": "L9",
									"variable": "IntersectionType",
									"type": "Categorical",
									"partition": [
										["NoIntersection"],
										["X-type"]
									],
									"defaultGroupIndex": 1,
									"childNodes": [
										{
											"nodeId": "L11",
											"variable": "Mode(Vehicles.Maneuver)",
											"type": "Categorical",
											"partition": [
												["SameDirectionOrLane"],
												["NoDirectionChange"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L23",
													"variable": "Department",
													"type": "Numerical",
													"partition": [
														[10,915],
														[915,971]
													],
													"childNodes": [
														{
															"nodeId": "L31",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [91,2960]
															}
														},
														{
															"nodeId": "L32",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [15,2038]
															}
														}
													]
												},
												{
													"nodeId": "L24",
													"variable": "Department",
													"type": "Numerical",
													"partition": [
														[10,905],
														[905,971]
													],
													"childNodes": [
														{
															"nodeId": "L27",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [215,3118]
															}
														},
														{
															"nodeId": "L28",
															"variable": "Department",
															"type": "Numerical",
															"partition": [
																[910,945],
																[945,971]
															],
															"childNodes": [
																{
																	"nodeId": "L29",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [8,1039]
																	}
																},
																{
																	"nodeId": "L30",
																	"targetValues": {
																		"values": ["Lethal","NonLethal"],
																		"frequencies": [14,66]
																	}
																}
															]
														}
													]
												}
											]
										},
										{
											"nodeId": "L12",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[10,745],
												[745,971]
											],
											"childNodes": [
												{
													"nodeId": "L17",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [73,2151]
													}
												},
												{
													"nodeId": "L18",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [48,4271]
													}
												}
											]
										}
									]
								},
								{
									"nodeId": "L10",
									"variable": "Mode(Vehicles.FixedObstacle)",
									"type": "Categorical",
									"partition": [
										["None","ConcreteBarrier","StationaryVehicle","OtherInLane","SideWalkEdge","ExitLaneWithoutObstacle"],
										["DitchTalusOrRockyWall","Tree","BuildingWallOrPier","MetallicBarrier","Post","OtherInSidewalkOrShoulder"]
									],
									"defaultGroupIndex": 0,
									"childNodes": [
										{
											"nodeId": "L19",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [101,2320]
											}
										},
										{
											"nodeId": "L20",
											"variable": "Department",
											"type": "Numerical",
											"partition": [
												[10,915],
												[915,971]
											],
											"childNodes": [
												{
													"nodeId": "L33",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [228,1318]
													}
												},
												{
													"nodeId": "L34",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [5,209]
													}
												}
											]
										}
									]
								}
							]
						},
						{
							"nodeId": "L2",
							"variable": "Department",
							"type": "Numerical",
							"partition": [
								[10,635],
								[635,976]
							],
							"childNodes": [
								{
									"nodeId": "L3",
									"variable": "Max(Vehicles.PassengerNumber) where FixedObstacle = None",
									"type": "Numerical",
									"partition": [
										[],
										[0,153]
									],
									"childNodes": [
										{
											"nodeId": "L7",
											"variable": "Mode(Vehicles.FixedObstacle)",
											"type": "Categorical",
											"partition": [
												["DitchTalusOrRockyWall","BuildingWallOrPier","MetallicBarrier","StationaryVehicle"],
												["Tree","Post"]
											],
											"defaultGroupIndex": 0,
											"childNodes": [
												{
													"nodeId": "L13",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [202,1595]
													}
												},
												{
													"nodeId": "L14",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [140,501]
													}
												}
											]
										},
										{
											"nodeId": "L8",
											"variable": "Mode(Vehicles.Maneuver)",
											"type": "Categorical",
											"partition": [
												["NoDirectionChange"],
												["SameDirectionOrLane"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L21",
													"variable": "IntersectionType",
													"type": "Categorical",
													"partition": [
														["NoIntersection"],
														["X-type"]
													],
													"defaultGroupIndex": 1,
													"childNodes": [
														{
															"nodeId": "L25",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [326,2886]
															}
														},
														{
															"nodeId": "L26",
															"targetValues": {
																"values": ["Lethal","NonLethal"],
																"frequencies": [74,1524]
															}
														}
													]
												},
												{
													"nodeId": "L22",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [183,3701]
													}
												}
											]
										}
									]
								},
								{
									"nodeId": "L4",
									"variable": "CountDistinct(Vehicles.ImpactPoint)",
									"type": "Numerical",
									"partition": [
										[1,1.5],
										[1.5,6]
									],
									"childNodes": [
										{
											"nodeId": "L5",
											"variable": "Mode(Vehicles.FixedObstacle)",
											"type": "Categorical",
											"partition": [
												["None","ConcreteBarrier","ExitLaneWithoutObstacle","SideWalkEdge","OtherInLane"],
												["DitchTalusOrRockyWall","Tree","MetallicBarrier","BuildingWallOrPier","StationaryVehicle","Post","OtherInSidewalkOrShoulder"]
											],
											"defaultGroupIndex": 1,
											"childNodes": [
												{
													"nodeId": "L15",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [173,2976]
													}
												},
												{
													"nodeId": "L16",
													"targetValues": {
														"values": ["Lethal","NonLethal"],
														"frequencies": [145,960]
													}
												}
											]
										},
										{
											"nodeId": "L6",
											"targetValues": {
												"values": ["Lethal","NonLethal"],
												"frequencies": [182,4592]
											}
										}
									]
								}
							]
						}
					]
				}
			}
		}
	},
	"khiops_encoding": "utf8"
}
