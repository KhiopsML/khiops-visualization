{"version":3,"file":"helpers.segment.js","sources":["../../src/helpers/helpers.core.ts","../../src/helpers/helpers.math.ts","../../src/helpers/helpers.collection.ts","../../src/helpers/helpers.extras.ts","../../src/helpers/helpers.easing.ts","../../node_modules/@kurkle/color/dist/color.esm.js","../../src/helpers/helpers.color.ts","../../src/core/core.animations.defaults.js","../../src/core/core.layouts.defaults.js","../../src/helpers/helpers.intl.ts","../../src/core/core.ticks.js","../../src/core/core.scale.defaults.js","../../src/core/core.defaults.js","../../src/helpers/helpers.canvas.js","../../src/helpers/helpers.options.js","../../src/helpers/helpers.config.js","../../src/helpers/helpers.curve.ts","../../src/helpers/helpers.dom.ts","../../src/helpers/helpers.interpolation.ts","../../src/helpers/helpers.rtl.ts","../../src/helpers/helpers.segment.js"],"sourcesContent":["/**\r\n * @namespace Chart.helpers\r\n */\r\n\r\nimport type {AnyObject} from '../../types/basic';\r\nimport type {ActiveDataPoint, ChartEvent} from '../../types';\r\n\r\n/**\r\n * An empty function that can be used, for example, for optional callback.\r\n */\r\nexport function noop() {\r\n  /* noop */\r\n}\r\n\r\n/**\r\n * Returns a unique id, sequentially generated from a global variable.\r\n */\r\nexport const uid = (() => {\r\n  let id = 0;\r\n  return () => id++;\r\n})();\r\n\r\n/**\r\n * Returns true if `value` is neither null nor undefined, else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */\r\nexport function isNullOrUndef(value: unknown): value is null | undefined {\r\n  return value === null || typeof value === 'undefined';\r\n}\r\n\r\n/**\r\n * Returns true if `value` is an array (including typed arrays), else returns false.\r\n * @param value - The value to test.\r\n * @function\r\n */\r\nexport function isArray<T = unknown>(value: unknown): value is T[] {\r\n  if (Array.isArray && Array.isArray(value)) {\r\n    return true;\r\n  }\r\n  const type = Object.prototype.toString.call(value);\r\n  if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Returns true if `value` is an object (excluding null), else returns false.\r\n * @param value - The value to test.\r\n * @since 2.7.0\r\n */\r\nexport function isObject(value: unknown): value is AnyObject {\r\n  return value !== null && Object.prototype.toString.call(value) === '[object Object]';\r\n}\r\n\r\n/**\r\n * Returns true if `value` is a finite number, else returns false\r\n * @param value  - The value to test.\r\n */\r\nfunction isNumberFinite(value: unknown): value is number {\r\n  return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\r\n}\r\nexport {\r\n  isNumberFinite as isFinite,\r\n};\r\n\r\n/**\r\n * Returns `value` if finite, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is not finite.\r\n */\r\nexport function finiteOrDefault(value: unknown, defaultValue: number) {\r\n  return isNumberFinite(value) ? value : defaultValue;\r\n}\r\n\r\n/**\r\n * Returns `value` if defined, else returns `defaultValue`.\r\n * @param value - The value to return if defined.\r\n * @param defaultValue - The value to return if `value` is undefined.\r\n */\r\nexport function valueOrDefault<T>(value: T | undefined, defaultValue: T) {\r\n  return typeof value === 'undefined' ? defaultValue : value;\r\n}\r\n\r\nexport const toPercentage = (value: number | string, dimension: number) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100\r\n    : +value / dimension;\r\n\r\nexport const toDimension = (value: number | string, dimension: number) =>\r\n  typeof value === 'string' && value.endsWith('%') ?\r\n    parseFloat(value) / 100 * dimension\r\n    : +value;\r\n\r\n/**\r\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\r\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\r\n * @param fn - The function to call.\r\n * @param args - The arguments with which `fn` should be called.\r\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\r\n */\r\nexport function callback<T extends (this: TA, ...restArgs: unknown[]) => R, TA, R>(\r\n  fn: T | undefined,\r\n  args: unknown[],\r\n  thisArg?: TA\r\n): R | undefined {\r\n  if (fn && typeof fn.call === 'function') {\r\n    return fn.apply(thisArg, args);\r\n  }\r\n}\r\n\r\n/**\r\n * Note(SB) for performance sake, this method should only be used when loopable type\r\n * is unknown or in none intensive code (not called often and small loopable). Else\r\n * it's preferable to use a regular for() loop and save extra function calls.\r\n * @param loopable - The object or array to be iterated.\r\n * @param fn - The function to call for each item.\r\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\r\n * @param [reverse] - If true, iterates backward on the loopable.\r\n */\r\nexport function each<T, TA>(\r\n  loopable: Record<string, T>,\r\n  fn: (this: TA, v: T, i: string) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n): void;\r\nexport function each<T, TA>(\r\n  loopable: T[],\r\n  fn: (this: TA, v: T, i: number) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n): void;\r\nexport function each<T, TA>(\r\n  loopable: T[] | Record<string, T>,\r\n  fn: (this: TA, v: T, i: any) => void,\r\n  thisArg?: TA,\r\n  reverse?: boolean\r\n) {\r\n  let i: number, len: number, keys: string[];\r\n  if (isArray(loopable)) {\r\n    len = loopable.length;\r\n    if (reverse) {\r\n      for (i = len - 1; i >= 0; i--) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    } else {\r\n      for (i = 0; i < len; i++) {\r\n        fn.call(thisArg, loopable[i], i);\r\n      }\r\n    }\r\n  } else if (isObject(loopable)) {\r\n    keys = Object.keys(loopable);\r\n    len = keys.length;\r\n    for (i = 0; i < len; i++) {\r\n      fn.call(thisArg, loopable[keys[i]], keys[i]);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\r\n * @param a0 - The array to compare\r\n * @param a1 - The array to compare\r\n * @private\r\n */\r\nexport function _elementsEqual(a0: ActiveDataPoint[], a1: ActiveDataPoint[]) {\r\n  let i: number, ilen: number, v0: ActiveDataPoint, v1: ActiveDataPoint;\r\n\r\n  if (!a0 || !a1 || a0.length !== a1.length) {\r\n    return false;\r\n  }\r\n\r\n  for (i = 0, ilen = a0.length; i < ilen; ++i) {\r\n    v0 = a0[i];\r\n    v1 = a1[i];\r\n\r\n    if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n}\r\n\r\n/**\r\n * Returns a deep copy of `source` without keeping references on objects and arrays.\r\n * @param source - The value to clone.\r\n */\r\nexport function clone<T>(source: T): T {\r\n  if (isArray(source)) {\r\n    return source.map(clone) as unknown as T;\r\n  }\r\n\r\n  if (isObject(source)) {\r\n    const target = Object.create(null);\r\n    const keys = Object.keys(source);\r\n    const klen = keys.length;\r\n    let k = 0;\r\n\r\n    for (; k < klen; ++k) {\r\n      target[keys[k]] = clone(source[keys[k]]);\r\n    }\r\n\r\n    return target;\r\n  }\r\n\r\n  return source;\r\n}\r\n\r\nfunction isValidKey(key: string) {\r\n  return ['__proto__', 'prototype', 'constructor'].indexOf(key) === -1;\r\n}\r\n\r\n/**\r\n * The default merger when Chart.helpers.merge is called without merger option.\r\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\r\n * @private\r\n */\r\nexport function _merger(key: string, target: AnyObject, source: AnyObject, options: AnyObject) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n\r\n  if (isObject(tval) && isObject(sval)) {\r\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n    merge(tval, sval, options);\r\n  } else {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\n\r\nexport interface MergeOptions {\r\n  merger?: (key: string, target: AnyObject, source: AnyObject, options?: AnyObject) => void;\r\n}\r\n\r\n/**\r\n * Recursively deep copies `source` properties into `target` with the given `options`.\r\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n * @param target - The target object in which all sources are merged into.\r\n * @param source - Object(s) to merge into `target`.\r\n * @param [options] - Merging options:\r\n * @param [options.merger] - The merge method (key, target, source, options)\r\n * @returns The `target` object.\r\n */\r\nexport function merge<T>(target: T, source: [], options?: MergeOptions): T;\r\nexport function merge<T, S1>(target: T, source: S1, options?: MergeOptions): T & S1;\r\nexport function merge<T, S1>(target: T, source: [S1], options?: MergeOptions): T & S1;\r\nexport function merge<T, S1, S2>(target: T, source: [S1, S2], options?: MergeOptions): T & S1 & S2;\r\nexport function merge<T, S1, S2, S3>(target: T, source: [S1, S2, S3], options?: MergeOptions): T & S1 & S2 & S3;\r\nexport function merge<T, S1, S2, S3, S4>(\r\n  target: T,\r\n  source: [S1, S2, S3, S4],\r\n  options?: MergeOptions\r\n): T & S1 & S2 & S3 & S4;\r\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject;\r\nexport function merge<T>(target: T, source: AnyObject[], options?: MergeOptions): AnyObject {\r\n  const sources = isArray(source) ? source : [source];\r\n  const ilen = sources.length;\r\n\r\n  if (!isObject(target)) {\r\n    return target as AnyObject;\r\n  }\r\n\r\n  options = options || {};\r\n  const merger = options.merger || _merger;\r\n  let current: AnyObject;\r\n\r\n  for (let i = 0; i < ilen; ++i) {\r\n    current = sources[i];\r\n    if (!isObject(current)) {\r\n      continue;\r\n    }\r\n\r\n    const keys = Object.keys(current);\r\n    for (let k = 0, klen = keys.length; k < klen; ++k) {\r\n      merger(keys[k], target, current, options as AnyObject);\r\n    }\r\n  }\r\n\r\n  return target;\r\n}\r\n\r\n/**\r\n * Recursively deep copies `source` properties into `target` *only* if not defined in target.\r\n * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\r\n * @param target - The target object in which all sources are merged into.\r\n * @param source - Object(s) to merge into `target`.\r\n * @returns The `target` object.\r\n */\r\nexport function mergeIf<T>(target: T, source: []): T;\r\nexport function mergeIf<T, S1>(target: T, source: S1): T & S1;\r\nexport function mergeIf<T, S1>(target: T, source: [S1]): T & S1;\r\nexport function mergeIf<T, S1, S2>(target: T, source: [S1, S2]): T & S1 & S2;\r\nexport function mergeIf<T, S1, S2, S3>(target: T, source: [S1, S2, S3]): T & S1 & S2 & S3;\r\nexport function mergeIf<T, S1, S2, S3, S4>(target: T, source: [S1, S2, S3, S4]): T & S1 & S2 & S3 & S4;\r\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject;\r\nexport function mergeIf<T>(target: T, source: AnyObject[]): AnyObject {\r\n  // eslint-disable-next-line @typescript-eslint/no-use-before-define\r\n  return merge<T>(target, source, {merger: _mergerIf});\r\n}\r\n\r\n/**\r\n * Merges source[key] in target[key] only if target[key] is undefined.\r\n * @private\r\n */\r\nexport function _mergerIf(key: string, target: AnyObject, source: AnyObject) {\r\n  if (!isValidKey(key)) {\r\n    return;\r\n  }\r\n\r\n  const tval = target[key];\r\n  const sval = source[key];\r\n\r\n  if (isObject(tval) && isObject(sval)) {\r\n    mergeIf(tval, sval);\r\n  } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\r\n    target[key] = clone(sval);\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _deprecated(scope: string, value: unknown, previous: string, current: string) {\r\n  if (value !== undefined) {\r\n    console.warn(scope + ': \"' + previous +\r\n      '\" is deprecated. Please use \"' + current + '\" instead');\r\n  }\r\n}\r\n\r\n// resolveObjectKey resolver cache\r\nconst keyResolvers = {\r\n  // Chart.helpers.core resolveObjectKey should resolve empty key to root object\r\n  '': v => v,\r\n  // default resolvers\r\n  x: o => o.x,\r\n  y: o => o.y\r\n};\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _splitKey(key: string) {\r\n  const parts = key.split('.');\r\n  const keys: string[] = [];\r\n  let tmp = '';\r\n  for (const part of parts) {\r\n    tmp += part;\r\n    if (tmp.endsWith('\\\\')) {\r\n      tmp = tmp.slice(0, -1) + '.';\r\n    } else {\r\n      keys.push(tmp);\r\n      tmp = '';\r\n    }\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction _getKeyResolver(key: string) {\r\n  const keys = _splitKey(key);\r\n  return obj => {\r\n    for (const k of keys) {\r\n      if (k === '') {\r\n        // For backward compatibility:\r\n        // Chart.helpers.core resolveObjectKey should break at empty key\r\n        break;\r\n      }\r\n      obj = obj && obj[k];\r\n    }\r\n    return obj;\r\n  };\r\n}\r\n\r\nexport function resolveObjectKey(obj: AnyObject, key: string): AnyObject {\r\n  const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\r\n  return resolver(obj);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _capitalize(str: string) {\r\n  return str.charAt(0).toUpperCase() + str.slice(1);\r\n}\r\n\r\n\r\nexport const defined = (value: unknown) => typeof value !== 'undefined';\r\n\r\nexport const isFunction = (value: unknown): value is (...args: any[]) => any => typeof value === 'function';\r\n\r\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\r\nexport const setsEqual = <T>(a: Set<T>, b: Set<T>) => {\r\n  if (a.size !== b.size) {\r\n    return false;\r\n  }\r\n\r\n  for (const item of a) {\r\n    if (!b.has(item)) {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  return true;\r\n};\r\n\r\n/**\r\n * @param e - The event\r\n * @private\r\n */\r\nexport function _isClickEvent(e: ChartEvent) {\r\n  return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\r\n}\r\n","import type {Point} from '../../types/geometric';\r\nimport {isFinite as isFiniteNumber} from './helpers.core';\r\n\r\n/**\r\n * @alias Chart.helpers.math\r\n * @namespace\r\n */\r\n\r\nexport const PI = Math.PI;\r\nexport const TAU = 2 * PI;\r\nexport const PITAU = TAU + PI;\r\nexport const INFINITY = Number.POSITIVE_INFINITY;\r\nexport const RAD_PER_DEG = PI / 180;\r\nexport const HALF_PI = PI / 2;\r\nexport const QUARTER_PI = PI / 4;\r\nexport const TWO_THIRDS_PI = PI * 2 / 3;\r\n\r\nexport const log10 = Math.log10;\r\nexport const sign = Math.sign;\r\n\r\nexport function almostEquals(x: number, y: number, epsilon: number) {\r\n  return Math.abs(x - y) < epsilon;\r\n}\r\n\r\n/**\r\n * Implementation of the nice number algorithm used in determining where axis labels will go\r\n */\r\nexport function niceNum(range: number) {\r\n  const roundedRange = Math.round(range);\r\n  range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\r\n  const niceRange = Math.pow(10, Math.floor(log10(range)));\r\n  const fraction = range / niceRange;\r\n  const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\r\n  return niceFraction * niceRange;\r\n}\r\n\r\n/**\r\n * Returns an array of factors sorted from 1 to sqrt(value)\r\n * @private\r\n */\r\nexport function _factorize(value: number) {\r\n  const result: number[] = [];\r\n  const sqrt = Math.sqrt(value);\r\n  let i: number;\r\n\r\n  for (i = 1; i < sqrt; i++) {\r\n    if (value % i === 0) {\r\n      result.push(i);\r\n      result.push(value / i);\r\n    }\r\n  }\r\n  if (sqrt === (sqrt | 0)) { // if value is a square number\r\n    result.push(sqrt);\r\n  }\r\n\r\n  result.sort((a, b) => a - b).pop();\r\n  return result;\r\n}\r\n\r\nexport function isNumber(n: unknown): n is number {\r\n  return !isNaN(parseFloat(n as string)) && isFinite(n as number);\r\n}\r\n\r\nexport function almostWhole(x: number, epsilon: number) {\r\n  const rounded = Math.round(x);\r\n  return ((rounded - epsilon) <= x) && ((rounded + epsilon) >= x);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _setMinAndMaxByKey(\r\n  array: Record<string, number>[],\r\n  target: { min: number, max: number },\r\n  property: string\r\n) {\r\n  let i: number, ilen: number, value: number;\r\n\r\n  for (i = 0, ilen = array.length; i < ilen; i++) {\r\n    value = array[i][property];\r\n    if (!isNaN(value)) {\r\n      target.min = Math.min(target.min, value);\r\n      target.max = Math.max(target.max, value);\r\n    }\r\n  }\r\n}\r\n\r\nexport function toRadians(degrees: number) {\r\n  return degrees * (PI / 180);\r\n}\r\n\r\nexport function toDegrees(radians: number) {\r\n  return radians * (180 / PI);\r\n}\r\n\r\n/**\r\n * Returns the number of decimal places\r\n * i.e. the number of digits after the decimal point, of the value of this Number.\r\n * @param x - A number.\r\n * @returns The number of decimal places.\r\n * @private\r\n */\r\nexport function _decimalPlaces(x: number) {\r\n  if (!isFiniteNumber(x)) {\r\n    return;\r\n  }\r\n  let e = 1;\r\n  let p = 0;\r\n  while (Math.round(x * e) / e !== x) {\r\n    e *= 10;\r\n    p++;\r\n  }\r\n  return p;\r\n}\r\n\r\n// Gets the angle from vertical upright to the point about a centre.\r\nexport function getAngleFromPoint(\r\n  centrePoint: Point,\r\n  anglePoint: Point\r\n) {\r\n  const distanceFromXCenter = anglePoint.x - centrePoint.x;\r\n  const distanceFromYCenter = anglePoint.y - centrePoint.y;\r\n  const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\r\n\r\n  let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\r\n\r\n  if (angle < (-0.5 * PI)) {\r\n    angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\r\n  }\r\n\r\n  return {\r\n    angle,\r\n    distance: radialDistanceFromCenter\r\n  };\r\n}\r\n\r\nexport function distanceBetweenPoints(pt1: Point, pt2: Point) {\r\n  return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\r\n}\r\n\r\n/**\r\n * Shortest distance between angles, in either direction.\r\n * @private\r\n */\r\nexport function _angleDiff(a: number, b: number) {\r\n  return (a - b + PITAU) % TAU - PI;\r\n}\r\n\r\n/**\r\n * Normalize angle to be between 0 and 2*PI\r\n * @private\r\n */\r\nexport function _normalizeAngle(a: number) {\r\n  return (a % TAU + TAU) % TAU;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _angleBetween(angle: number, start: number, end: number, sameAngleIsFullCircle?: boolean) {\r\n  const a = _normalizeAngle(angle);\r\n  const s = _normalizeAngle(start);\r\n  const e = _normalizeAngle(end);\r\n  const angleToStart = _normalizeAngle(s - a);\r\n  const angleToEnd = _normalizeAngle(e - a);\r\n  const startToAngle = _normalizeAngle(a - s);\r\n  const endToAngle = _normalizeAngle(a - e);\r\n  return a === s || a === e || (sameAngleIsFullCircle && s === e)\r\n    || (angleToStart > angleToEnd && startToAngle < endToAngle);\r\n}\r\n\r\n/**\r\n * Limit `value` between `min` and `max`\r\n * @param value\r\n * @param min\r\n * @param max\r\n * @private\r\n */\r\nexport function _limitValue(value: number, min: number, max: number) {\r\n  return Math.max(min, Math.min(max, value));\r\n}\r\n\r\n/**\r\n * @param {number} value\r\n * @private\r\n */\r\nexport function _int16Range(value: number) {\r\n  return _limitValue(value, -32768, 32767);\r\n}\r\n\r\n/**\r\n * @param value\r\n * @param start\r\n * @param end\r\n * @param [epsilon]\r\n * @private\r\n */\r\nexport function _isBetween(value: number, start: number, end: number, epsilon = 1e-6) {\r\n  return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\r\n}\r\n","import {_capitalize} from './helpers.core';\r\n\r\n/**\r\n * Binary search\r\n * @param table - the table search. must be sorted!\r\n * @param value - value to find\r\n * @param cmp\r\n * @private\r\n */\r\nexport function _lookup(\r\n  table: number[],\r\n  value: number,\r\n  cmp?: (value: number) => boolean\r\n): {lo: number, hi: number};\r\nexport function _lookup<T>(\r\n  table: T[],\r\n  value: number,\r\n  cmp: (value: number) => boolean\r\n): {lo: number, hi: number};\r\nexport function _lookup(\r\n  table: unknown[],\r\n  value: number,\r\n  cmp?: (value: number) => boolean\r\n) {\r\n  cmp = cmp || ((index) => table[index] < value);\r\n  let hi = table.length - 1;\r\n  let lo = 0;\r\n  let mid: number;\r\n\r\n  while (hi - lo > 1) {\r\n    mid = (lo + hi) >> 1;\r\n    if (cmp(mid)) {\r\n      lo = mid;\r\n    } else {\r\n      hi = mid;\r\n    }\r\n  }\r\n\r\n  return {lo, hi};\r\n}\r\n\r\n/**\r\n * Binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @param last - lookup last index\r\n * @private\r\n */\r\nexport const _lookupByKey = (\r\n  table: Record<string, number>[],\r\n  key: string,\r\n  value: number,\r\n  last?: boolean\r\n) =>\r\n  _lookup(table, value, last\r\n    ? index => {\r\n      const ti = table[index][key];\r\n      return ti < value || ti === value && table[index + 1][key] === value;\r\n    }\r\n    : index => table[index][key] < value);\r\n\r\n/**\r\n * Reverse binary search\r\n * @param table - the table search. must be sorted!\r\n * @param key - property name for the value in each entry\r\n * @param value - value to find\r\n * @private\r\n */\r\nexport const _rlookupByKey = (\r\n  table: Record<string, number>[],\r\n  key: string,\r\n  value: number\r\n) =>\r\n  _lookup(table, value, index => table[index][key] >= value);\r\n\r\n/**\r\n * Return subset of `values` between `min` and `max` inclusive.\r\n * Values are assumed to be in sorted order.\r\n * @param values - sorted array of values\r\n * @param min - min value\r\n * @param max - max value\r\n */\r\nexport function _filterBetween(values: number[], min: number, max: number) {\r\n  let start = 0;\r\n  let end = values.length;\r\n\r\n  while (start < end && values[start] < min) {\r\n    start++;\r\n  }\r\n  while (end > start && values[end - 1] > max) {\r\n    end--;\r\n  }\r\n\r\n  return start > 0 || end < values.length\r\n    ? values.slice(start, end)\r\n    : values;\r\n}\r\n\r\nconst arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'] as const;\r\n\r\nexport interface ArrayListener<T> {\r\n  _onDataPush?(...item: T[]): void;\r\n  _onDataPop?(): void;\r\n  _onDataShift?(): void;\r\n  _onDataSplice?(index: number, deleteCount: number, ...items: T[]): void;\r\n  _onDataUnshift?(...item: T[]): void;\r\n}\r\n\r\n/**\r\n * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\r\n * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\r\n * called on the '_onData*' callbacks (e.g. _onDataPush, etc.) with same arguments.\r\n */\r\nexport function listenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\r\nexport function listenArrayEvents(array, listener) {\r\n  if (array._chartjs) {\r\n    array._chartjs.listeners.push(listener);\r\n    return;\r\n  }\r\n\r\n  Object.defineProperty(array, '_chartjs', {\r\n    configurable: true,\r\n    enumerable: false,\r\n    value: {\r\n      listeners: [listener]\r\n    }\r\n  });\r\n\r\n  arrayEvents.forEach((key) => {\r\n    const method = '_onData' + _capitalize(key);\r\n    const base = array[key];\r\n\r\n    Object.defineProperty(array, key, {\r\n      configurable: true,\r\n      enumerable: false,\r\n      value(...args) {\r\n        const res = base.apply(this, args);\r\n\r\n        array._chartjs.listeners.forEach((object) => {\r\n          if (typeof object[method] === 'function') {\r\n            object[method](...args);\r\n          }\r\n        });\r\n\r\n        return res;\r\n      }\r\n    });\r\n  });\r\n}\r\n\r\n\r\n/**\r\n * Removes the given array event listener and cleanup extra attached properties (such as\r\n * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\r\n */\r\nexport function unlistenArrayEvents<T>(array: T[], listener: ArrayListener<T>): void;\r\nexport function unlistenArrayEvents(array, listener) {\r\n  const stub = array._chartjs;\r\n  if (!stub) {\r\n    return;\r\n  }\r\n\r\n  const listeners = stub.listeners;\r\n  const index = listeners.indexOf(listener);\r\n  if (index !== -1) {\r\n    listeners.splice(index, 1);\r\n  }\r\n\r\n  if (listeners.length > 0) {\r\n    return;\r\n  }\r\n\r\n  arrayEvents.forEach((key) => {\r\n    delete array[key];\r\n  });\r\n\r\n  delete array._chartjs;\r\n}\r\n\r\n/**\r\n * @param items\r\n */\r\nexport function _arrayUnique<T>(items: T[]) {\r\n  const set = new Set<T>();\r\n  let i: number, ilen: number;\r\n\r\n  for (i = 0, ilen = items.length; i < ilen; ++i) {\r\n    set.add(items[i]);\r\n  }\r\n\r\n  if (set.size === ilen) {\r\n    return items;\r\n  }\r\n\r\n  return Array.from(set);\r\n}\r\n","import {type ChartMeta, type PointElement} from '../../types';\r\n\r\nimport {_limitValue} from './helpers.math';\r\nimport {_lookupByKey} from './helpers.collection';\r\n\r\nexport function fontString(pixelSize: number, fontStyle: string, fontFamily: string) {\r\n  return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\r\n}\r\n\r\n/**\r\n* Request animation polyfill\r\n*/\r\nexport const requestAnimFrame = (function() {\r\n  if (typeof window === 'undefined') {\r\n    return function(callback) {\r\n      return callback();\r\n    };\r\n  }\r\n  return window.requestAnimationFrame;\r\n}());\r\n\r\n/**\r\n * Throttles calling `fn` once per animation frame\r\n * Latest arguments are used on the actual call\r\n */\r\nexport function throttled<TArgs extends Array<any>>(\r\n  fn: (...args: TArgs) => void,\r\n  thisArg: any,\r\n) {\r\n  let ticking = false;\r\n\r\n  return function(...args: TArgs) {\r\n    if (!ticking) {\r\n      ticking = true;\r\n      requestAnimFrame.call(window, () => {\r\n        ticking = false;\r\n        fn.apply(thisArg, args);\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Debounces calling `fn` for `delay` ms\r\n */\r\nexport function debounce<TArgs extends Array<any>>(fn: (...args: TArgs) => void, delay: number) {\r\n  let timeout;\r\n  return function(...args: TArgs) {\r\n    if (delay) {\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(fn, delay, args);\r\n    } else {\r\n      fn.apply<any, TArgs, void>(this, args);\r\n    }\r\n    return delay;\r\n  };\r\n}\r\n\r\n/**\r\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\r\n * @private\r\n */\r\nexport const _toLeftRightCenter = (align: 'start' | 'end' | 'center') => align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\r\n\r\n/**\r\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\r\n * @private\r\n */\r\nexport const _alignStartEnd = (align: 'start' | 'end' | 'center', start: number, end: number) => align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\r\n\r\n/**\r\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\r\n * @private\r\n */\r\nexport const _textX = (align: 'left' | 'right' | 'center', left: number, right: number, rtl: boolean) => {\r\n  const check = rtl ? 'left' : 'right';\r\n  return align === check ? right : align === 'center' ? (left + right) / 2 : left;\r\n};\r\n\r\n/**\r\n * Return start and count of visible points.\r\n * @private\r\n */\r\nexport function _getStartAndCountOfVisiblePoints(meta: ChartMeta<'line' | 'scatter'>, points: PointElement[], animationsDisabled: boolean) {\r\n  const pointCount = points.length;\r\n\r\n  let start = 0;\r\n  let count = pointCount;\r\n\r\n  if (meta._sorted) {\r\n    const {iScale, _parsed} = meta;\r\n    const axis = iScale.axis;\r\n    const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\r\n\r\n    if (minDefined) {\r\n      start = _limitValue(Math.min(\r\n        // @ts-expect-error Need to type _parsed\r\n        _lookupByKey(_parsed, iScale.axis, min).lo,\r\n        // @ts-expect-error Need to fix types on _lookupByKey\r\n        animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo),\r\n      0, pointCount - 1);\r\n    }\r\n    if (maxDefined) {\r\n      count = _limitValue(Math.max(\r\n        // @ts-expect-error Need to type _parsed\r\n        _lookupByKey(_parsed, iScale.axis, max, true).hi + 1,\r\n        // @ts-expect-error Need to fix types on _lookupByKey\r\n        animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1),\r\n      start, pointCount) - start;\r\n    } else {\r\n      count = pointCount - start;\r\n    }\r\n  }\r\n\r\n  return {start, count};\r\n}\r\n\r\n/**\r\n * Checks if the scale ranges have changed.\r\n * @param {object} meta - dataset meta.\r\n * @returns {boolean}\r\n * @private\r\n */\r\nexport function _scaleRangesChanged(meta) {\r\n  const {xScale, yScale, _scaleRanges} = meta;\r\n  const newRanges = {\r\n    xmin: xScale.min,\r\n    xmax: xScale.max,\r\n    ymin: yScale.min,\r\n    ymax: yScale.max\r\n  };\r\n  if (!_scaleRanges) {\r\n    meta._scaleRanges = newRanges;\r\n    return true;\r\n  }\r\n  const changed = _scaleRanges.xmin !== xScale.min\r\n\t\t|| _scaleRanges.xmax !== xScale.max\r\n\t\t|| _scaleRanges.ymin !== yScale.min\r\n\t\t|| _scaleRanges.ymax !== yScale.max;\r\n\r\n  Object.assign(_scaleRanges, newRanges);\r\n  return changed;\r\n}\r\n","import {PI, TAU, HALF_PI} from './helpers.math';\r\n\r\nconst atEdge = (t: number) => t === 0 || t === 1;\r\nconst elasticIn = (t: number, s: number, p: number) => -(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\r\nconst elasticOut = (t: number, s: number, p: number) => Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\r\n\r\n/**\r\n * Easing functions adapted from Robert Penner's easing equations.\r\n * @namespace Chart.helpers.easing.effects\r\n * @see http://www.robertpenner.com/easing/\r\n */\r\nconst effects = {\r\n  linear: (t: number) => t,\r\n\r\n  easeInQuad: (t: number) => t * t,\r\n\r\n  easeOutQuad: (t: number) => -t * (t - 2),\r\n\r\n  easeInOutQuad: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t\r\n    : -0.5 * ((--t) * (t - 2) - 1),\r\n\r\n  easeInCubic: (t: number) => t * t * t,\r\n\r\n  easeOutCubic: (t: number) => (t -= 1) * t * t + 1,\r\n\r\n  easeInOutCubic: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t + 2),\r\n\r\n  easeInQuart: (t: number) => t * t * t * t,\r\n\r\n  easeOutQuart: (t: number) => -((t -= 1) * t * t * t - 1),\r\n\r\n  easeInOutQuart: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t\r\n    : -0.5 * ((t -= 2) * t * t * t - 2),\r\n\r\n  easeInQuint: (t: number) => t * t * t * t * t,\r\n\r\n  easeOutQuint: (t: number) => (t -= 1) * t * t * t * t + 1,\r\n\r\n  easeInOutQuint: (t: number) => ((t /= 0.5) < 1)\r\n    ? 0.5 * t * t * t * t * t\r\n    : 0.5 * ((t -= 2) * t * t * t * t + 2),\r\n\r\n  easeInSine: (t: number) => -Math.cos(t * HALF_PI) + 1,\r\n\r\n  easeOutSine: (t: number) => Math.sin(t * HALF_PI),\r\n\r\n  easeInOutSine: (t: number) => -0.5 * (Math.cos(PI * t) - 1),\r\n\r\n  easeInExpo: (t: number) => (t === 0) ? 0 : Math.pow(2, 10 * (t - 1)),\r\n\r\n  easeOutExpo: (t: number) => (t === 1) ? 1 : -Math.pow(2, -10 * t) + 1,\r\n\r\n  easeInOutExpo: (t: number) => atEdge(t) ? t : t < 0.5\r\n    ? 0.5 * Math.pow(2, 10 * (t * 2 - 1))\r\n    : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\r\n\r\n  easeInCirc: (t: number) => (t >= 1) ? t : -(Math.sqrt(1 - t * t) - 1),\r\n\r\n  easeOutCirc: (t: number) => Math.sqrt(1 - (t -= 1) * t),\r\n\r\n  easeInOutCirc: (t: number) => ((t /= 0.5) < 1)\r\n    ? -0.5 * (Math.sqrt(1 - t * t) - 1)\r\n    : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\r\n\r\n  easeInElastic: (t: number) => atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\r\n\r\n  easeOutElastic: (t: number) => atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\r\n\r\n  easeInOutElastic(t: number) {\r\n    const s = 0.1125;\r\n    const p = 0.45;\r\n    return atEdge(t) ? t :\r\n      t < 0.5\r\n        ? 0.5 * elasticIn(t * 2, s, p)\r\n        : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\r\n  },\r\n\r\n  easeInBack(t: number) {\r\n    const s = 1.70158;\r\n    return t * t * ((s + 1) * t - s);\r\n  },\r\n\r\n  easeOutBack(t: number) {\r\n    const s = 1.70158;\r\n    return (t -= 1) * t * ((s + 1) * t + s) + 1;\r\n  },\r\n\r\n  easeInOutBack(t: number) {\r\n    let s = 1.70158;\r\n    if ((t /= 0.5) < 1) {\r\n      return 0.5 * (t * t * (((s *= (1.525)) + 1) * t - s));\r\n    }\r\n    return 0.5 * ((t -= 2) * t * (((s *= (1.525)) + 1) * t + s) + 2);\r\n  },\r\n\r\n  easeInBounce: (t: number) => 1 - effects.easeOutBounce(1 - t),\r\n\r\n  easeOutBounce(t: number) {\r\n    const m = 7.5625;\r\n    const d = 2.75;\r\n    if (t < (1 / d)) {\r\n      return m * t * t;\r\n    }\r\n    if (t < (2 / d)) {\r\n      return m * (t -= (1.5 / d)) * t + 0.75;\r\n    }\r\n    if (t < (2.5 / d)) {\r\n      return m * (t -= (2.25 / d)) * t + 0.9375;\r\n    }\r\n    return m * (t -= (2.625 / d)) * t + 0.984375;\r\n  },\r\n\r\n  easeInOutBounce: (t: number) => (t < 0.5)\r\n    ? effects.easeInBounce(t * 2) * 0.5\r\n    : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5,\r\n} as const;\r\n\r\nexport type EasingFunction = keyof typeof effects\r\n\r\nexport default effects;\r\n","/*!\n * @kurkle/color v0.2.1\n * https://github.com/kurkle/color#readme\n * (c) 2022 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","import colorLib, {Color} from '@kurkle/color';\r\n\r\nexport function isPatternOrGradient(value: unknown): value is CanvasPattern | CanvasGradient {\r\n  if (value && typeof value === 'object') {\r\n    const type = value.toString();\r\n    return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\r\n  }\r\n\r\n  return false;\r\n}\r\n\r\nexport function color(value: CanvasGradient): CanvasGradient;\r\nexport function color(value: CanvasPattern): CanvasPattern;\r\nexport function color(\r\n  value:\r\n  | string\r\n  | { r: number; g: number; b: number; a: number }\r\n  | [number, number, number]\r\n  | [number, number, number, number]\r\n): Color;\r\nexport function color(value) {\r\n  return isPatternOrGradient(value) ? value : colorLib(value);\r\n}\r\n\r\nexport function getHoverColor(value: CanvasGradient): CanvasGradient;\r\nexport function getHoverColor(value: CanvasPattern): CanvasPattern;\r\nexport function getHoverColor(value: string): string;\r\nexport function getHoverColor(value) {\r\n  return isPatternOrGradient(value)\r\n    ? value\r\n    : colorLib(value).saturate(0.5).darken(0.1).hexString();\r\n}\r\n","const numbers = ['x', 'y', 'borderWidth', 'radius', 'tension'];\r\nconst colors = ['color', 'borderColor', 'backgroundColor'];\r\n\r\nexport function applyAnimationsDefaults(defaults) {\r\n  defaults.set('animation', {\r\n    delay: undefined,\r\n    duration: 1000,\r\n    easing: 'easeOutQuart',\r\n    fn: undefined,\r\n    from: undefined,\r\n    loop: undefined,\r\n    to: undefined,\r\n    type: undefined,\r\n  });\r\n\r\n  defaults.describe('animation', {\r\n    _fallback: false,\r\n    _indexable: false,\r\n    _scriptable: (name) => name !== 'onProgress' && name !== 'onComplete' && name !== 'fn',\r\n  });\r\n\r\n  defaults.set('animations', {\r\n    colors: {\r\n      type: 'color',\r\n      properties: colors\r\n    },\r\n    numbers: {\r\n      type: 'number',\r\n      properties: numbers\r\n    },\r\n  });\r\n\r\n  defaults.describe('animations', {\r\n    _fallback: 'animation',\r\n  });\r\n\r\n  defaults.set('transitions', {\r\n    active: {\r\n      animation: {\r\n        duration: 400\r\n      }\r\n    },\r\n    resize: {\r\n      animation: {\r\n        duration: 0\r\n      }\r\n    },\r\n    show: {\r\n      animations: {\r\n        colors: {\r\n          from: 'transparent'\r\n        },\r\n        visible: {\r\n          type: 'boolean',\r\n          duration: 0 // show immediately\r\n        },\r\n      }\r\n    },\r\n    hide: {\r\n      animations: {\r\n        colors: {\r\n          to: 'transparent'\r\n        },\r\n        visible: {\r\n          type: 'boolean',\r\n          easing: 'linear',\r\n          fn: v => v | 0 // for keeping the dataset visible all the way through the animation\r\n        },\r\n      }\r\n    }\r\n  });\r\n}\r\n","export function applyLayoutsDefaults(defaults) {\r\n  defaults.set('layout', {\r\n    autoPadding: true,\r\n    padding: {\r\n      top: 0,\r\n      right: 0,\r\n      bottom: 0,\r\n      left: 0\r\n    }\r\n  });\r\n}\r\n","\r\nconst intlCache = new Map<string, Intl.NumberFormat>();\r\n\r\nfunction getNumberFormat(locale: string, options?: Intl.NumberFormatOptions) {\r\n  options = options || {};\r\n  const cacheKey = locale + JSON.stringify(options);\r\n  let formatter = intlCache.get(cacheKey);\r\n  if (!formatter) {\r\n    formatter = new Intl.NumberFormat(locale, options);\r\n    intlCache.set(cacheKey, formatter);\r\n  }\r\n  return formatter;\r\n}\r\n\r\nexport function formatNumber(num: number, locale: string, options?: Intl.NumberFormatOptions) {\r\n  return getNumberFormat(locale, options).format(num);\r\n}\r\n","import {isArray} from '../helpers/helpers.core';\r\nimport {formatNumber} from '../helpers/helpers.intl';\r\nimport {log10} from '../helpers/helpers.math';\r\n\r\n/**\r\n * Namespace to hold formatters for different types of ticks\r\n * @namespace Chart.Ticks.formatters\r\n */\r\nconst formatters = {\r\n  /**\r\n   * Formatter for value labels\r\n   * @method Chart.Ticks.formatters.values\r\n   * @param value the value to display\r\n   * @return {string|string[]} the label to display\r\n   */\r\n  values(value) {\r\n    return isArray(value) ? /** @type {string[]} */ (value) : '' + value;\r\n  },\r\n\r\n  /**\r\n   * Formatter for numeric ticks\r\n   * @method Chart.Ticks.formatters.numeric\r\n   * @param tickValue {number} the value to be formatted\r\n   * @param index {number} the position of the tickValue parameter in the ticks array\r\n   * @param ticks {object[]} the list of ticks being converted\r\n   * @return {string} string representation of the tickValue parameter\r\n   */\r\n  numeric(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0'; // never show decimal places for 0\r\n    }\r\n\r\n    const locale = this.chart.options.locale;\r\n    let notation;\r\n    let delta = tickValue; // This is used when there are less than 2 ticks as the tick interval.\r\n\r\n    if (ticks.length > 1) {\r\n      // all ticks are small or there huge numbers; use scientific notation\r\n      const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\r\n      if (maxTick < 1e-4 || maxTick > 1e+15) {\r\n        notation = 'scientific';\r\n      }\r\n\r\n      delta = calculateDelta(tickValue, ticks);\r\n    }\r\n\r\n    const logDelta = log10(Math.abs(delta));\r\n    const numDecimal = Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0); // toFixed has a max of 20 decimal places\r\n\r\n    const options = {notation, minimumFractionDigits: numDecimal, maximumFractionDigits: numDecimal};\r\n    Object.assign(options, this.options.ticks.format);\r\n\r\n    return formatNumber(tickValue, locale, options);\r\n  },\r\n\r\n\r\n  /**\r\n   * Formatter for logarithmic ticks\r\n   * @method Chart.Ticks.formatters.logarithmic\r\n   * @param tickValue {number} the value to be formatted\r\n   * @param index {number} the position of the tickValue parameter in the ticks array\r\n   * @param ticks {object[]} the list of ticks being converted\r\n   * @return {string} string representation of the tickValue parameter\r\n   */\r\n  logarithmic(tickValue, index, ticks) {\r\n    if (tickValue === 0) {\r\n      return '0';\r\n    }\r\n    const remain = ticks[index].significand || (tickValue / (Math.pow(10, Math.floor(log10(tickValue)))));\r\n    if ([1, 2, 3, 5, 10, 15].includes(remain) || index > 0.8 * ticks.length) {\r\n      return formatters.numeric.call(this, tickValue, index, ticks);\r\n    }\r\n    return '';\r\n  }\r\n\r\n};\r\n\r\n\r\nfunction calculateDelta(tickValue, ticks) {\r\n  // Figure out how many digits to show\r\n  // The space between the first two ticks might be smaller than normal spacing\r\n  let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\r\n\r\n  // If we have a number like 2.5 as the delta, figure out how many decimal places we need\r\n  if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\r\n    // not an integer\r\n    delta = tickValue - Math.floor(tickValue);\r\n  }\r\n  return delta;\r\n}\r\n\r\n/**\r\n * Namespace to hold static tick generation functions\r\n * @namespace Chart.Ticks\r\n */\r\nexport default {formatters};\r\n","import Ticks from './core.ticks';\r\n\r\nexport function applyScaleDefaults(defaults) {\r\n  defaults.set('scale', {\r\n    display: true,\r\n    offset: false,\r\n    reverse: false,\r\n    beginAtZero: false,\r\n\r\n    /**\r\n     * Scale boundary strategy (bypassed by min/max time options)\r\n     * - `data`: make sure data are fully visible, ticks outside are removed\r\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\r\n     * @see https://github.com/chartjs/Chart.js/pull/4556\r\n     * @since 3.0.0\r\n     */\r\n    bounds: 'ticks',\r\n\r\n    /**\r\n     * Addition grace added to max and reduced from min data value.\r\n     * @since 3.0.0\r\n     */\r\n    grace: 0,\r\n\r\n    // grid line settings\r\n    grid: {\r\n      display: true,\r\n      lineWidth: 1,\r\n      drawOnChartArea: true,\r\n      drawTicks: true,\r\n      tickLength: 8,\r\n      tickWidth: (_ctx, options) => options.lineWidth,\r\n      tickColor: (_ctx, options) => options.color,\r\n      offset: false,\r\n    },\r\n\r\n    border: {\r\n      display: true,\r\n      dash: [],\r\n      dashOffset: 0.0,\r\n      width: 1\r\n    },\r\n\r\n    // scale title\r\n    title: {\r\n      // display property\r\n      display: false,\r\n\r\n      // actual label\r\n      text: '',\r\n\r\n      // top/bottom padding\r\n      padding: {\r\n        top: 4,\r\n        bottom: 4\r\n      }\r\n    },\r\n\r\n    // label settings\r\n    ticks: {\r\n      minRotation: 0,\r\n      maxRotation: 50,\r\n      mirror: false,\r\n      textStrokeWidth: 0,\r\n      textStrokeColor: '',\r\n      padding: 3,\r\n      display: true,\r\n      autoSkip: true,\r\n      autoSkipPadding: 3,\r\n      labelOffset: 0,\r\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\r\n      callback: Ticks.formatters.values,\r\n      minor: {},\r\n      major: {},\r\n      align: 'center',\r\n      crossAlign: 'near',\r\n\r\n      showLabelBackdrop: false,\r\n      backdropColor: 'rgba(255, 255, 255, 0.75)',\r\n      backdropPadding: 2,\r\n    }\r\n  });\r\n\r\n  defaults.route('scale.ticks', 'color', '', 'color');\r\n  defaults.route('scale.grid', 'color', '', 'borderColor');\r\n  defaults.route('scale.border', 'color', '', 'borderColor');\r\n  defaults.route('scale.title', 'color', '', 'color');\r\n\r\n  defaults.describe('scale', {\r\n    _fallback: false,\r\n    _scriptable: (name) => !name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\r\n    _indexable: (name) => name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash',\r\n  });\r\n\r\n  defaults.describe('scales', {\r\n    _fallback: 'scale',\r\n  });\r\n\r\n  defaults.describe('scale.ticks', {\r\n    _scriptable: (name) => name !== 'backdropPadding' && name !== 'callback',\r\n    _indexable: (name) => name !== 'backdropPadding',\r\n  });\r\n}\r\n","import {getHoverColor} from '../helpers/helpers.color';\r\nimport {isObject, merge, valueOrDefault} from '../helpers/helpers.core';\r\nimport {applyAnimationsDefaults} from './core.animations.defaults';\r\nimport {applyLayoutsDefaults} from './core.layouts.defaults';\r\nimport {applyScaleDefaults} from './core.scale.defaults';\r\n\r\nexport const overrides = Object.create(null);\r\nexport const descriptors = Object.create(null);\r\n\r\n/**\r\n * @param {object} node\r\n * @param {string} key\r\n * @return {object}\r\n */\r\nfunction getScope(node, key) {\r\n  if (!key) {\r\n    return node;\r\n  }\r\n  const keys = key.split('.');\r\n  for (let i = 0, n = keys.length; i < n; ++i) {\r\n    const k = keys[i];\r\n    node = node[k] || (node[k] = Object.create(null));\r\n  }\r\n  return node;\r\n}\r\n\r\nfunction set(root, scope, values) {\r\n  if (typeof scope === 'string') {\r\n    return merge(getScope(root, scope), values);\r\n  }\r\n  return merge(getScope(root, ''), scope);\r\n}\r\n\r\n/**\r\n * Please use the module's default export which provides a singleton instance\r\n * Note: class is exported for typedoc\r\n */\r\nexport class Defaults {\r\n  constructor(_descriptors, _appliers) {\r\n    this.animation = undefined;\r\n    this.backgroundColor = 'rgba(0,0,0,0.1)';\r\n    this.borderColor = 'rgba(0,0,0,0.1)';\r\n    this.color = '#666';\r\n    this.datasets = {};\r\n    this.devicePixelRatio = (context) => context.chart.platform.getDevicePixelRatio();\r\n    this.elements = {};\r\n    this.events = [\r\n      'mousemove',\r\n      'mouseout',\r\n      'click',\r\n      'touchstart',\r\n      'touchmove'\r\n    ];\r\n    this.font = {\r\n      family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\r\n      size: 12,\r\n      style: 'normal',\r\n      lineHeight: 1.2,\r\n      weight: null\r\n    };\r\n    this.hover = {};\r\n    this.hoverBackgroundColor = (ctx, options) => getHoverColor(options.backgroundColor);\r\n    this.hoverBorderColor = (ctx, options) => getHoverColor(options.borderColor);\r\n    this.hoverColor = (ctx, options) => getHoverColor(options.color);\r\n    this.indexAxis = 'x';\r\n    this.interaction = {\r\n      mode: 'nearest',\r\n      intersect: true,\r\n      includeInvisible: false\r\n    };\r\n    this.maintainAspectRatio = true;\r\n    this.onHover = null;\r\n    this.onClick = null;\r\n    this.parsing = true;\r\n    this.plugins = {};\r\n    this.responsive = true;\r\n    this.scale = undefined;\r\n    this.scales = {};\r\n    this.showLine = true;\r\n    this.drawActiveElementsOnTop = true;\r\n\r\n    this.describe(_descriptors);\r\n    this.apply(_appliers);\r\n  }\r\n\r\n  /**\r\n\t * @param {string|object} scope\r\n\t * @param {object} [values]\r\n\t */\r\n  set(scope, values) {\r\n    return set(this, scope, values);\r\n  }\r\n\r\n  /**\r\n\t * @param {string} scope\r\n\t */\r\n  get(scope) {\r\n    return getScope(this, scope);\r\n  }\r\n\r\n  /**\r\n\t * @param {string|object} scope\r\n\t * @param {object} [values]\r\n\t */\r\n  describe(scope, values) {\r\n    return set(descriptors, scope, values);\r\n  }\r\n\r\n  override(scope, values) {\r\n    return set(overrides, scope, values);\r\n  }\r\n\r\n  /**\r\n\t * Routes the named defaults to fallback to another scope/name.\r\n\t * This routing is useful when those target values, like defaults.color, are changed runtime.\r\n\t * If the values would be copied, the runtime change would not take effect. By routing, the\r\n\t * fallback is evaluated at each access, so its always up to date.\r\n\t *\r\n\t * Example:\r\n\t *\r\n\t * \tdefaults.route('elements.arc', 'backgroundColor', '', 'color')\r\n\t *   - reads the backgroundColor from defaults.color when undefined locally\r\n\t *\r\n\t * @param {string} scope Scope this route applies to.\r\n\t * @param {string} name Property name that should be routed to different namespace when not defined here.\r\n\t * @param {string} targetScope The namespace where those properties should be routed to.\r\n\t * Empty string ('') is the root of defaults.\r\n\t * @param {string} targetName The target name in the target scope the property should be routed to.\r\n\t */\r\n  route(scope, name, targetScope, targetName) {\r\n    const scopeObject = getScope(this, scope);\r\n    const targetScopeObject = getScope(this, targetScope);\r\n    const privateName = '_' + name;\r\n\r\n    Object.defineProperties(scopeObject, {\r\n      // A private property is defined to hold the actual value, when this property is set in its scope (set in the setter)\r\n      [privateName]: {\r\n        value: scopeObject[name],\r\n        writable: true\r\n      },\r\n      // The actual property is defined as getter/setter so we can do the routing when value is not locally set.\r\n      [name]: {\r\n        enumerable: true,\r\n        get() {\r\n          const local = this[privateName];\r\n          const target = targetScopeObject[targetName];\r\n          if (isObject(local)) {\r\n            return Object.assign({}, target, local);\r\n          }\r\n          return valueOrDefault(local, target);\r\n        },\r\n        set(value) {\r\n          this[privateName] = value;\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  apply(appliers) {\r\n    appliers.forEach((apply) => apply(this));\r\n  }\r\n}\r\n\r\n// singleton instance\r\nexport default /* #__PURE__ */ new Defaults({\r\n  _scriptable: (name) => !name.startsWith('on'),\r\n  _indexable: (name) => name !== 'events',\r\n  hover: {\r\n    _fallback: 'interaction'\r\n  },\r\n  interaction: {\r\n    _scriptable: false,\r\n    _indexable: false,\r\n  }\r\n}, [applyAnimationsDefaults, applyLayoutsDefaults, applyScaleDefaults]);\r\n","import {isArray, isNullOrUndef} from './helpers.core';\r\nimport {PI, TAU, HALF_PI, QUARTER_PI, TWO_THIRDS_PI, RAD_PER_DEG} from './helpers.math';\r\n\r\n/**\r\n * Note: typedefs are auto-exported, so use a made-up `canvas` namespace where\r\n * necessary to avoid duplicates with `export * from './helpers`; see\r\n * https://github.com/microsoft/TypeScript/issues/46011\r\n * @typedef { import(\"../core/core.controller\").default } canvas.Chart\r\n * @typedef { import(\"../../types\").Point } Point\r\n */\r\n\r\n/**\r\n * @namespace Chart.helpers.canvas\r\n */\r\n\r\n/**\r\n * Converts the given font object into a CSS font string.\r\n * @param {object} font - A font object.\r\n * @return {string|null} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\r\n * @private\r\n */\r\nexport function toFontString(font) {\r\n  if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\r\n    return null;\r\n  }\r\n\r\n  return (font.style ? font.style + ' ' : '')\r\n\t\t+ (font.weight ? font.weight + ' ' : '')\r\n\t\t+ font.size + 'px '\r\n\t\t+ font.family;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _measureText(ctx, data, gc, longest, string) {\r\n  let textWidth = data[string];\r\n  if (!textWidth) {\r\n    textWidth = data[string] = ctx.measureText(string).width;\r\n    gc.push(string);\r\n  }\r\n  if (textWidth > longest) {\r\n    longest = textWidth;\r\n  }\r\n  return longest;\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _longestText(ctx, font, arrayOfThings, cache) {\r\n  cache = cache || {};\r\n  let data = cache.data = cache.data || {};\r\n  let gc = cache.garbageCollect = cache.garbageCollect || [];\r\n\r\n  if (cache.font !== font) {\r\n    data = cache.data = {};\r\n    gc = cache.garbageCollect = [];\r\n    cache.font = font;\r\n  }\r\n\r\n  ctx.save();\r\n\r\n  ctx.font = font;\r\n  let longest = 0;\r\n  const ilen = arrayOfThings.length;\r\n  let i, j, jlen, thing, nestedThing;\r\n  for (i = 0; i < ilen; i++) {\r\n    thing = arrayOfThings[i];\r\n\r\n    // Undefined strings and arrays should not be measured\r\n    if (thing !== undefined && thing !== null && isArray(thing) !== true) {\r\n      longest = _measureText(ctx, data, gc, longest, thing);\r\n    } else if (isArray(thing)) {\r\n      // if it is an array lets measure each element\r\n      // to do maybe simplify this function a bit so we can do this more recursively?\r\n      for (j = 0, jlen = thing.length; j < jlen; j++) {\r\n        nestedThing = thing[j];\r\n        // Undefined strings and arrays should not be measured\r\n        if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\r\n          longest = _measureText(ctx, data, gc, longest, nestedThing);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  ctx.restore();\r\n\r\n  const gcLen = gc.length / 2;\r\n  if (gcLen > arrayOfThings.length) {\r\n    for (i = 0; i < gcLen; i++) {\r\n      delete data[gc[i]];\r\n    }\r\n    gc.splice(0, gcLen);\r\n  }\r\n  return longest;\r\n}\r\n\r\n/**\r\n * Returns the aligned pixel value to avoid anti-aliasing blur\r\n * @param {canvas.Chart} chart - The chart instance.\r\n * @param {number} pixel - A pixel value.\r\n * @param {number} width - The width of the element.\r\n * @returns {number} The aligned pixel value.\r\n * @private\r\n */\r\nexport function _alignPixel(chart, pixel, width) {\r\n  const devicePixelRatio = chart.currentDevicePixelRatio;\r\n  const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\r\n  return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\r\n}\r\n\r\n/**\r\n * Clears the entire canvas.\r\n * @param {HTMLCanvasElement} canvas\r\n * @param {CanvasRenderingContext2D} [ctx]\r\n */\r\nexport function clearCanvas(canvas, ctx) {\r\n  ctx = ctx || canvas.getContext('2d');\r\n\r\n  ctx.save();\r\n  // canvas.width and canvas.height do not consider the canvas transform,\r\n  // while clearRect does\r\n  ctx.resetTransform();\r\n  ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n  ctx.restore();\r\n}\r\n\r\nexport function drawPoint(ctx, options, x, y) {\r\n  drawPointLegend(ctx, options, x, y, null);\r\n}\r\n\r\nexport function drawPointLegend(ctx, options, x, y, w) {\r\n  let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\r\n  const style = options.pointStyle;\r\n  const rotation = options.rotation;\r\n  const radius = options.radius;\r\n  let rad = (rotation || 0) * RAD_PER_DEG;\r\n\r\n  if (style && typeof style === 'object') {\r\n    type = style.toString();\r\n    if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\r\n      ctx.save();\r\n      ctx.translate(x, y);\r\n      ctx.rotate(rad);\r\n      ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\r\n      ctx.restore();\r\n      return;\r\n    }\r\n  }\r\n\r\n  if (isNaN(radius) || radius <= 0) {\r\n    return;\r\n  }\r\n\r\n  ctx.beginPath();\r\n\r\n  switch (style) {\r\n  // Default includes circle\r\n  default:\r\n    if (w) {\r\n      ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\r\n    } else {\r\n      ctx.arc(x, y, radius, 0, TAU);\r\n    }\r\n    ctx.closePath();\r\n    break;\r\n  case 'triangle':\r\n    width = w ? w / 2 : radius;\r\n    ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n    rad += TWO_THIRDS_PI;\r\n    ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rectRounded':\r\n    // NOTE: the rounded rect implementation changed to use `arc` instead of\r\n    // `quadraticCurveTo` since it generates better results when rect is\r\n    // almost a circle. 0.516 (instead of 0.5) produces results with visually\r\n    // closer proportion to the previous impl and it is inscribed in the\r\n    // circle with `radius`. For more details, see the following PRs:\r\n    // https://github.com/chartjs/Chart.js/issues/5597\r\n    // https://github.com/chartjs/Chart.js/issues/5858\r\n    cornerRadius = radius * 0.516;\r\n    size = radius - cornerRadius;\r\n    xOffset = Math.cos(rad + QUARTER_PI) * size;\r\n    xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n    yOffset = Math.sin(rad + QUARTER_PI) * size;\r\n    yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\r\n    ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\r\n    ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\r\n    ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\r\n    ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\r\n    ctx.closePath();\r\n    break;\r\n  case 'rect':\r\n    if (!rotation) {\r\n      size = Math.SQRT1_2 * radius;\r\n      width = w ? w / 2 : size;\r\n      ctx.rect(x - width, y - size, 2 * width, 2 * size);\r\n      break;\r\n    }\r\n    rad += QUARTER_PI;\r\n    /* falls through */\r\n  case 'rectRot':\r\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n    ctx.moveTo(x - xOffsetW, y - yOffset);\r\n    ctx.lineTo(x + yOffsetW, y - xOffset);\r\n    ctx.lineTo(x + xOffsetW, y + yOffset);\r\n    ctx.lineTo(x - yOffsetW, y + xOffset);\r\n    ctx.closePath();\r\n    break;\r\n  case 'crossRot':\r\n    rad += QUARTER_PI;\r\n    /* falls through */\r\n  case 'cross':\r\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n    ctx.moveTo(x - xOffsetW, y - yOffset);\r\n    ctx.lineTo(x + xOffsetW, y + yOffset);\r\n    ctx.moveTo(x + yOffsetW, y - xOffset);\r\n    ctx.lineTo(x - yOffsetW, y + xOffset);\r\n    break;\r\n  case 'star':\r\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n    ctx.moveTo(x - xOffsetW, y - yOffset);\r\n    ctx.lineTo(x + xOffsetW, y + yOffset);\r\n    ctx.moveTo(x + yOffsetW, y - xOffset);\r\n    ctx.lineTo(x - yOffsetW, y + xOffset);\r\n    rad += QUARTER_PI;\r\n    xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\r\n    xOffset = Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\r\n    ctx.moveTo(x - xOffsetW, y - yOffset);\r\n    ctx.lineTo(x + xOffsetW, y + yOffset);\r\n    ctx.moveTo(x + yOffsetW, y - xOffset);\r\n    ctx.lineTo(x - yOffsetW, y + xOffset);\r\n    break;\r\n  case 'line':\r\n    xOffset = w ? w / 2 : Math.cos(rad) * radius;\r\n    yOffset = Math.sin(rad) * radius;\r\n    ctx.moveTo(x - xOffset, y - yOffset);\r\n    ctx.lineTo(x + xOffset, y + yOffset);\r\n    break;\r\n  case 'dash':\r\n    ctx.moveTo(x, y);\r\n    ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\r\n    break;\r\n  }\r\n\r\n  ctx.fill();\r\n  if (options.borderWidth > 0) {\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\n/**\r\n * Returns true if the point is inside the rectangle\r\n * @param {Point} point - The point to test\r\n * @param {object} area - The rectangle\r\n * @param {number} [margin] - allowed margin\r\n * @returns {boolean}\r\n * @private\r\n */\r\nexport function _isPointInArea(point, area, margin) {\r\n  margin = margin || 0.5; // margin - default is to match rounded decimals\r\n\r\n  return !area || (point && point.x > area.left - margin && point.x < area.right + margin &&\r\n\t\tpoint.y > area.top - margin && point.y < area.bottom + margin);\r\n}\r\n\r\nexport function clipArea(ctx, area) {\r\n  ctx.save();\r\n  ctx.beginPath();\r\n  ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\r\n  ctx.clip();\r\n}\r\n\r\nexport function unclipArea(ctx) {\r\n  ctx.restore();\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _steppedLineTo(ctx, previous, target, flip, mode) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  if (mode === 'middle') {\r\n    const midpoint = (previous.x + target.x) / 2.0;\r\n    ctx.lineTo(midpoint, previous.y);\r\n    ctx.lineTo(midpoint, target.y);\r\n  } else if (mode === 'after' !== !!flip) {\r\n    ctx.lineTo(previous.x, target.y);\r\n  } else {\r\n    ctx.lineTo(target.x, previous.y);\r\n  }\r\n  ctx.lineTo(target.x, target.y);\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _bezierCurveTo(ctx, previous, target, flip) {\r\n  if (!previous) {\r\n    return ctx.lineTo(target.x, target.y);\r\n  }\r\n  ctx.bezierCurveTo(\r\n    flip ? previous.cp1x : previous.cp2x,\r\n    flip ? previous.cp1y : previous.cp2y,\r\n    flip ? target.cp2x : target.cp1x,\r\n    flip ? target.cp2y : target.cp1y,\r\n    target.x,\r\n    target.y);\r\n}\r\n\r\n/**\r\n * Render text onto the canvas\r\n */\r\nexport function renderText(ctx, text, x, y, font, opts = {}) {\r\n  const lines = isArray(text) ? text : [text];\r\n  const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\r\n  let i, line;\r\n\r\n  ctx.save();\r\n  ctx.font = font.string;\r\n  setRenderOpts(ctx, opts);\r\n\r\n  for (i = 0; i < lines.length; ++i) {\r\n    line = lines[i];\r\n\r\n    if (opts.backdrop) {\r\n      drawBackdrop(ctx, opts.backdrop);\r\n    }\r\n\r\n    if (stroke) {\r\n      if (opts.strokeColor) {\r\n        ctx.strokeStyle = opts.strokeColor;\r\n      }\r\n\r\n      if (!isNullOrUndef(opts.strokeWidth)) {\r\n        ctx.lineWidth = opts.strokeWidth;\r\n      }\r\n\r\n      ctx.strokeText(line, x, y, opts.maxWidth);\r\n    }\r\n\r\n    ctx.fillText(line, x, y, opts.maxWidth);\r\n    decorateText(ctx, x, y, line, opts);\r\n\r\n    y += font.lineHeight;\r\n  }\r\n\r\n  ctx.restore();\r\n}\r\n\r\nfunction setRenderOpts(ctx, opts) {\r\n  if (opts.translation) {\r\n    ctx.translate(opts.translation[0], opts.translation[1]);\r\n  }\r\n\r\n  if (!isNullOrUndef(opts.rotation)) {\r\n    ctx.rotate(opts.rotation);\r\n  }\r\n\r\n  if (opts.color) {\r\n    ctx.fillStyle = opts.color;\r\n  }\r\n\r\n  if (opts.textAlign) {\r\n    ctx.textAlign = opts.textAlign;\r\n  }\r\n\r\n  if (opts.textBaseline) {\r\n    ctx.textBaseline = opts.textBaseline;\r\n  }\r\n}\r\n\r\nfunction decorateText(ctx, x, y, line, opts) {\r\n  if (opts.strikethrough || opts.underline) {\r\n    /**\r\n     * Now that IE11 support has been dropped, we can use more\r\n     * of the TextMetrics object. The actual bounding boxes\r\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\r\n     * can be safely used.\r\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\r\n     */\r\n    const metrics = ctx.measureText(line);\r\n    const left = x - metrics.actualBoundingBoxLeft;\r\n    const right = x + metrics.actualBoundingBoxRight;\r\n    const top = y - metrics.actualBoundingBoxAscent;\r\n    const bottom = y + metrics.actualBoundingBoxDescent;\r\n    const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\r\n\r\n    ctx.strokeStyle = ctx.fillStyle;\r\n    ctx.beginPath();\r\n    ctx.lineWidth = opts.decorationWidth || 2;\r\n    ctx.moveTo(left, yDecoration);\r\n    ctx.lineTo(right, yDecoration);\r\n    ctx.stroke();\r\n  }\r\n}\r\n\r\nfunction drawBackdrop(ctx, opts) {\r\n  const oldColor = ctx.fillStyle;\r\n\r\n  ctx.fillStyle = opts.color;\r\n  ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\r\n  ctx.fillStyle = oldColor;\r\n}\r\n\r\n/**\r\n * Add a path of a rectangle with rounded corners to the current sub-path\r\n * @param {CanvasRenderingContext2D} ctx Context\r\n * @param {*} rect Bounding rect\r\n */\r\nexport function addRoundedRectPath(ctx, rect) {\r\n  const {x, y, w, h, radius} = rect;\r\n\r\n  // top left arc\r\n  ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\r\n\r\n  // line from top left to bottom left\r\n  ctx.lineTo(x, y + h - radius.bottomLeft);\r\n\r\n  // bottom left arc\r\n  ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\r\n\r\n  // line from bottom left to bottom right\r\n  ctx.lineTo(x + w - radius.bottomRight, y + h);\r\n\r\n  // bottom right arc\r\n  ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\r\n\r\n  // line from bottom right to top right\r\n  ctx.lineTo(x + w, y + radius.topRight);\r\n\r\n  // top right arc\r\n  ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\r\n\r\n  // line from top right to top left\r\n  ctx.lineTo(x + radius.topLeft, y);\r\n}\r\n","import defaults from '../core/core.defaults';\r\nimport {isArray, isObject, toDimension, valueOrDefault} from './helpers.core';\r\nimport {toFontString} from './helpers.canvas';\r\n\r\nconst LINE_HEIGHT = new RegExp(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\r\nconst FONT_STYLE = new RegExp(/^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/);\r\n\r\n/**\r\n * @alias Chart.helpers.options\r\n * @namespace\r\n */\r\n/**\r\n * Converts the given line height `value` in pixels for a specific font `size`.\r\n * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\r\n * @param {number} size - The font size (in pixels) used to resolve relative `value`.\r\n * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\r\n * @since 2.7.0\r\n */\r\nexport function toLineHeight(value, size) {\r\n  const matches = ('' + value).match(LINE_HEIGHT);\r\n  if (!matches || matches[1] === 'normal') {\r\n    return size * 1.2;\r\n  }\r\n\r\n  value = +matches[2];\r\n\r\n  switch (matches[3]) {\r\n  case 'px':\r\n    return value;\r\n  case '%':\r\n    value /= 100;\r\n    break;\r\n  default:\r\n    break;\r\n  }\r\n\r\n  return size * value;\r\n}\r\n\r\nconst numberOrZero = v => +v || 0;\r\n\r\n/**\r\n * @param {any} value\r\n * @param {string[] | Record<string, string>} props\r\n */\r\nexport function _readValueToProps(value, props) {\r\n  const ret = {};\r\n  const objProps = isObject(props);\r\n  const keys = objProps ? Object.keys(props) : props;\r\n  const read = isObject(value)\r\n    ? objProps\r\n      ? prop => valueOrDefault(value[prop], value[props[prop]])\r\n      : prop => value[prop]\r\n    : () => value;\r\n\r\n  for (const prop of keys) {\r\n    ret[prop] = numberOrZero(read(prop));\r\n  }\r\n  return ret;\r\n}\r\n\r\n/**\r\n * Converts the given value into a TRBL object.\r\n * @param {number|object} value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns {object} The padding values (top, right, bottom, left)\r\n * @since 3.0.0\r\n */\r\nexport function toTRBL(value) {\r\n  return _readValueToProps(value, {top: 'y', right: 'x', bottom: 'y', left: 'x'});\r\n}\r\n\r\n/**\r\n * Converts the given value into a TRBL corners object (similar with css border-radius).\r\n * @param {number|object} value - If a number, set the value to all TRBL corner components,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n * @returns {object} The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\r\n * @since 3.0.0\r\n */\r\nexport function toTRBLCorners(value) {\r\n  return _readValueToProps(value, ['topLeft', 'topRight', 'bottomLeft', 'bottomRight']);\r\n}\r\n\r\n/**\r\n * Converts the given value into a padding object with pre-computed width/height.\r\n * @param {number|object} value - If a number, set the value to all TRBL component,\r\n *  else, if an object, use defined properties and sets undefined ones to 0.\r\n *  x / y are shorthands for same value for left/right and top/bottom.\r\n * @returns {object} The padding values (top, right, bottom, left, width, height)\r\n * @since 2.7.0\r\n */\r\nexport function toPadding(value) {\r\n  const obj = toTRBL(value);\r\n\r\n  obj.width = obj.left + obj.right;\r\n  obj.height = obj.top + obj.bottom;\r\n\r\n  return obj;\r\n}\r\n\r\n\r\n/**\r\n * Parses font options and returns the font object.\r\n * @param {object} options - A object that contains font options to be parsed.\r\n * @param {object} [fallback] - A object that contains fallback font options.\r\n * @return {object} The font object.\r\n * @private\r\n */\r\nexport function toFont(options, fallback) {\r\n  options = options || {};\r\n  fallback = fallback || defaults.font;\r\n\r\n  let size = valueOrDefault(options.size, fallback.size);\r\n\r\n  if (typeof size === 'string') {\r\n    size = parseInt(size, 10);\r\n  }\r\n  let style = valueOrDefault(options.style, fallback.style);\r\n  if (style && !('' + style).match(FONT_STYLE)) {\r\n    console.warn('Invalid font style specified: \"' + style + '\"');\r\n    style = '';\r\n  }\r\n\r\n  const font = {\r\n    family: valueOrDefault(options.family, fallback.family),\r\n    lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\r\n    size,\r\n    style,\r\n    weight: valueOrDefault(options.weight, fallback.weight),\r\n    string: ''\r\n  };\r\n\r\n  font.string = toFontString(font);\r\n  return font;\r\n}\r\n\r\n/**\r\n * Evaluates the given `inputs` sequentially and returns the first defined value.\r\n * @param {Array} inputs - An array of values, falling back to the last value.\r\n * @param {object} [context] - If defined and the current value is a function, the value\r\n * is called with `context` as first argument and the result becomes the new input.\r\n * @param {number} [index] - If defined and the current value is an array, the value\r\n * at `index` become the new input.\r\n * @param {object} [info] - object to return information about resolution in\r\n * @param {boolean} [info.cacheable] - Will be set to `false` if option is not cacheable.\r\n * @since 2.7.0\r\n */\r\nexport function resolve(inputs, context, index, info) {\r\n  let cacheable = true;\r\n  let i, ilen, value;\r\n\r\n  for (i = 0, ilen = inputs.length; i < ilen; ++i) {\r\n    value = inputs[i];\r\n    if (value === undefined) {\r\n      continue;\r\n    }\r\n    if (context !== undefined && typeof value === 'function') {\r\n      value = value(context);\r\n      cacheable = false;\r\n    }\r\n    if (index !== undefined && isArray(value)) {\r\n      value = value[index % value.length];\r\n      cacheable = false;\r\n    }\r\n    if (value !== undefined) {\r\n      if (info && !cacheable) {\r\n        info.cacheable = false;\r\n      }\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @param {{min: number, max: number}} minmax\r\n * @param {number|string} grace\r\n * @param {boolean} beginAtZero\r\n * @private\r\n */\r\nexport function _addGrace(minmax, grace, beginAtZero) {\r\n  const {min, max} = minmax;\r\n  const change = toDimension(grace, (max - min) / 2);\r\n  const keepZero = (value, add) => beginAtZero && value === 0 ? 0 : value + add;\r\n  return {\r\n    min: keepZero(min, -Math.abs(change)),\r\n    max: keepZero(max, change)\r\n  };\r\n}\r\n\r\n/**\r\n * Create a context inheriting parentContext\r\n * @param {object|null} parentContext\r\n * @param {object} context\r\n * @returns {object}\r\n */\r\nexport function createContext(parentContext, context) {\r\n  return Object.assign(Object.create(parentContext), context);\r\n}\r\n","import {defined, isArray, isFunction, isObject, resolveObjectKey, _capitalize} from './helpers.core';\r\n\r\n/**\r\n * Creates a Proxy for resolving raw values for options.\r\n * @param {object[]} scopes - The option scopes to look for values, in resolution order\r\n * @param {string[]} [prefixes] - The prefixes for values, in resolution order.\r\n * @param {object[]} [rootScopes] - The root option scopes\r\n * @param {string|boolean} [fallback] - Parent scopes fallback\r\n * @param {function} [getTarget] - callback for getting the target for changed values\r\n * @returns Proxy\r\n * @private\r\n */\r\nexport function _createResolver(scopes, prefixes = [''], rootScopes = scopes, fallback, getTarget = () => scopes[0]) {\r\n  if (!defined(fallback)) {\r\n    fallback = _resolve('_fallback', scopes);\r\n  }\r\n  const cache = {\r\n    [Symbol.toStringTag]: 'Object',\r\n    _cacheable: true,\r\n    _scopes: scopes,\r\n    _rootScopes: rootScopes,\r\n    _fallback: fallback,\r\n    _getTarget: getTarget,\r\n    override: (scope) => _createResolver([scope, ...scopes], prefixes, rootScopes, fallback),\r\n  };\r\n  return new Proxy(cache, {\r\n    /**\r\n     * A trap for the delete operator.\r\n     */\r\n    deleteProperty(target, prop) {\r\n      delete target[prop]; // remove from cache\r\n      delete target._keys; // remove cached keys\r\n      delete scopes[0][prop]; // remove from top level scope\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * A trap for getting property values.\r\n     */\r\n    get(target, prop) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithPrefixes(prop, prefixes, scopes, target));\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(scopes[0]);\r\n    },\r\n\r\n    /**\r\n     * A trap for the in operator.\r\n     */\r\n    has(target, prop) {\r\n      return getKeysFromAllScopes(target).includes(prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */\r\n    ownKeys(target) {\r\n      return getKeysFromAllScopes(target);\r\n    },\r\n\r\n    /**\r\n     * A trap for setting property values.\r\n     */\r\n    set(target, prop, value) {\r\n      const storage = target._storage || (target._storage = getTarget());\r\n      target[prop] = storage[prop] = value; // set to top level scope + cache\r\n      delete target._keys; // remove cached keys\r\n      return true;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * Returns an Proxy for resolving option values with context.\r\n * @param {object} proxy - The Proxy returned by `_createResolver`\r\n * @param {object} context - Context object for scriptable/indexable options\r\n * @param {object} [subProxy] - The proxy provided for scriptable options\r\n * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults] - Defaults for descriptors\r\n * @private\r\n */\r\nexport function _attachContext(proxy, context, subProxy, descriptorDefaults) {\r\n  const cache = {\r\n    _cacheable: false,\r\n    _proxy: proxy,\r\n    _context: context,\r\n    _subProxy: subProxy,\r\n    _stack: new Set(),\r\n    _descriptors: _descriptors(proxy, descriptorDefaults),\r\n    setContext: (ctx) => _attachContext(proxy, ctx, subProxy, descriptorDefaults),\r\n    override: (scope) => _attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\r\n  };\r\n  return new Proxy(cache, {\r\n    /**\r\n     * A trap for the delete operator.\r\n     */\r\n    deleteProperty(target, prop) {\r\n      delete target[prop]; // remove from cache\r\n      delete proxy[prop]; // remove from proxy\r\n      return true;\r\n    },\r\n\r\n    /**\r\n     * A trap for getting property values.\r\n     */\r\n    get(target, prop, receiver) {\r\n      return _cached(target, prop,\r\n        () => _resolveWithContext(target, prop, receiver));\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyDescriptor.\r\n     * Also used by Object.hasOwnProperty.\r\n     */\r\n    getOwnPropertyDescriptor(target, prop) {\r\n      return target._descriptors.allKeys\r\n        ? Reflect.has(proxy, prop) ? {enumerable: true, configurable: true} : undefined\r\n        : Reflect.getOwnPropertyDescriptor(proxy, prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getPrototypeOf.\r\n     */\r\n    getPrototypeOf() {\r\n      return Reflect.getPrototypeOf(proxy);\r\n    },\r\n\r\n    /**\r\n     * A trap for the in operator.\r\n     */\r\n    has(target, prop) {\r\n      return Reflect.has(proxy, prop);\r\n    },\r\n\r\n    /**\r\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\r\n     */\r\n    ownKeys() {\r\n      return Reflect.ownKeys(proxy);\r\n    },\r\n\r\n    /**\r\n     * A trap for setting property values.\r\n     */\r\n    set(target, prop, value) {\r\n      proxy[prop] = value; // set to proxy\r\n      delete target[prop]; // remove from cache\r\n      return true;\r\n    }\r\n  });\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _descriptors(proxy, defaults = {scriptable: true, indexable: true}) {\r\n  const {_scriptable = defaults.scriptable, _indexable = defaults.indexable, _allKeys = defaults.allKeys} = proxy;\r\n  return {\r\n    allKeys: _allKeys,\r\n    scriptable: _scriptable,\r\n    indexable: _indexable,\r\n    isScriptable: isFunction(_scriptable) ? _scriptable : () => _scriptable,\r\n    isIndexable: isFunction(_indexable) ? _indexable : () => _indexable\r\n  };\r\n}\r\n\r\nconst readKey = (prefix, name) => prefix ? prefix + _capitalize(name) : name;\r\nconst needsSubResolver = (prop, value) => isObject(value) && prop !== 'adapters' &&\r\n  (Object.getPrototypeOf(value) === null || value.constructor === Object);\r\n\r\nfunction _cached(target, prop, resolve) {\r\n  if (Object.prototype.hasOwnProperty.call(target, prop)) {\r\n    return target[prop];\r\n  }\r\n\r\n  const value = resolve();\r\n  // cache the resolved value\r\n  target[prop] = value;\r\n  return value;\r\n}\r\n\r\nfunction _resolveWithContext(target, prop, receiver) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n  let value = _proxy[prop]; // resolve from proxy\r\n\r\n  // resolve with context\r\n  if (isFunction(value) && descriptors.isScriptable(prop)) {\r\n    value = _resolveScriptable(prop, value, target, receiver);\r\n  }\r\n  if (isArray(value) && value.length) {\r\n    value = _resolveArray(prop, value, target, descriptors.isIndexable);\r\n  }\r\n  if (needsSubResolver(prop, value)) {\r\n    // if the resolved value is an object, create a sub resolver for it\r\n    value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction _resolveScriptable(prop, value, target, receiver) {\r\n  const {_proxy, _context, _subProxy, _stack} = target;\r\n  if (_stack.has(prop)) {\r\n    // @ts-ignore\r\n    throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\r\n  }\r\n  _stack.add(prop);\r\n  value = value(_context, _subProxy || receiver);\r\n  _stack.delete(prop);\r\n  if (needsSubResolver(prop, value)) {\r\n    // When scriptable option returns an object, create a resolver on that.\r\n    value = createSubResolver(_proxy._scopes, _proxy, prop, value);\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction _resolveArray(prop, value, target, isIndexable) {\r\n  const {_proxy, _context, _subProxy, _descriptors: descriptors} = target;\r\n\r\n  if (defined(_context.index) && isIndexable(prop)) {\r\n    value = value[_context.index % value.length];\r\n  } else if (isObject(value[0])) {\r\n    // Array of objects, return array or resolvers\r\n    const arr = value;\r\n    const scopes = _proxy._scopes.filter(s => s !== arr);\r\n    value = [];\r\n    for (const item of arr) {\r\n      const resolver = createSubResolver(scopes, _proxy, prop, item);\r\n      value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\r\n    }\r\n  }\r\n  return value;\r\n}\r\n\r\nfunction resolveFallback(fallback, prop, value) {\r\n  return isFunction(fallback) ? fallback(prop, value) : fallback;\r\n}\r\n\r\nconst getScope = (key, parent) => key === true ? parent\r\n  : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\r\n\r\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\r\n  for (const parent of parentScopes) {\r\n    const scope = getScope(key, parent);\r\n    if (scope) {\r\n      set.add(scope);\r\n      const fallback = resolveFallback(scope._fallback, key, value);\r\n      if (defined(fallback) && fallback !== key && fallback !== parentFallback) {\r\n        // When we reach the descriptor that defines a new _fallback, return that.\r\n        // The fallback will resume to that new scope.\r\n        return fallback;\r\n      }\r\n    } else if (scope === false && defined(parentFallback) && key !== parentFallback) {\r\n      // Fallback to `false` results to `false`, when falling back to different key.\r\n      // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\r\n      return null;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\nfunction createSubResolver(parentScopes, resolver, prop, value) {\r\n  const rootScopes = resolver._rootScopes;\r\n  const fallback = resolveFallback(resolver._fallback, prop, value);\r\n  const allScopes = [...parentScopes, ...rootScopes];\r\n  const set = new Set();\r\n  set.add(value);\r\n  let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\r\n  if (key === null) {\r\n    return false;\r\n  }\r\n  if (defined(fallback) && fallback !== prop) {\r\n    key = addScopesFromKey(set, allScopes, fallback, key, value);\r\n    if (key === null) {\r\n      return false;\r\n    }\r\n  }\r\n  return _createResolver(Array.from(set), [''], rootScopes, fallback,\r\n    () => subGetTarget(resolver, prop, value));\r\n}\r\n\r\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\r\n  while (key) {\r\n    key = addScopes(set, allScopes, key, fallback, item);\r\n  }\r\n  return key;\r\n}\r\n\r\nfunction subGetTarget(resolver, prop, value) {\r\n  const parent = resolver._getTarget();\r\n  if (!(prop in parent)) {\r\n    parent[prop] = {};\r\n  }\r\n  const target = parent[prop];\r\n  if (isArray(target) && isObject(value)) {\r\n    // For array of objects, the object is used to store updated values\r\n    return value;\r\n  }\r\n  return target || {};\r\n}\r\n\r\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\r\n  let value;\r\n  for (const prefix of prefixes) {\r\n    value = _resolve(readKey(prefix, prop), scopes);\r\n    if (defined(value)) {\r\n      return needsSubResolver(prop, value)\r\n        ? createSubResolver(scopes, proxy, prop, value)\r\n        : value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction _resolve(key, scopes) {\r\n  for (const scope of scopes) {\r\n    if (!scope) {\r\n      continue;\r\n    }\r\n    const value = scope[key];\r\n    if (defined(value)) {\r\n      return value;\r\n    }\r\n  }\r\n}\r\n\r\nfunction getKeysFromAllScopes(target) {\r\n  let keys = target._keys;\r\n  if (!keys) {\r\n    keys = target._keys = resolveKeysFromAllScopes(target._scopes);\r\n  }\r\n  return keys;\r\n}\r\n\r\nfunction resolveKeysFromAllScopes(scopes) {\r\n  const set = new Set();\r\n  for (const scope of scopes) {\r\n    for (const key of Object.keys(scope).filter(k => !k.startsWith('_'))) {\r\n      set.add(key);\r\n    }\r\n  }\r\n  return Array.from(set);\r\n}\r\n\r\nexport function _parseObjectDataRadialScale(meta, data, start, count) {\r\n  const {iScale} = meta;\r\n  const {key = 'r'} = this._parsing;\r\n  const parsed = new Array(count);\r\n  let i, ilen, index, item;\r\n\r\n  for (i = 0, ilen = count; i < ilen; ++i) {\r\n    index = i + start;\r\n    item = data[index];\r\n    parsed[i] = {\r\n      r: iScale.parse(resolveObjectKey(item, key), index)\r\n    };\r\n  }\r\n  return parsed;\r\n}\r\n","import {almostEquals, distanceBetweenPoints, sign} from './helpers.math';\r\nimport {_isPointInArea} from './helpers.canvas';\r\nimport {ChartArea} from '../../types';\r\n\r\nexport interface SplinePoint {\r\n  x: number;\r\n  y: number;\r\n  skip?: boolean;\r\n\r\n  // Both Bezier and monotone interpolations have these fields\r\n  // but they are added in different spots\r\n  cp1x?: number;\r\n  cp1y?: number;\r\n  cp2x?: number;\r\n  cp2y?: number;\r\n}\r\n\r\nconst EPSILON = Number.EPSILON || 1e-14;\r\n\r\ntype OptionalSplinePoint = SplinePoint | false\r\nconst getPoint = (points: SplinePoint[], i: number): OptionalSplinePoint => i < points.length && !points[i].skip && points[i];\r\nconst getValueAxis = (indexAxis: 'x' | 'y') => indexAxis === 'x' ? 'y' : 'x';\r\n\r\nexport function splineCurve(\r\n  firstPoint: SplinePoint,\r\n  middlePoint: SplinePoint,\r\n  afterPoint: SplinePoint,\r\n  t: number\r\n): {\r\n    previous: SplinePoint\r\n    next: SplinePoint\r\n  } {\r\n  // Props to Rob Spencer at scaled innovation for his post on splining between points\r\n  // http://scaledinnovation.com/analytics/splines/aboutSplines.html\r\n\r\n  // This function must also respect \"skipped\" points\r\n\r\n  const previous = firstPoint.skip ? middlePoint : firstPoint;\r\n  const current = middlePoint;\r\n  const next = afterPoint.skip ? middlePoint : afterPoint;\r\n  const d01 = distanceBetweenPoints(current, previous);\r\n  const d12 = distanceBetweenPoints(next, current);\r\n\r\n  let s01 = d01 / (d01 + d12);\r\n  let s12 = d12 / (d01 + d12);\r\n\r\n  // If all points are the same, s01 & s02 will be inf\r\n  s01 = isNaN(s01) ? 0 : s01;\r\n  s12 = isNaN(s12) ? 0 : s12;\r\n\r\n  const fa = t * s01; // scaling factor for triangle Ta\r\n  const fb = t * s12;\r\n\r\n  return {\r\n    previous: {\r\n      x: current.x - fa * (next.x - previous.x),\r\n      y: current.y - fa * (next.y - previous.y)\r\n    },\r\n    next: {\r\n      x: current.x + fb * (next.x - previous.x),\r\n      y: current.y + fb * (next.y - previous.y)\r\n    }\r\n  };\r\n}\r\n\r\n/**\r\n * Adjust tangents to ensure monotonic properties\r\n */\r\nfunction monotoneAdjust(points: SplinePoint[], deltaK: number[], mK: number[]) {\r\n  const pointsLen = points.length;\r\n\r\n  let alphaK: number, betaK: number, tauK: number, squaredMagnitude: number, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n  for (let i = 0; i < pointsLen - 1; ++i) {\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent || !pointAfter) {\r\n      continue;\r\n    }\r\n\r\n    if (almostEquals(deltaK[i], 0, EPSILON)) {\r\n      mK[i] = mK[i + 1] = 0;\r\n      continue;\r\n    }\r\n\r\n    alphaK = mK[i] / deltaK[i];\r\n    betaK = mK[i + 1] / deltaK[i];\r\n    squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\r\n    if (squaredMagnitude <= 9) {\r\n      continue;\r\n    }\r\n\r\n    tauK = 3 / Math.sqrt(squaredMagnitude);\r\n    mK[i] = alphaK * tauK * deltaK[i];\r\n    mK[i + 1] = betaK * tauK * deltaK[i];\r\n  }\r\n}\r\n\r\nfunction monotoneCompute(points: SplinePoint[], mK: number[], indexAxis: 'x' | 'y' = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  let delta: number, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n\r\n  for (let i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n\r\n    const iPixel = pointCurrent[indexAxis];\r\n    const vPixel = pointCurrent[valueAxis];\r\n    if (pointBefore) {\r\n      delta = (iPixel - pointBefore[indexAxis]) / 3;\r\n      pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\r\n      pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\r\n    }\r\n    if (pointAfter) {\r\n      delta = (pointAfter[indexAxis] - iPixel) / 3;\r\n      pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\r\n      pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * This function calculates Bézier control points in a similar way than |splineCurve|,\r\n * but preserves monotonicity of the provided data and ensures no local extremums are added\r\n * between the dataset discrete points due to the interpolation.\r\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\r\n */\r\nexport function splineCurveMonotone(points: SplinePoint[], indexAxis: 'x' | 'y' = 'x') {\r\n  const valueAxis = getValueAxis(indexAxis);\r\n  const pointsLen = points.length;\r\n  const deltaK: number[] = Array(pointsLen).fill(0);\r\n  const mK: number[] = Array(pointsLen);\r\n\r\n  // Calculate slopes (deltaK) and initialize tangents (mK)\r\n  let i, pointBefore: OptionalSplinePoint, pointCurrent: OptionalSplinePoint;\r\n  let pointAfter = getPoint(points, 0);\r\n\r\n  for (i = 0; i < pointsLen; ++i) {\r\n    pointBefore = pointCurrent;\r\n    pointCurrent = pointAfter;\r\n    pointAfter = getPoint(points, i + 1);\r\n    if (!pointCurrent) {\r\n      continue;\r\n    }\r\n\r\n    if (pointAfter) {\r\n      const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\r\n\r\n      // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\r\n      deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\r\n    }\r\n    mK[i] = !pointBefore ? deltaK[i]\r\n      : !pointAfter ? deltaK[i - 1]\r\n        : (sign(deltaK[i - 1]) !== sign(deltaK[i])) ? 0\r\n          : (deltaK[i - 1] + deltaK[i]) / 2;\r\n  }\r\n\r\n  monotoneAdjust(points, deltaK, mK);\r\n\r\n  monotoneCompute(points, mK, indexAxis);\r\n}\r\n\r\nfunction capControlPoint(pt: number, min: number, max: number) {\r\n  return Math.max(Math.min(pt, max), min);\r\n}\r\n\r\nfunction capBezierPoints(points: SplinePoint[], area: ChartArea) {\r\n  let i, ilen, point, inArea, inAreaPrev;\r\n  let inAreaNext = _isPointInArea(points[0], area);\r\n  for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n    inAreaPrev = inArea;\r\n    inArea = inAreaNext;\r\n    inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\r\n    if (!inArea) {\r\n      continue;\r\n    }\r\n    point = points[i];\r\n    if (inAreaPrev) {\r\n      point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\r\n      point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\r\n    }\r\n    if (inAreaNext) {\r\n      point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\r\n      point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _updateBezierControlPoints(\r\n  points: SplinePoint[],\r\n  options,\r\n  area: ChartArea,\r\n  loop: boolean,\r\n  indexAxis: 'x' | 'y'\r\n) {\r\n  let i: number, ilen: number, point: SplinePoint, controlPoints: ReturnType<typeof splineCurve>;\r\n\r\n  // Only consider points that are drawn in case the spanGaps option is used\r\n  if (options.spanGaps) {\r\n    points = points.filter((pt) => !pt.skip);\r\n  }\r\n\r\n  if (options.cubicInterpolationMode === 'monotone') {\r\n    splineCurveMonotone(points, indexAxis);\r\n  } else {\r\n    let prev = loop ? points[points.length - 1] : points[0];\r\n    for (i = 0, ilen = points.length; i < ilen; ++i) {\r\n      point = points[i];\r\n      controlPoints = splineCurve(\r\n        prev,\r\n        point,\r\n        points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen],\r\n        options.tension\r\n      );\r\n      point.cp1x = controlPoints.previous.x;\r\n      point.cp1y = controlPoints.previous.y;\r\n      point.cp2x = controlPoints.next.x;\r\n      point.cp2y = controlPoints.next.y;\r\n      prev = point;\r\n    }\r\n  }\r\n\r\n  if (options.capBezierPoints) {\r\n    capBezierPoints(points, area);\r\n  }\r\n}\r\n","import {ChartArea, Scale} from '../../types';\r\nimport Chart from '../core/core.controller';\r\nimport {ChartEvent} from '../types';\r\nimport {INFINITY} from './helpers.math';\r\n\r\n/**\r\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\r\n * necessary to avoid duplicates with `export * from './helpers`; see\r\n * https://github.com/microsoft/TypeScript/issues/46011\r\n * @typedef { import(\"../core/core.controller\").default } dom.Chart\r\n * @typedef { import('../../types').ChartEvent } ChartEvent\r\n */\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _isDomSupported(): boolean {\r\n  return typeof window !== 'undefined' && typeof document !== 'undefined';\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _getParentNode(domNode: HTMLCanvasElement): HTMLCanvasElement {\r\n  let parent = domNode.parentNode;\r\n  if (parent && parent.toString() === '[object ShadowRoot]') {\r\n    parent = (parent as ShadowRoot).host;\r\n  }\r\n  return parent as HTMLCanvasElement;\r\n}\r\n\r\n/**\r\n * convert max-width/max-height values that may be percentages into a number\r\n * @private\r\n */\r\n\r\nfunction parseMaxStyle(styleValue: string | number, node: HTMLElement, parentProperty: string) {\r\n  let valueInPixels: number;\r\n  if (typeof styleValue === 'string') {\r\n    valueInPixels = parseInt(styleValue, 10);\r\n\r\n    if (styleValue.indexOf('%') !== -1) {\r\n      // percentage * size in dimension\r\n      valueInPixels = (valueInPixels / 100) * node.parentNode[parentProperty];\r\n    }\r\n  } else {\r\n    valueInPixels = styleValue;\r\n  }\r\n\r\n  return valueInPixels;\r\n}\r\n\r\nconst getComputedStyle = (element: HTMLElement): CSSStyleDeclaration =>\r\n  element.ownerDocument.defaultView.getComputedStyle(element, null);\r\n\r\nexport function getStyle(el: HTMLElement, property: string): string {\r\n  return getComputedStyle(el).getPropertyValue(property);\r\n}\r\n\r\nconst positions = ['top', 'right', 'bottom', 'left'];\r\nfunction getPositionedStyle(styles: CSSStyleDeclaration, style: string, suffix?: string): ChartArea {\r\n  const result = {} as ChartArea;\r\n  suffix = suffix ? '-' + suffix : '';\r\n  for (let i = 0; i < 4; i++) {\r\n    const pos = positions[i];\r\n    result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\r\n  }\r\n  result.width = result.left + result.right;\r\n  result.height = result.top + result.bottom;\r\n  return result;\r\n}\r\n\r\nconst useOffsetPos = (x: number, y: number, target: HTMLElement | EventTarget) =>\r\n  (x > 0 || y > 0) && (!target || !(target as HTMLElement).shadowRoot);\r\n\r\n/**\r\n * @param e\r\n * @param canvas\r\n * @returns Canvas position\r\n */\r\nfunction getCanvasPosition(\r\n  e: Event | TouchEvent | MouseEvent,\r\n  canvas: HTMLCanvasElement\r\n): {\r\n    x: number;\r\n    y: number;\r\n    box: boolean;\r\n  } {\r\n  const touches = (e as TouchEvent).touches;\r\n  const source = (touches && touches.length ? touches[0] : e) as MouseEvent;\r\n  const {offsetX, offsetY} = source as MouseEvent;\r\n  let box = false;\r\n  let x, y;\r\n  if (useOffsetPos(offsetX, offsetY, e.target)) {\r\n    x = offsetX;\r\n    y = offsetY;\r\n  } else {\r\n    const rect = canvas.getBoundingClientRect();\r\n    x = source.clientX - rect.left;\r\n    y = source.clientY - rect.top;\r\n    box = true;\r\n  }\r\n  return {x, y, box};\r\n}\r\n\r\n/**\r\n * Gets an event's x, y coordinates, relative to the chart area\r\n * @param event\r\n * @param chart\r\n * @returns x and y coordinates of the event\r\n */\r\n\r\nexport function getRelativePosition(\r\n  event: Event | ChartEvent | TouchEvent | MouseEvent,\r\n  chart: Chart\r\n): { x: number; y: number } {\r\n  if ('native' in event) {\r\n    return event;\r\n  }\r\n\r\n  const {canvas, currentDevicePixelRatio} = chart;\r\n  const style = getComputedStyle(canvas);\r\n  const borderBox = style.boxSizing === 'border-box';\r\n  const paddings = getPositionedStyle(style, 'padding');\r\n  const borders = getPositionedStyle(style, 'border', 'width');\r\n  const {x, y, box} = getCanvasPosition(event, canvas);\r\n  const xOffset = paddings.left + (box && borders.left);\r\n  const yOffset = paddings.top + (box && borders.top);\r\n\r\n  let {width, height} = chart;\r\n  if (borderBox) {\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  return {\r\n    x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\r\n    y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\r\n  };\r\n}\r\n\r\nfunction getContainerSize(canvas: HTMLCanvasElement, width: number, height: number): Partial<Scale> {\r\n  let maxWidth: number, maxHeight: number;\r\n\r\n  if (width === undefined || height === undefined) {\r\n    const container = _getParentNode(canvas);\r\n    if (!container) {\r\n      width = canvas.clientWidth;\r\n      height = canvas.clientHeight;\r\n    } else {\r\n      const rect = container.getBoundingClientRect(); // this is the border box of the container\r\n      const containerStyle = getComputedStyle(container);\r\n      const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\r\n      const containerPadding = getPositionedStyle(containerStyle, 'padding');\r\n      width = rect.width - containerPadding.width - containerBorder.width;\r\n      height = rect.height - containerPadding.height - containerBorder.height;\r\n      maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\r\n      maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\r\n    }\r\n  }\r\n  return {\r\n    width,\r\n    height,\r\n    maxWidth: maxWidth || INFINITY,\r\n    maxHeight: maxHeight || INFINITY\r\n  };\r\n}\r\n\r\nconst round1 = (v: number) => Math.round(v * 10) / 10;\r\n\r\n// eslint-disable-next-line complexity\r\nexport function getMaximumSize(\r\n  canvas: HTMLCanvasElement,\r\n  bbWidth?: number,\r\n  bbHeight?: number,\r\n  aspectRatio?: number\r\n): { width: number; height: number } {\r\n  const style = getComputedStyle(canvas);\r\n  const margins = getPositionedStyle(style, 'margin');\r\n  const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\r\n  const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\r\n  const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\r\n  let {width, height} = containerSize;\r\n\r\n  if (style.boxSizing === 'content-box') {\r\n    const borders = getPositionedStyle(style, 'border', 'width');\r\n    const paddings = getPositionedStyle(style, 'padding');\r\n    width -= paddings.width + borders.width;\r\n    height -= paddings.height + borders.height;\r\n  }\r\n  width = Math.max(0, width - margins.width);\r\n  height = Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height - margins.height);\r\n  width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\r\n  height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\r\n  if (width && !height) {\r\n    // https://github.com/chartjs/Chart.js/issues/4659\r\n    // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\r\n    height = round1(width / 2);\r\n  }\r\n\r\n  const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\r\n\r\n  if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\r\n    height = containerSize.height;\r\n    width = round1(Math.floor(height * aspectRatio));\r\n  }\r\n\r\n  return {width, height};\r\n}\r\n\r\n/**\r\n * @param chart\r\n * @param forceRatio\r\n * @param forceStyle\r\n * @returns True if the canvas context size or transformation has changed.\r\n */\r\nexport function retinaScale(\r\n  chart: Chart,\r\n  forceRatio: number,\r\n  forceStyle?: boolean\r\n): boolean | void {\r\n  const pixelRatio = forceRatio || 1;\r\n  const deviceHeight = Math.floor(chart.height * pixelRatio);\r\n  const deviceWidth = Math.floor(chart.width * pixelRatio);\r\n\r\n  chart.height = deviceHeight / pixelRatio;\r\n  chart.width = deviceWidth / pixelRatio;\r\n\r\n  const canvas = chart.canvas;\r\n\r\n  // If no style has been set on the canvas, the render size is used as display size,\r\n  // making the chart visually bigger, so let's enforce it to the \"correct\" values.\r\n  // See https://github.com/chartjs/Chart.js/issues/3575\r\n  if (canvas.style && (forceStyle || (!canvas.style.height && !canvas.style.width))) {\r\n    canvas.style.height = `${chart.height}px`;\r\n    canvas.style.width = `${chart.width}px`;\r\n  }\r\n\r\n  if (chart.currentDevicePixelRatio !== pixelRatio\r\n      || canvas.height !== deviceHeight\r\n      || canvas.width !== deviceWidth) {\r\n    chart.currentDevicePixelRatio = pixelRatio;\r\n    canvas.height = deviceHeight;\r\n    canvas.width = deviceWidth;\r\n    chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\r\n    return true;\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Detects support for options object argument in addEventListener.\r\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\r\n * @private\r\n */\r\nexport const supportsEventListenerOptions = (function() {\r\n  let passiveSupported = false;\r\n  try {\r\n    const options = {\r\n      get passive() { // This function will be called when the browser attempts to access the passive property.\r\n        passiveSupported = true;\r\n        return false;\r\n      }\r\n    } as EventListenerOptions;\r\n\r\n    window.addEventListener('test', null, options);\r\n    window.removeEventListener('test', null, options);\r\n  } catch (e) {\r\n    // continue regardless of error\r\n  }\r\n  return passiveSupported;\r\n}());\r\n\r\n/**\r\n * The \"used\" size is the final value of a dimension property after all calculations have\r\n * been performed. This method uses the computed style of `element` but returns undefined\r\n * if the computed style is not expressed in pixels. That can happen in some cases where\r\n * `element` has a size relative to its parent and this last one is not yet displayed,\r\n * for example because of `display: none` on a parent node.\r\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\r\n * @returns Size in pixels or undefined if unknown.\r\n */\r\n\r\nexport function readUsedSize(\r\n  element: HTMLElement,\r\n  property: 'width' | 'height'\r\n): number | undefined {\r\n  const value = getStyle(element, property);\r\n  const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\r\n  return matches ? +matches[1] : undefined;\r\n}\r\n","import type {Point} from '../../types/geometric';\r\nimport type {SplinePoint} from './helpers.curve';\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _pointInLine(p1: Point, p2: Point, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: p1.y + t * (p2.y - p1.y)\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _steppedInterpolation(\r\n  p1: Point,\r\n  p2: Point,\r\n  t: number, mode: 'middle' | 'after' | unknown\r\n) {\r\n  return {\r\n    x: p1.x + t * (p2.x - p1.x),\r\n    y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y\r\n      : mode === 'after' ? t < 1 ? p1.y : p2.y\r\n        : t > 0 ? p2.y : p1.y\r\n  };\r\n}\r\n\r\n/**\r\n * @private\r\n */\r\nexport function _bezierInterpolation(p1: SplinePoint, p2: SplinePoint, t: number, mode?) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n  const cp1 = {x: p1.cp2x, y: p1.cp2y};\r\n  const cp2 = {x: p2.cp1x, y: p2.cp1y};\r\n  const a = _pointInLine(p1, cp1, t);\r\n  const b = _pointInLine(cp1, cp2, t);\r\n  const c = _pointInLine(cp2, p2, t);\r\n  const d = _pointInLine(a, b, t);\r\n  const e = _pointInLine(b, c, t);\r\n  return _pointInLine(d, e, t);\r\n}\r\n","export interface RTLAdapter {\r\n  x(x: number): number;\r\n  setWidth(w: number): void;\r\n  textAlign(align: 'center' | 'left' | 'right'): 'center' | 'left' | 'right';\r\n  xPlus(x: number, value: number): number;\r\n  leftForLtr(x: number, itemWidth: number): number;\r\n}\r\n\r\nconst getRightToLeftAdapter = function(rectX: number, width: number): RTLAdapter {\r\n  return {\r\n    x(x) {\r\n      return rectX + rectX + width - x;\r\n    },\r\n    setWidth(w) {\r\n      width = w;\r\n    },\r\n    textAlign(align) {\r\n      if (align === 'center') {\r\n        return align;\r\n      }\r\n      return align === 'right' ? 'left' : 'right';\r\n    },\r\n    xPlus(x, value) {\r\n      return x - value;\r\n    },\r\n    leftForLtr(x, itemWidth) {\r\n      return x - itemWidth;\r\n    },\r\n  };\r\n};\r\n\r\nconst getLeftToRightAdapter = function(): RTLAdapter {\r\n  return {\r\n    x(x) {\r\n      return x;\r\n    },\r\n    setWidth(w) { // eslint-disable-line no-unused-vars\r\n    },\r\n    textAlign(align) {\r\n      return align;\r\n    },\r\n    xPlus(x, value) {\r\n      return x + value;\r\n    },\r\n    leftForLtr(x, _itemWidth) { // eslint-disable-line @typescript-eslint/no-unused-vars\r\n      return x;\r\n    },\r\n  };\r\n};\r\n\r\nexport function getRtlAdapter(rtl: boolean, rectX: number, width: number) {\r\n  return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\r\n}\r\n\r\nexport function overrideTextDirection(ctx: CanvasRenderingContext2D, direction: 'ltr' | 'rtl') {\r\n  let style: CSSStyleDeclaration, original: [string, string];\r\n  if (direction === 'ltr' || direction === 'rtl') {\r\n    style = ctx.canvas.style;\r\n    original = [\r\n      style.getPropertyValue('direction'),\r\n      style.getPropertyPriority('direction'),\r\n    ];\r\n\r\n    style.setProperty('direction', direction, 'important');\r\n    (ctx as { prevTextDirection?: [string, string] }).prevTextDirection = original;\r\n  }\r\n}\r\n\r\nexport function restoreTextDirection(ctx: CanvasRenderingContext2D, original?: [string, string]) {\r\n  if (original !== undefined) {\r\n    delete (ctx as { prevTextDirection?: [string, string] }).prevTextDirection;\r\n    ctx.canvas.style.setProperty('direction', original[0], original[1]);\r\n  }\r\n}\r\n","import {_angleBetween, _angleDiff, _isBetween, _normalizeAngle} from './helpers.math';\r\nimport {createContext} from './helpers.options';\r\n\r\n/**\r\n * @typedef { import(\"../elements/element.line\").default } LineElement\r\n * @typedef { import(\"../elements/element.point\").default } PointElement\r\n * @typedef {{start: number, end: number, loop: boolean, style?: any}} Segment\r\n */\r\n\r\nfunction propertyFn(property) {\r\n  if (property === 'angle') {\r\n    return {\r\n      between: _angleBetween,\r\n      compare: _angleDiff,\r\n      normalize: _normalizeAngle,\r\n    };\r\n  }\r\n  return {\r\n    between: _isBetween,\r\n    compare: (a, b) => a - b,\r\n    normalize: x => x\r\n  };\r\n}\r\n\r\nfunction normalizeSegment({start, end, count, loop, style}) {\r\n  return {\r\n    start: start % count,\r\n    end: end % count,\r\n    loop: loop && (end - start + 1) % count === 0,\r\n    style\r\n  };\r\n}\r\n\r\nfunction getSegment(segment, points, bounds) {\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const {between, normalize} = propertyFn(property);\r\n  const count = points.length;\r\n  // eslint-disable-next-line prefer-const\r\n  let {start, end, loop} = segment;\r\n  let i, ilen;\r\n\r\n  if (loop) {\r\n    start += count;\r\n    end += count;\r\n    for (i = 0, ilen = count; i < ilen; ++i) {\r\n      if (!between(normalize(points[start % count][property]), startBound, endBound)) {\r\n        break;\r\n      }\r\n      start--;\r\n      end--;\r\n    }\r\n    start %= count;\r\n    end %= count;\r\n  }\r\n\r\n  if (end < start) {\r\n    end += count;\r\n  }\r\n  return {start, end, loop, style: segment.style};\r\n}\r\n\r\n/**\r\n * Returns the sub-segment(s) of a line segment that fall in the given bounds\r\n * @param {object} segment\r\n * @param {number} segment.start - start index of the segment, referring the points array\r\n * @param {number} segment.end - end index of the segment, referring the points array\r\n * @param {boolean} segment.loop - indicates that the segment is a loop\r\n * @param {object} [segment.style] - segment style\r\n * @param {PointElement[]} points - the points that this segment refers to\r\n * @param {object} [bounds]\r\n * @param {string} bounds.property - the property of a `PointElement` we are bounding. `x`, `y` or `angle`.\r\n * @param {number} bounds.start - start value of the property\r\n * @param {number} bounds.end - end value of the property\r\n * @private\r\n **/\r\nexport function _boundSegment(segment, points, bounds) {\r\n  if (!bounds) {\r\n    return [segment];\r\n  }\r\n\r\n  const {property, start: startBound, end: endBound} = bounds;\r\n  const count = points.length;\r\n  const {compare, between, normalize} = propertyFn(property);\r\n  const {start, end, loop, style} = getSegment(segment, points, bounds);\r\n\r\n  const result = [];\r\n  let inside = false;\r\n  let subStart = null;\r\n  let value, point, prevValue;\r\n\r\n  const startIsBefore = () => between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\r\n  const endIsBefore = () => compare(endBound, value) === 0 || between(endBound, prevValue, value);\r\n  const shouldStart = () => inside || startIsBefore();\r\n  const shouldStop = () => !inside || endIsBefore();\r\n\r\n  for (let i = start, prev = start; i <= end; ++i) {\r\n    point = points[i % count];\r\n\r\n    if (point.skip) {\r\n      continue;\r\n    }\r\n\r\n    value = normalize(point[property]);\r\n\r\n    if (value === prevValue) {\r\n      continue;\r\n    }\r\n\r\n    inside = between(value, startBound, endBound);\r\n\r\n    if (subStart === null && shouldStart()) {\r\n      subStart = compare(value, startBound) === 0 ? i : prev;\r\n    }\r\n\r\n    if (subStart !== null && shouldStop()) {\r\n      result.push(normalizeSegment({start: subStart, end: i, loop, count, style}));\r\n      subStart = null;\r\n    }\r\n    prev = i;\r\n    prevValue = value;\r\n  }\r\n\r\n  if (subStart !== null) {\r\n    result.push(normalizeSegment({start: subStart, end, loop, count, style}));\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n\r\n/**\r\n * Returns the segments of the line that are inside given bounds\r\n * @param {LineElement} line\r\n * @param {object} [bounds]\r\n * @param {string} bounds.property - the property we are bounding with. `x`, `y` or `angle`.\r\n * @param {number} bounds.start - start value of the `property`\r\n * @param {number} bounds.end - end value of the `property`\r\n * @private\r\n */\r\nexport function _boundSegments(line, bounds) {\r\n  const result = [];\r\n  const segments = line.segments;\r\n\r\n  for (let i = 0; i < segments.length; i++) {\r\n    const sub = _boundSegment(segments[i], line.points, bounds);\r\n    if (sub.length) {\r\n      result.push(...sub);\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Find start and end index of a line.\r\n */\r\nfunction findStartAndEnd(points, count, loop, spanGaps) {\r\n  let start = 0;\r\n  let end = count - 1;\r\n\r\n  if (loop && !spanGaps) {\r\n    // loop and not spanning gaps, first find a gap to start from\r\n    while (start < count && !points[start].skip) {\r\n      start++;\r\n    }\r\n  }\r\n\r\n  // find first non skipped point (after the first gap possibly)\r\n  while (start < count && points[start].skip) {\r\n    start++;\r\n  }\r\n\r\n  // if we looped to count, start needs to be 0\r\n  start %= count;\r\n\r\n  if (loop) {\r\n    // loop will go past count, if start > 0\r\n    end += start;\r\n  }\r\n\r\n  while (end > start && points[end % count].skip) {\r\n    end--;\r\n  }\r\n\r\n  // end could be more than count, normalize\r\n  end %= count;\r\n\r\n  return {start, end};\r\n}\r\n\r\n/**\r\n * Compute solid segments from Points, when spanGaps === false\r\n * @param {PointElement[]} points - the points\r\n * @param {number} start - start index\r\n * @param {number} max - max index (can go past count on a loop)\r\n * @param {boolean} loop - boolean indicating that this would be a loop if no gaps are found\r\n */\r\nfunction solidSegments(points, start, max, loop) {\r\n  const count = points.length;\r\n  const result = [];\r\n  let last = start;\r\n  let prev = points[start];\r\n  let end;\r\n\r\n  for (end = start + 1; end <= max; ++end) {\r\n    const cur = points[end % count];\r\n    if (cur.skip || cur.stop) {\r\n      if (!prev.skip) {\r\n        loop = false;\r\n        result.push({start: start % count, end: (end - 1) % count, loop});\r\n        // @ts-ignore\r\n        start = last = cur.stop ? end : null;\r\n      }\r\n    } else {\r\n      last = end;\r\n      if (prev.skip) {\r\n        start = end;\r\n      }\r\n    }\r\n    prev = cur;\r\n  }\r\n\r\n  if (last !== null) {\r\n    result.push({start: start % count, end: last % count, loop});\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n/**\r\n * Compute the continuous segments that define the whole line\r\n * There can be skipped points within a segment, if spanGaps is true.\r\n * @param {LineElement} line\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n * @private\r\n */\r\nexport function _computeSegments(line, segmentOptions) {\r\n  const points = line.points;\r\n  const spanGaps = line.options.spanGaps;\r\n  const count = points.length;\r\n\r\n  if (!count) {\r\n    return [];\r\n  }\r\n\r\n  const loop = !!line._loop;\r\n  const {start, end} = findStartAndEnd(points, count, loop, spanGaps);\r\n\r\n  if (spanGaps === true) {\r\n    return splitByStyles(line, [{start, end, loop}], points, segmentOptions);\r\n  }\r\n\r\n  const max = end < start ? end + count : end;\r\n  const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\r\n  return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\r\n}\r\n\r\n/**\r\n * @param {Segment[]} segments\r\n * @param {PointElement[]} points\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n */\r\nfunction splitByStyles(line, segments, points, segmentOptions) {\r\n  if (!segmentOptions || !segmentOptions.setContext || !points) {\r\n    return segments;\r\n  }\r\n  return doSplitByStyles(line, segments, points, segmentOptions);\r\n}\r\n\r\n/**\r\n * @param {LineElement} line\r\n * @param {Segment[]} segments\r\n * @param {PointElement[]} points\r\n * @param {object} [segmentOptions]\r\n * @return {Segment[]}\r\n */\r\nfunction doSplitByStyles(line, segments, points, segmentOptions) {\r\n  const chartContext = line._chart.getContext();\r\n  const baseStyle = readStyle(line.options);\r\n  const {_datasetIndex: datasetIndex, options: {spanGaps}} = line;\r\n  const count = points.length;\r\n  const result = [];\r\n  let prevStyle = baseStyle;\r\n  let start = segments[0].start;\r\n  let i = start;\r\n\r\n  function addStyle(s, e, l, st) {\r\n    const dir = spanGaps ? -1 : 1;\r\n    if (s === e) {\r\n      return;\r\n    }\r\n    // Style can not start/end on a skipped point, adjust indices accordingly\r\n    s += count;\r\n    while (points[s % count].skip) {\r\n      s -= dir;\r\n    }\r\n    while (points[e % count].skip) {\r\n      e += dir;\r\n    }\r\n    if (s % count !== e % count) {\r\n      result.push({start: s % count, end: e % count, loop: l, style: st});\r\n      prevStyle = st;\r\n      start = e % count;\r\n    }\r\n  }\r\n\r\n  for (const segment of segments) {\r\n    start = spanGaps ? start : segment.start;\r\n    let prev = points[start % count];\r\n    let style;\r\n    for (i = start + 1; i <= segment.end; i++) {\r\n      const pt = points[i % count];\r\n      style = readStyle(segmentOptions.setContext(createContext(chartContext, {\r\n        type: 'segment',\r\n        p0: prev,\r\n        p1: pt,\r\n        p0DataIndex: (i - 1) % count,\r\n        p1DataIndex: i % count,\r\n        datasetIndex\r\n      })));\r\n      if (styleChanged(style, prevStyle)) {\r\n        addStyle(start, i - 1, segment.loop, prevStyle);\r\n      }\r\n      prev = pt;\r\n      prevStyle = style;\r\n    }\r\n    if (start < i - 1) {\r\n      addStyle(start, i - 1, segment.loop, prevStyle);\r\n    }\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\nfunction readStyle(options) {\r\n  return {\r\n    backgroundColor: options.backgroundColor,\r\n    borderCapStyle: options.borderCapStyle,\r\n    borderDash: options.borderDash,\r\n    borderDashOffset: options.borderDashOffset,\r\n    borderJoinStyle: options.borderJoinStyle,\r\n    borderWidth: options.borderWidth,\r\n    borderColor: options.borderColor\r\n  };\r\n}\r\n\r\nfunction styleChanged(style, prevStyle) {\r\n  return prevStyle && JSON.stringify(style) !== JSON.stringify(prevStyle);\r\n}\r\n"],"names":["id","value","isNumberFinite","defaultValue","len","i","fn","v1","length","isArray","source","clone","isObject","Object","create","keys","klen","k","target","isValidKey","key","tval","sval","merge","options","sources","merger","current","ilen","mergeIf","_mergerIf","undefined","console","v","x","o","y","parts","split","tmp","part","slice","_getKeyResolver","resolveObjectKey","resolver","obj","_capitalize","str","charAt","item","e","type","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","epsilon","abs","roundedRange","Math","round","range","niceFraction","niceRange","result","sqrt","a","b","almostWhole","rounded","array","min","degrees","toDegrees","radians","isFiniteNumber","p","angle","distanceFromXCenter","distance","radialDistanceFromCenter","distanceBetweenPoints","TAU","_normalizeAngle","angleToStart","angleToEnd","endToAngle","sameAngleIsFullCircle","s","_limitValue","_lookup","table","cmp","index","hi","lo","mid","values","start","end","defineProperty","configurable","enumerable","listener","arrayEvents","forEach","method","base","args","res","apply","stub","_chartjs","listeners","indexOf","splice","Set","set","items","Array","from","fontString","pixelSize","fontStyle","fontFamily","callback","ticking","call","window","timeout","delay","check","align","_lookupByKey","count","max","animationsDisabled","xScale","xmin","xmax","ymin","ymax","meta","newRanges","changed","assign","atEdge","t","elasticIn","pow","sin","elasticOut","linear","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","effects","easeOutBounce","d","m","easeInOutBounce","isPatternOrGradient","toString","color","colorLib","getHoverColor","saturate","darken","hexString","numbers","colors","applyAnimationsDefaults","defaults","duration","easing","loop","to","describe","_fallback","_indexable","_scriptable","name","properties","active","animation","resize","show","animations","visible","hide","applyLayoutsDefaults","autoPadding","padding","top","right","bottom","left","intlCache","Map","getNumberFormat","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","formatNumber","num","format","notation","delta","logDelta","numDecimal","maximumFractionDigits","remain","ticks","formatters","tickValue","applyScaleDefaults","display","offset","reverse","beginAtZero","drawOnChartArea","tickColor","dash","dashOffset","width","text","minRotation","mirror","labelOffset","Ticks","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","overrides","descriptors","node","scope","getScope","root","_descriptors","events","font","family","size","style","lineHeight","weight","hover","ctx","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","scales","showLine","drawActiveElementsOnTop","_appliers","privateName","defineProperties","startsWith","textWidth","longest","_longestText","arrayOfThings","cache","data","gc","j","jlen","thing","restore","gcLen","devicePixelRatio","halfWidth","save","resetTransform","clearRect","canvas","drawPointLegend","translate","isNaN","radius","ellipse","w","rad","lineTo","closePath","cornerRadius","yOffset","arc","yOffsetW","xOffset","rect","xOffsetW","moveTo","stroke","margin","area","point","clipArea","unclipArea","_steppedLineTo","midpoint","previous","mode","lines","line","string","setRenderOpts","opts","strokeStyle","isNullOrUndef","strokeWidth","fillText","maxWidth","rotation","rotate","textBaseline","decorateText","strikethrough","metrics","yDecoration","beginPath","lineWidth","decorationWidth","oldColor","fillStyle","fillRect","topLeft","bottomLeft","topRight","LINE_HEIGHT","RegExp","FONT_STYLE","props","ret","_readValueToProps","fallback","inputs","info","cacheable","minmax","toDimension","keepZero","change","scopes","_getTarget","getTarget","override","_createResolver","prefixes","Proxy","Reflect","getPrototypeOf","getKeysFromAllScopes","_cacheable","proxy","_stack","descriptorDefaults","setContext","prop","_cached","_resolveWithContext","_allKeys","isIndexable","isFunction","hasOwnProperty","resolve","_proxy","_resolveScriptable","needsSubResolver","_context","_subProxy","delete","_resolveArray","defined","_scopes","arr","createSubResolver","parent","parentScopes","add","resolveFallback","rootScopes","allScopes","addScopesFromKey","subGetTarget","_resolve","_keys","resolveKeysFromAllScopes","filter","parsed","r","EPSILON","Number","getPoint","points","skip","getValueAxis","indexAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","alphaK","tauK","pointCurrent","pointAfter","pointsLen","almostEquals","mK","betaK","squaredMagnitude","deltaK","pointBefore","iPixel","vPixel","valueAxis","monotoneAdjust","monotoneCompute","inAreaPrev","_isPointInArea","inArea","inAreaNext","cp1x","capControlPoint","cp1y","cp2y","controlPoints","splineCurveMonotone","prev","capBezierPoints","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","getStyle","getPropertyValue","pos","styles","suffix","touches","offsetX","offsetY","box","useOffsetPos","clientY","event","currentDevicePixelRatio","borderBox","boxSizing","paddings","borders","height","maxHeight","clientHeight","container","containerBorder","containerStyle","containerPadding","bbWidth","margins","containerSize","bbHeight","round1","maintainHeight","aspectRatio","floor","chart","pixelRatio","deviceWidth","forceStyle","passiveSupported","addEventListener","match","p1","p2","_pointInLine","c","cp2","getRightToLeftAdapter","rectX","setWidth","textAlign","xPlus","leftForLtr","itemWidth","getLeftToRightAdapter","_itemWidth","getRtlAdapter","rtl","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","_angleDiff","_isBetween","normalize","bounds","segment","shouldStop","endIsBefore","between","subStart","compare","push","normalizeSegment","segments","sub","_boundSegment","last","cur","stop","findStartAndEnd","spanGaps","segmentOptions","completeLoop","doSplitByStyles","chartContext","baseStyle","datasetIndex","dir","l","p0DataIndex","p1DataIndex","addStyle","prevStyle","readStyle","backgroundColor","borderCapStyle","borderDash","borderDashOffset","borderWidth","borderColor"],"mappings":"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"}